@model AERP.ViewModel.AdminRoleModuleAccessViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<style>
    .bootgrid-header {
        padding: 0 25px 90px;
    }

    div.dataTables_filter {
        display: none;
        text-align: right;
    }

    div.dataTables_length {
        display: none;
    }
</style>
<div class="">

    <div id="createSpecialRights">
        <div class="block-header">
            <h2 style="text-transform: none;"><i class="zmdi zmdi-view-toc"></i>&nbsp;Create Special Rights</h2>
        </div>
        <div class="card">

            <form id="FormCreateAdminRoleModuleAccess" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.AdminRoleMasterID)
                @Html.HiddenFor(model => model.AdminRoleCode)
                @Html.HiddenFor(model => model.MonitoringLevel)
                @Html.HiddenFor(model => model.Entity)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.DepartmentIdWithName)
                @Html.HiddenFor(model => model.CentreCodeWithName)
                @Html.HiddenFor(model => model.ID)
                <div class="card-body card-padding">
                    <div class="row">
                        <h5>&nbsp;Role Details</h5>
                        <hr>
                        <div class="col-sm-12">
                            <div class="col-sm-6">
                                <span>@Html.LabelFor(m => m.AdminRoleCode)</span>
                                <div class="form-group fg-line">
                                    <input type="text" id="input01" placeholder="@Html.DisplayFor(model => model.AdminRoleCode, new { @class = "" })" disabled="disabled" class="form-control">
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <span>@Html.LabelFor(m => m.DesignationType)</span>
                                <div class="form-group fg-line">
                                    <input type="text" id="input02" placeholder="@Html.DisplayFor(model => model.DesignationType)" disabled="disabled" class="form-control">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-sm-6">
                                <span>@Resources.DisplayName_DepartmentName</span>
                                <div class="form-group fg-line">
                                    <input type="text" id="input03" placeholder="@Html.DisplayFor(model => model.DepartmentName)" disabled="disabled" class="form-control">
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <span>@Resources.DisplayName_CentreName</span>
                                <div class="form-group fg-line">
                                    <input type="text" id="input04" placeholder="@Html.DisplayFor(model => model.CentreName)" disabled="disabled" class="form-control">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="col-sm-6">
                                <span>Accessible Centre List</span>
                                <div class="form-group fg-line select">
                                    @Html.DropDownListFor(m => m.AccessibleCentreCode, Model.AccessibleCentreListItems, Resources.ddlHeaders_CentreName, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <span>Entity</span>
                                <div class="form-group fg-line select">
                                    @Html.DropDownListFor(m => m.EntityType, Model.EntityListItems, "---Select Entity---", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12" style="display:none;">
                            @if (Model.AdminRoleModuleAccessDTO.IsActive)
                            {

                                <div class="col-sm-6">
                                    <div class="checkbox m-b-15" style="padding-top:8%;">
                                        <label>
                                            <input type="checkbox" id="IsActive" checked>
                                            <i class="input-helper"></i>
                                            Is Active
                                        </label>
                                    </div>
                                </div>

                            }
                            else
                            {

                                <div class="col-sm-6">
                                    <div class="checkbox m-b-15" style="padding-top:8%;">
                                        <label>
                                            <input type="checkbox" id="IsActive">
                                            <i class="input-helper"></i>
                                            Is Active
                                        </label>
                                    </div>
                                </div>

                            }

                        </div>

                    </div>
                </div>
                <h5>&nbsp;@Resources.DisplayMessage_AllocateAdditionalRole</h5>
                <hr>

                <div class="bootgrid-header container-fluid" id="data-table-command-header">
                    @* DataTables_Table_1_wrapper*@
                    <div class="row" id="abc">

                        <table id="myCreateDataTable" class="table table-striped table-vmiddle table-responsive ">
                            <thead>
                                <tr>
                                    <th>Is Manager</th>
                                    <th>Entity</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>

                <div class="col-sm-3" style="margin-top:-45px">
                    <button type="button" id="CreateAdminRoleModuleAccessRecord" class="btn btn-primary" style="">Submit</button>
                </div>
            </form>

        </div>
    </div>
</div>

<script type="text/javascript">
    var oTable;
    $(document).ready(function () {
        var oTable;
        AdminRoleModuleAccess.Initialize();
        var entity_type = $('input[name=Entity]').val();
        var centreCode = $('#AccessibleCentreCode :selected').val();

        if (entity_type != '') {

            oTable = $('#myCreateDataTable').DataTable({
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "AccessibleCentreCode", "value": $('#AccessibleCentreCode :selected').val() });
                    aoData.push({ "name": "MonitoringLevel", "value": $('input[name=MonitoringLevel]').val() });
                    aoData.push({ "name": "EntityType", "value": $('input[name=Entity]').val() });
                    aoData.push({ "name": "AdminRoleMasterID", "value": $('input[name=ID]').val() });
                },
                "bServerSide": true,
                "sAjaxSource": "AdminRoleModuleAccess/AjaxHandlerForCreate",
                "bJQueryUI": true,
                "sScrollY": false,
                "bProcessing": true,
                "bPaginationType": false,
                "oLanguage": {
                    "sInfoEmpty": "No entries to show",
                },

                "columnDefs": [
                                 {
                                     "targets": 0,

                                     "data": null,
                                     "render": function (data, type, full, meta) {
                                         var chkStatus = '';
                                         if (data[0] == "True") {
                                             chkStatus = 'checked';
                                         }
                                         else {
                                             chkStatus = '';
                                         }
                                         var result = '<input id="IsActive1" value="' + data[2] + '~' + data[3] + '~' + centreCode + '" class="chkStatus_TF" type="checkbox" ' + chkStatus + ' />';
                                         return result;

                                     }
                                 },
                                 {
                                     "targets": 1,

                                     "data": null,
                                     "render": function (data, type, full, meta) {
                                         var result = "<p  style='text-align: left;'>" + data[1] + "</p>";
                                         return result;
                                     }
                                 },
                ],
            });
            DataTableSettings(oTable, "myCreateDataTable", "toggleTableColumn");
        }
    });
    $('#myCreateDataTable_info').hide();
    $('#myCreateDataTable_paginate').hide();
</script>




