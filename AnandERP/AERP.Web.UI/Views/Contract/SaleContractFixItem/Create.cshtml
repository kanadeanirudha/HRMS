@model AERP.ViewModel.SaleContractFixItemViewModel

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Fix Item</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateSaleContractFixItem">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="col-sm-12">
                    <div class="col-sm-6">

                        @Html.HiddenFor(m => m.CustomerMasterID)
                        @Html.LabelFor(model => model.CustomerMasterName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.CustomerMasterName, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CustomerMasterName)
                    </div>

                    <div class="col-sm-6">
                        @Html.HiddenFor(m => m.CustomerBranchMasterID)
                        @Html.LabelFor(model => model.CustomerBranchMasterName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.CustomerBranchMasterName, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CustomerBranchMasterName)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.HiddenFor(m => m.SaleContractManPowerItemID)
                        @Html.LabelFor(model => model.SaleContractManPowerItemName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.SaleContractManPowerItemName, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SaleContractManPowerItemName)
                    </div>
                    <div class="col-sm-6">
                        
                        @Html.HiddenFor(m => m.ItemNumber)
                        @Html.LabelFor(model => model.ItemDescription, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.ItemDescription, new { @class = "form-control", maxlength = "60", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ItemDescription)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Name, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
                
                <div class="form-group" style="margin-left: 2%; ">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateSaleContractFixItemRecord" type="button" />
                    <input name="" id="reset" type="submit" class="btn btn-default" value="@Resources.ButtonAction_Reset" />
                </div>
            </form>

        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>



<script type="text/javascript">
    $(document).ready(function () {
        SaleContractFixItem.Initialize();

        mapCustomerMasterName = [];
        var getDataCustomerMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerMasterSearchList",
                    type: "POST",
                    data: { term: q },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerMasterName)) {
                                mapCustomerMasterName[response.CustomerMasterName] = response;
                                matches.push(response.CustomerMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerMasterName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataCustomerMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerMasterID").val(mapCustomerMasterName[item].CustomerMasterID);
            $("#CustomerMasterName").val(mapCustomerMasterName[item].CustomerMasterName);
            $("#CustomerType").val(mapCustomerMasterName[item].CustomerType);

            if (mapCustomerMasterName[item].CustomerType == 1) {
                $("#CustomerBranchMasterID").val("0");
                $("#CustomerBranchMasterName").val("");
                $("#CustomerBranchMasterName").prop("disabled", true);
            } else {
                $("#CustomerBranchMasterName").prop("disabled", false);
            }

        });

        mapCustomerBranchMasterName = [];
        var getDataCustomerBranchMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerBranchMasterSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerBranchMasterName)) {
                                mapCustomerBranchMasterName[response.CustomerBranchMasterName] = response;
                                matches.push(response.CustomerBranchMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerBranchMasterName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataCustomerBranchMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerBranchMasterID").val(mapCustomerBranchMasterName[item].CustomerBranchMasterID);
            $("#CustomerBranchMasterName").val(mapCustomerBranchMasterName[item].CustomerBranchMasterName);
        });

        $('#CustomerMasterName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#CustomerMasterName').typeahead('val', '');
                $("#CustomerMasterName").val("");
                $("#CustomerMasterID").val("");
                $('#CustomerBranchMasterName').typeahead('val', '');
                $("#CustomerBranchMasterID").val("0");
                $("#CustomerBranchMasterName").val("");
            }
        });
        $('#CustomerBranchMasterName').on("keydown", function (e) {

            if ($("#CustomerMasterID").val() == "0" && e.keyCode != 9) {
                notify("Please Select Customer", "warning");
                return false;
            }
            if ($("#CustomerMasterID").val() != "0" && $("#CustomerType").val() == "1" && e.keyCode != 9) {
                return false;
            }

            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#CustomerBranchMasterName').typeahead('val', '');
                $("#CustomerBranchMasterName").val("");
                $("#CustomerBranchMasterID").val("0");
            }
        });

        mapSaleContractManPowerItem = [];
        var getDataSaleContractManPowerItem = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/SaleContractManPowerItem/GetSaleContractManPowerItemSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val(), CustomerBranchMasterID: $("#CustomerBranchMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.SaleContractManPowerItemName)) {
                                mapSaleContractManPowerItem[response.SaleContractManPowerItemName] = response;
                                matches.push(response.SaleContractManPowerItemName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#SaleContractManPowerItemName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataSaleContractManPowerItem()
        }).on("typeahead:selected", function (obj, item) {
            $("#SaleContractManPowerItemID").val(mapSaleContractManPowerItem[item].SaleContractManPowerItemID);
            $("#SaleContractManPowerItemName").val(mapSaleContractManPowerItem[item].SaleContractManPowerItemName);
        });

        $('#SaleContractManPowerItemName').on("keydown", function (e) {
            if ($("#CustomerMasterID").val() == "0" || $("#CustomerMasterID").val() == "") {
                notify("Please select Customer.", "warning");
                return false;
            }
            if ($("#CustomerType").val() == "2" && ($("#CustomerBranchMasterID").val() == "" || $("#CustomerBranchMasterID").val() == "0")) {
                notify("Please select Branch.", "warning");
                return false;
            }
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#SaleContractManPowerItemName').typeahead('val', '');
                $("#SaleContractManPowerItemName").val("");
                $("#SaleContractManPowerItemID").val("");
            }
        });
    });
</script>



