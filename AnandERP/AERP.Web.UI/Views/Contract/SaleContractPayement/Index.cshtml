@model AERP.ViewModel.SaleContractPayementViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Content/Theme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<style type="text/css">
    .mfp-content {
        width: 70%;
    }
</style>
<script src="@Url.Content("~/Scripts/AERP_Scripts/Contract/SaleContractPayement.js")" type="text/javascript"></script>
<div class="container">
    <div class="block-header">
        <h2 style="text-transform: none;"><i class="zmdi zmdi-view-toc"></i>&nbsp;Manage Contract Payement</h2>
    </div>
    <div class="card" style="margin-bottom: 0px;">
       
        <form id="FormCreateSaleContractPayementMaster">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="SectionErrorMessage"></p>
            </div>
            <div class="card-body card-padding">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.HiddenFor(model => model.CustomerMasterID)
                            @Html.HiddenFor(model => model.CustomerType)
                            @Html.HiddenFor(model => model.CreatedBy )

                            @Html.LabelFor(model => model.CustomerName, new { })
                            @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control input-sm typeahead" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.HiddenFor(model => model.CustomerBranchMasterID)
                            @Html.LabelFor(model => model.CustomerBranchMasterName, new { })
                            @Html.TextBoxFor(model => model.CustomerBranchMasterName, new { @class = "form-control input-sm typeahead" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-5">
                        <div class="form-group fg-line">
                            @Html.HiddenFor(model => model.ContractMasterID)

                            @Html.LabelFor(model => model.ContractNumber, new { })
                            @Html.TextBoxFor(model => model.ContractNumber, new { @class = "form-control input-sm typeahead" })
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="select form-group fg-line">
                            @Html.LabelFor(model => model.SaleContractBillingSpanID, new { })
                            @Html.DropDownListFor(model => model.SaleContractBillingSpanID, Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control input-sm" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SaleContractBillingSpanID)
                    </div>
                    
                    <div class="col-sm-2" >
                        <button type="button" class="btn btn-primary" id="btnShowList" style="margin-top:10%" >@Resources.GlobalProperties_ShowList</button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group" style="padding-top: 1%;">
                            @Html.LabelFor(model => model.payementmode, new { style = "" }) &nbsp;

                            <label class="radio radio-inline m-r-10">
                                @Html.RadioButtonFor(model => model.payementmode, true, new { @checked = true, id = "Cash" })&nbsp;Cash &nbsp;&nbsp;&nbsp;
                                <i class="input-helper"></i>
                            </label>

                            <label class="radio radio-inline m-r-10">
                                @Html.RadioButtonFor(model => model.payementmode, false, new { id = "Bank" })&nbsp;Bank
                                <i class="input-helper"></i>
                            </label>
                        </div>
                    </div>
                    
                    <div class="form-group col-sm-3">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.PaidAmount, new { })
                        </div>
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PaidAmount, new { @class = "form-control input-sm ", disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div id="BankDetails" style="display:none" class="row">
                    <h4>Bank Details</h4><hr>
                    <div class="row">
                        <div class="col-sm-4"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.BankName)
                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control input-sm",maxlength="35" })
                        </div>
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.BranchName)
                            @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control input-sm" , maxlength = "35" })
                        </div>
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.BankAddress)
                            @Html.TextBoxFor(model => model.BankAddress, new { @class = "form-control input-sm", maxlength = "35" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-sm-4">
                            @Html.LabelFor(model => model.AccountNo)
                            @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control input-sm" , maxlength = "25" })
                        </div>
                        <div class="col-sm-4"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.IFSCCode)
                            @Html.TextBoxFor(model => model.IFSCCode, new { @class = "form-control input-sm",maxlength = "20" })
                        </div>
                        <div class="col-sm-4"><span style="color:red">*</Span>
                            @Html.LabelFor(model => model.ChequeNumber)
                            @Html.TextBoxFor(model => model.ChequeNumber, new { @class = "form-control input-sm", maxlength = "30" })
                        </div>
                        
                    </div>
                </div>
                <div class="row">
                    <h4>Contract Details</h4>
                    <div id="ListViewModel" class="">
                        <div id="DivAddRowTable">
                            <table id="tblDataInvoice" class="table table-striped ">
                                <thead>
                                    <tr>
                                        <th style="display: none"></th>
                                        <th class="center">
                                            @*<input type="checkbox" id="Check" class="checkall-user" name="checkbox12" disabled="disabled">*@
                                            <div class="checkbox m-b-15" style="display:none">
                                                <label style="">
                                                    <input type="checkbox" id="Check" class="checkall-user" name="checkbox12" checked>
                                                    <i class="input-helper"></i>
                                                </label>
                                            </div>
                                        </th>
                                        <th>Employee Name</th>
                                        <th>Payement</th>

                                    </tr>
                                </thead>
                                <tbody id="tbltbody"></tbody>
                            </table><br /><br /><br /><br />
                        </div>
                    </div>
                </div>

                <div class="col-sm-3 pull-right">
                    <button type="button" id="CreateSaleContractPayementRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
            <hr />
        </form>
    </div>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        SaleContractPayement.Initialize();
        //CustomerMaster serachlist
        mapCustomerName = [];
        var getDataCustomerName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerMasterSearchList",
                    type: "POST",
                    data: { term: q },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerMasterName)) {
                                mapCustomerName[response.CustomerMasterName] = response;
                                matches.push(response.CustomerMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataCustomerName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerMasterID").val(mapCustomerName[item].CustomerMasterID);
            $("#CustomerName").val(mapCustomerName[item].CustomerMasterName);
            $("#CustomerType").val(mapCustomerName[item].CustomerType);
            $("#CreditAmount").val(mapCustomerName[item].CreditAmount);
            if ($("#CustomerType").val() == 1) {
                $('#CustomerBranchMasterName').prop('disabled', true);
                $('#CustomerBranchMasterName').val("");
                $('#CustomerContactPersonName').val("");
                $('#CreditAmount').val(mapCustomerName[item].CreditAmount)
            }
            else {
                $('#CustomerBranchMasterName').prop('disabled', false);
                $('#CustomerBranchMasterName').val("");
                $('#CustomerContactPersonName').val("");
                $('#CreditAmount').val(0)
            }
        });

        //Branch master Name
        mapCustomerBranchMasterName = [];
        var getDataCustomerBranchMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerBranchMasterSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerBranchMasterName)) {
                                mapCustomerBranchMasterName[response.CustomerBranchMasterName] = response;
                                matches.push(response.CustomerBranchMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#CustomerBranchMasterName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataCustomerBranchMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerBranchMasterID").val(mapCustomerBranchMasterName[item].CustomerBranchMasterID);
            $("#CustomerBranchMasterName").val(mapCustomerBranchMasterName[item].CustomerBranchMasterName);
            $('#CreditAmount').val(mapCustomerBranchMasterName[item].CreditAmount)
        });
        $('#CustomerName').on("keydown", function (e) {
            debugger;
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#CustomerName').typeahead('val', '');
                $('#CustomerName').val("");
                $('#CustomerBranchMasterName').prop('disabled', false);
                $('#CustomerBranchMasterName').val("");
                $('#CustomerBranchMasterName').typeahead('val', '');
                $("#CustomerMasterID").val("");
                $('#CustomerBranchMasterID').val('0');
                $('#CustomerMasterID').val('0');
                $("#tblDataInvoice tbody tr").remove();
                $("#PaidAmount").val("");
                $("#ContractNumber").val("");
                $("#ContractNumber").typeahead('val', '');
                $("#SaleContractMasterID").val("0");
                $("#SaleContractBillingSpanID").val("");

            }
        });

        $("#CustomerBranchMasterName").on("keydown", function (e) {
            if ($("#CustomerName").val() == "" && ($("#CustomerMasterID").val() == "" || $("#CustomerMasterID").val() == 0)) {
                $("#displayErrorMessage").text("Please Select Customer.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#CustomerBranchMasterName').val("");
                $('#CustomerBranchMasterName').typeahead('val', '');
                $('#CustomerBranchMasterID').val('0');
                $("#tblDataInvoice tbody tr").remove();
                $("#PaidAmount").val("");
                $("#ContractNumber").val("");
                $("#ContractNumber").typeahead('val', '');
                $("#SaleContractMasterID").val("0");
                $("#SaleContractBillingSpanID").val("");
            }
        });

        //Contract searchlist

        //CustomerMaster serachlist
        mapContractNumber = [];
        var getDataContractNumber = function () {
            debugger;
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/SaleContractPayement/GetContractNumberSearchListByCustomer",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val(), CustomerBranchMasterID: $("#CustomerBranchMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.ContractNumber)) {
                                mapContractNumber[response.ContractNumber] = response;
                                matches.push(response.ContractNumber);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#ContractNumber").typeahead({

            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataContractNumber()
        }).on("typeahead:selected", function (obj, item) {
            $("#ContractMasterID").val(mapContractNumber[item].ContractMasterID);
            $.ajax({
                cache: false,
                type: "POST",
                dataType: "json",
                data: { "SaleContractMasterID": mapContractNumber[item].ContractMasterID },
                url: '/SaleContractAttendance/GetSpanBySaleContractMasterID',
                success: function (data) {
                    var $ddlExam = $("#SaleContractBillingSpanID");
                    $ddlExam.html('');
                    $ddlExam.append('<option value="">---Select Span---</option>');
                    if (data.length != 0) {
                        $.each(data, function (id, option) {
                            $ddlExam.append($('<option></option>').val(option.id).html(option.name));

                        });
                    }
                    else {
                        // $ddlExam.append('<option value="EA">EA</option>');
                    }
                }
            });

        });
        //Code ends For Contract
        $('#CustomerName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#CustomerName').typeahead('val', '');
                $('#CustomerName').val("");
                $('#CustomerBranchMasterName').prop('disabled', false);
                $('#CustomerBranchMasterName').val("");
                $("#CustomerMasterID").val("");
                $('#CustomerBranchMasterID').val('0');
            }
        });
        $("#CustomerBranchMasterName").on("keydown", function (e) {
            if ($("#CustomerName").val() == "" && ($("#CustomerMasterID").val() == "" || $("#CustomerMasterID").val() == 0)) {
                $("#displayErrorMessage").text("Please Select Customer.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#CustomerBranchMasterName').val("");
                $('#CustomerBranchMasterName').typeahead('val', '');
                $('#CustomerBranchMasterID').val('0');

            }
        });

        $('#ContractNumber').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#ContractNumber').typeahead('val', '');
                $("#ContractNumber").val("");
                $("#SaleContractMasterID").val("0");
                $("#SaleContractBillingSpanID").val("");
                $("#SaleContractBillingSpanID").html('--Select Span--');
                $("#tblDataInvoice tbody").html('');


            }
        });
        SaleContractPayement.CheckedAll();

        $(".checkall-user").prop("disabled", false);
        $("#tblDataInvoice").on("click", "tbody tr td .check-user", function () {
            var a = (parseInt($(".check-user").length));
            var b = parseInt($(".check-user:checked").length);
            if (a != b) {
                $("input[class=checkall-user]").attr("checked", false);
            }
            else {
                $("input[class=checkall-user]").prop("checked", true);
            }
        });

    });


</script>
