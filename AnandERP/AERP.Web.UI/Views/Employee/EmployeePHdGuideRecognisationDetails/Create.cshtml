@*@model AMS.ViewModel.EmployeePHdGuideRecognisationDetailsViewModel
@{
    Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">
            @if (Model.EmployeePHdGuideStudentsDetailsID > 0)
	        {
                @Resources.FormName_UpdateEmployeePHdGuideStudentsDetails
	        }
            else
	        {
                @Resources.FormName_CreateEmployeePHdGuideStudentsDetails
	        }

            
        </h5>

    </div>

    <div class="widget-content">
        <form id="FormEmployeePHdGuideStudentsDetails" method="post" class="form-horizontal well">

            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.EmployeePHdGuideStudentsDetailsID)
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.StudentName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextBoxFor(model => model.StudentName, new { style = "width:106%;font-Weight:Bold;", maxlength = "100" })
                            <br />
                            @Html.ValidationMessageFor(m => m.StudentName)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PersuingFromDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">

                            @Html.TextBoxFor(model => model.PersuingFromDate, new { @class = "txtbox", @readonly = "readonly" })
                            <br />
                            @Html.ValidationMessageFor(m => m.PersuingFromDate)

                        </div>
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PersuingUptoDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.PersuingUptoDate, new { @class = "txtbox", @readonly = "readonly" })
                            <br />
                            @Html.ValidationMessageFor(m => m.PersuingUptoDate)
                        </div>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.ApprovalDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.ApprovalDate, new { @class = "txtbox", @readonly = "readonly" })
                            <br />
                            @Html.ValidationMessageFor(m => m.ApprovalDate)


                        </div>
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.ApprovalStatus, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownList("ApprovalStatus", ViewData["ApprovalStatus"] as List<SelectListItem>, new { style = "width:210px; font-Weight:Bold;", @class = "dropdown1" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.Synopsis, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextAreaFor(model => model.Synopsis, new { style = "width:106%;font-Weight:Bold;", maxlength = "500" })
                            <br />
                            @Html.ValidationMessageFor(m => m.Synopsis)
                        </div>
                    </div>
                </div>
            </div>



            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.EmployeePHdGuideStudentsDetailsRemarks, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextAreaFor(model => model.EmployeePHdGuideStudentsDetailsRemarks, new { style = "width:106%;font-Weight:Bold;", maxlength = "200" })
                          
                        </div>
                    </div>
                </div>
            </div>





            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right">
                <button type="button" id="btnEmployeePHdGuideStudentsDetails" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                
            </div>
        </form>
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {
        EmployeePHdGuideRecognisationDetails.Initialize();
    });
</script>*@


@*------------------new code---------------------------------*@


@model AMS.ViewModel.EmployeePHdGuideRecognisationDetailsViewModel
@{

    Layout = null;
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;
        @if (Model.EmployeePHdGuideStudentsDetailsID > 0)
        {
            @Resources.FormName_UpdateEmployeePHdGuideStudentsDetails
        }
        else
        {
            @Resources.FormName_CreateEmployeePHdGuideStudentsDetails
        } </h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-bottom:350px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <div id="update-message" class="alert" style="display: none; color: #000"></div>

            <form id="FormEmployeePHdGuideStudentsDetails" method="post">
                @Html.HiddenFor(m => m.ID)
                @Html.HiddenFor(m => m.EmployeePHdGuideStudentsDetailsID)
                <div class="col-sm-12">
                    <div class="col-sm-12">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.StudentName, new { style = "" })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.StudentName, new { @class = "form-control", style = "", maxlength = "100" })
                        </div>
                        @Html.ValidationMessageFor(m => m.StudentName)
                    </div>

                    
                </div>
                
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PersuingFromDate, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.PersuingFromDate, new { @class = "form-control", @readonly = "readonly", style = "background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.PersuingFromDate)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PersuingUptoDate, new { style = "" })
                        <div class="form-group fg-line">
                            @Html.TextBoxFor(model => model.PersuingUptoDate, new { @class = "form-control", @readonly = "readonly",style="background-color:#fff;" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PersuingUptoDate)
                    </div>

                    
                </div>

                <div class="col-sm-12">
                    
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.ApprovalDate, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.ApprovalDate, new { @class = "form-control", style = "background-color:#fff;", @readonly = "readonly" })
                        </div>
                        @Html.ValidationMessageFor(m => m.ApprovalDate)
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.ApprovalStatus, new { style = "" })
                        <div class="form-group fg-line select">
                            @Html.DropDownList("ApprovalStatus", ViewData["ApprovalStatus"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.Synopsis, new { style = "" })
                        <div class="form-group fg-line">
                            @Html.TextAreaFor(model => model.Synopsis, new { @class = "form-control", style = "", maxlength = "500" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Synopsis)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.EmployeePHdGuideStudentsDetailsRemarks, new { style = "" })
                        <div class="form-group fg-line">
                            @Html.TextAreaFor(model => model.EmployeePHdGuideStudentsDetailsRemarks, new { @class = "form-control",style = "", maxlength = "200" })
                        </div>
                    </div>
                </div>
                
                

                <div class="col-sm-12">
                    <div class="form-group">
                        <button type="button" id="btnEmployeePHdGuideStudentsDetails" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                        <button type="button" id="reset" class="btn btn-default">@Resources.ButtonAction_Reset</button>

                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        EmployeePHdGuideRecognisationDetails.Initialize();
    });
</script>







