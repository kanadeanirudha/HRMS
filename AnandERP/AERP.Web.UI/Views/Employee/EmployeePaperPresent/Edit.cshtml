@*@model AMS.ViewModel.EmployeePaperPresentViewModel
@{
  
    Layout = null;
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">@Resources.FormEdit_PaperPresentationDetails
            
        </h5>

    </div>
    <div class="widget-box" id="EmployeePaperPresent">

        <form id="FormEditEmployeePaperPresent" method="post" class="form-horizontal well">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.EmployeeID)
            <input type="hidden" id="paperPresentID" value="@ViewBag.ID" />
            <div class="row">
                <div class="span10">
                   
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PaperTopic, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextBoxFor(model => model.PaperTopic, new { @class = "txtbox", style = "width:107%", disabled = "disabled" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.JournalName, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span7">
                            @Html.TextBoxFor(model => model.JournalName, new { @class = "txtbox", style = "width:107%", disabled = "disabled" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.JournalVolumeNumber, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.JournalVolumeNumber, new { @class = "txtbox", disabled = "disabled" })

                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.JournalPageNumber, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.JournalPageNumber, new { @class = "txtbox", disabled = "disabled" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.EmployeeYear, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownList("EmployeeYear", ViewData["EmployeeYear"] as List<SelectListItem>, new { style = "width:210px;font-weight:bold", @class = "dropdown1", disabled = "disabled" })

                        </div>

                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PaperType, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownList("PaperType", ViewData["PaperType"] as List<SelectListItem>, new { style = "width:220px;font-weight:bold;", @class = "dropdown1", disabled = "disabled" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.GeneralLevelMasterIDForPprPresent, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.DropDownListFor(model => model.GeneralLevelMasterIDForPprPresent, (SelectList)ViewBag.GeneralLevelMasterForPprPresent, Resources.ddlHeaders_SelectLevel, new { @class = "form-control chosen-select", style = "font-weight:bold;", disabled = "disabled" })

                        </div>
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PublishMedium, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.DropDownList("PublishMedium", ViewData["PublishMedium"] as List<SelectListItem>, new { style = "width:220px;font-weight:bold;", @class = "dropdown1", disabled = "disabled" })

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.PublishDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextBoxFor(model => model.PublishDate, new { @class = "txtbox", disabled = "disabled" })

                        </div>

                         <div class="spanFullName">
                           @Html.LabelFor(model => model.SelfGroupPresenter, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                          @Html.DropDownList("SelfGroupPresenter", ViewData["SelfGroupPresenter"] as List<SelectListItem>, new { style = "width:220px;font-weight:bold;", @class = "dropdown1" })
                         
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.EmployeeArticleReview, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span3">
                            @Html.TextAreaFor(m => m.EmployeeArticleReview, new { @class = "txtbox", disabled = "disabled" })

                        </div>
                        <div class="spanFullName">
                            @Html.LabelFor(model => model.EmployeeBookReview, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextAreaFor(model => model.EmployeeBookReview, new { @class = "txtbox", disabled = "disabled" })

                        </div>
                    </div>
                </div>
            </div>
            <fieldset>
                <legend>
                    <h4>Conference</h4>
                </legend>
                <div class="row">
                    <div class="span10">
                        <div class="row control-group">
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.ConferenceName, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span3">
                                @Html.TextBoxFor(m => m.ConferenceName, new { @class = "txtbox", disabled = "disabled" })

                            </div>
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeConferenceVenue, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span2">
                                @Html.TextBoxFor(model => model.EmployeeConferenceVenue, new { @class = "txtbox", disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="span10">
                        <div class="row control-group">
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeConferenceDateFrom, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span3">
                                @Html.TextBoxFor(model => model.EmployeeConferenceDateFrom, new { disabled = "disabled" })

                            </div>
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeConferenceDateTo, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span2">
                                @Html.TextBoxFor(model => model.EmployeeConferenceDateTo, new {  @class = "txtbox", disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="span10">
                        <div class="row control-group">
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeProceedingPageNumber, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span3">
                                @Html.TextBoxFor(model => model.EmployeeProceedingPageNumber, new { @class = "txtbox", disabled = "disabled" })

                            </div>
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeConferenceProceeding, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span2">
                                @Html.TextBoxFor(model => model.EmployeeConferenceProceeding, new { @class = "txtbox", disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <legend>
                    <h4>Paper Presenter Details</h4>
                </legend>
                <div class="row">
                    <div class="span10">
                        <div class="row control-group">
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.EmployeeParticipationRole, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span3">
                                @Html.DropDownList("EmployeeParticipationRole", ViewData["EmployeeParticipationRole"] as List<SelectListItem>, new { style = "width:220px;font-weight:bold;", @class = "dropdown1" })
                                  <br />
                                @Html.ValidationMessageFor(model=>model.EmployeeParticipationRole)
                            </div>
                            <div class="spanFullName">
                                @Html.LabelFor(model => model.IsActive, new { style = "font-Weight:Bold;" })
                            </div>
                            <div class="span2">
                                @Html.EditorFor(model => model.IsActive)

                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right">
                <button type="button" id="EditEmployeePaperPresentRecord" class="btn btn-primary">@Resources.ButtonAction_SaveChanges</button>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        EmployeePaperPresent.Initialize();
    });

</script>*@

<!--new code-->


@model AMS.ViewModel.EmployeePaperPresentViewModel
@{

    Layout = null;
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormCreate_PaperPresentationDetails</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-bottom:300px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <div id="update-message" class="alert" style="display: none; color: #000"></div>

            <div class="" id="EmployeeExperience">
            </div>


            <form id="FormEditEmployeePaperPresent" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.EmployeeID)
                <input type="hidden" id="paperPresentID" value="@ViewBag.ID" />

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PaperTopic, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.PaperTopic, new { @class = "form-control", style = "", maxlength = "500" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PaperTopic)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.JournalName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.JournalName, new { @class = "form-control", style = "", maxlength = "500" })
                        </div>
                        @Html.ValidationMessageFor(model => model.JournalName)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.JournalVolumeNumber, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.JournalVolumeNumber, new { @class = "form-control", maxlength = "50" })
                        </div>
                        @Html.ValidationMessageFor(model => model.JournalVolumeNumber)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.JournalPageNumber, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.JournalPageNumber, new { @class = "form-control", maxlength = "15" })
                        </div>
                        @Html.ValidationMessageFor(model => model.JournalPageNumber)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeYear, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownList("EmployeeYear", ViewData["EmployeeYear"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeYear)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PaperType, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownList("PaperType", ViewData["PaperType"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PaperType)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.GeneralLevelMasterIDForPprPresent, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(model => model.GeneralLevelMasterIDForPprPresent, (SelectList)ViewBag.GeneralLevelMasterForPprPresent, Resources.ddlHeaders_SelectLevel, new { @class = "form-control", style = "", })
                        </div>
                        @Html.ValidationMessageFor(model => model.GeneralLevelMasterIDForPprPresent)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PublishMedium, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownList("PublishMedium", ViewData["PublishMedium"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PublishMedium)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.PublishDate, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.PublishDate, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.SelfGroupPresenter, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownList("SelfGroupPresenter", ViewData["SelfGroupPresenter"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeArticleReview, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextAreaFor(m => m.EmployeeArticleReview, new { @class = "form-control", maxlength = "1000" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeArticleReview)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeBookReview, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextAreaFor(model => model.EmployeeBookReview, new { @class = "form-control", maxlength = "4000" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeBookReview)
                    </div>
                </div>


                <h5>Conference</h5>
                <hr>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.ConferenceName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(m => m.ConferenceName, new { @class = "form-control", maxlength = "100" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ConferenceName)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeConferenceVenue, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextAreaFor(model => model.EmployeeConferenceVenue, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeConferenceVenue)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeConferenceDateFrom, new { style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.EmployeeConferenceDateFrom, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeConferenceDateTo, new { style = "" })
                        <div class="form-group  fg-line dtp-container">
                            @Html.TextBoxFor(model => model.EmployeeConferenceDateTo, new { @class = "form-control", disabled = "disabled" })
                        </div>
                    </div>
                </div>

                

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeProceedingPageNumber, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.EmployeeProceedingPageNumber, new { @class = "form-control", maxlength = "15" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeProceedingPageNumber)
                    </div>

                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeConferenceProceeding, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.EmployeeConferenceProceeding, new { @class = "form-control", maxlength = "255" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeConferenceProceeding)
                    </div>
                </div>
                <br />

                <h5>Paper Presenter Details</h5>
                <hr>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        <span style="color:red">*</span>@Html.LabelFor(model => model.EmployeeParticipationRole, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownList("EmployeeParticipationRole", ViewData["EmployeeParticipationRole"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.EmployeeParticipationRole)
                    </div>

                    @*<div class="col-sm-6">
                    @Html.LabelFor(model => model.IsActive, new { style = "" })
                    <div class="form-group  fg-line">
                        @Html.EditorFor(model => model.IsActive, new { @class = "form-control", maxlength = "255" })
                    </div>
                </div>*@

                    <div class="col-sm-6">
                        <div class="checkbox m-b-15" style="padding-top:10%;">
                            <label>
                                <input type="checkbox" id="IsActive">
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsActive)
                            </label>
                        </div>
                    </div>

                </div>



                <div class="col-sm-12">
                    <div class="form-group">
                        <button type="button" id="EditEmployeePaperPresentRecord" class="btn btn-primary">@Resources.ButtonAction_SaveChanges</button>
                    </div>
                </div>


            </form>

        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        EmployeePaperPresent.Initialize();
    });

</script>




