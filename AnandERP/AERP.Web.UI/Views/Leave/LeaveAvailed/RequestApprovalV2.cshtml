@model AERP.ViewModel.LeaveAvailedViewModel
@{

    Layout = null;
}
<style type="text/css">
    .mfp-content {
        width: 60%;
    }
</style>
<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/AERP_Scripts/Leave/LeaveAvailedV2.js")" type="text/javascript"></script>



<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormCreate_LeaveRequestApproval</h2>

    </div>
    <div class="card">
        <div class="card-body card-padding" id="EmployeeShiftApplicableMasterBox" style="padding: 0 10px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormLeaveAvailed" role="form">
                @Html.HiddenFor(m => m.TaskCode)
                @Html.HiddenFor(m => m.TaskNotificationDetailsID)
                @Html.HiddenFor(m => m.TaskNotificationMasterID)
                @Html.HiddenFor(m => m.GeneralTaskReportingDetailsID)
                @Html.HiddenFor(m => m.PersonID)
                @Html.HiddenFor(m => m.StageSequenceNumber)
                @Html.HiddenFor(m => m.IsLastRecord)
                @Html.HiddenFor(m => m.IsActiveMember)

                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.Label("Leave Type", new { })
                        @Html.TextBoxFor(model => model.LeaveDescription, new { disabled = "disabled", @class = "form-control input-sm typeahead" })
                    </div>

                </div>
                <div class="col-sm-9">
                    <div class="form-group fg-line">
                        @Html.Label("Reason", new { })
                        @Html.TextBoxFor(model => model.LeaveReason, new { disabled = "disabled", @class = "form-control input-sm typeahead" })
                    </div>
                </div>
                @* <div class="col-sm-12">
                    <div class="card-header ch-alt p-15">
                        <button class="btn bgm-green btn-xs">Full Day</button>
                        <button class="btn bgm-orange btn-xs">First Half</button>
                        <button class="btn bgm-lightblue btn-xs">Second Half</button>
                    </div>

                </div>*@
                <div class="col-sm-12">
                    <table id="myDataTableForLeaveRequestApproval" class="table table-striped table-vmiddle table-responsive ">
                        <thead >
                            <tr>
                                <th>@Resources.TableHeaders_Leave</th>
                                <th>@Resources.TableHeaders_Date</th>
                                <th style="text-align: center">Period</th>
                                @*<th class="center" style="font-weight: bold; color: #000">@Resources.TableHeaders_FirstHalfSecondHalf </th>
                                    <th class="center" style="font-weight: bold; color: #000"> @Resources.TableHeaders_Application</th>
                                    <th class="center" style="font-weight: bold; color: #000"> @Resources.TableHeaders_DescendentLevelApproval</th>*@
                                <th style="text-align: center">@Resources.TableHeaders_Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>

                @if (Model.IsActiveMember == true)
                {
                      
                    <div class="col-sm-12">
                        <div class="form-group fg-line">
                            @Html.Label("Remark", new { })
                            @Html.TextBoxFor(model => model.Remark, new { @class = "form-control input-sm typeahead" })
                        </div>

                    </div>
                    <div class="col-sm-12" id="CompulsoryRemark" style="color: red; display: none">
                        <div class="form-group fg-line">
                            Remark should not be blank
                        </div>
                    </div>   
                    <div class="form-group">
                        <button type="button" id="CreateLeaveAvailedRecord" class="btn btn-primary btn-sm m-t-10 waves-effect">@Resources.ButtonAction_Submit</button>
                        @*<button type="button" id="reset" class="btn btn-secondary btn-sm m-t-10 waves-effect">@Resources.ButtonAction_Reset</button>*@
                    </div>
                      
                }
                <br />
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        LeaveAvailedV2.Initialize();

        var isReloadedFromCookies;
        var oTable = $('#myDataTableForLeaveRequestApproval').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/LeaveAvailed/AjaxHandlerMyDataTableLeaveRequestApproval",
            "bJQueryUI": true,
            "bAutoWidth": true,
            "bProcessing": true,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "PersonID", "value": $('input[name=PersonID]').val() });
                aoData.push({ "name": "TaskNotificationMasterID", "value": $('input[name=TaskNotificationMasterID]').val() });
            },
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [
                             {
                                 "visible": false, "targets": 0,


                             },
                              {
                                  "targets": 1,
                                  "bSort": false,
                                  "orderable": false,

                                  "data": null,
                                  "render": function (data, type, full, meta) {
                                      //  var result = "<p  style='text-align: center; height:0px;margin:0px 0px 0px 0px;' id='" + data[7] + "'> <input id='" + data[7] + "' disabled='disabled' type='text' style='width:145px;' value='" + data[1] + "' /></p>";
                                      var halfdayStatus = null;
                                      if (data[2] == "True") {
                                          halfdayStatus = '1~' + data[4];
                                      }
                                      else {
                                          halfdayStatus = '0~' + data[4];
                                      }
                                      var result = "<p  style='height:0px;margin:0px 0px 0px 0px;' id='" + data[7] + "'>" + data[1] + "<input id='" + data[7] + "'type='hidden' style='width:145px;' value='" + data[1] + "' /><input id='" + data[7] + "'type='hidden' style='width:145px;' value='" + halfdayStatus + "' /></p>";
                                      return result;

                                  }

                              },
                               {
                                   "targets": 2,
                                   "bSort": false,
                                   "orderable": false,

                                   "data": null,
                                   "render": function (data, type, full, meta) {
                                       //  alert(data[0] + "----" + data[1] + "----" + data[2] + "----" + data[3] + "----" + data[4] + "----" + data[5] + "----" + data[6] + "----" + data[7]);
                                       var result = "";
                                       if (data[3] == null) {
                                           result = "<p  style='text-align: center;margin:5px 0px 0px 0px;'>" + '<button class="btn bgm-green btn-xs">Full Day</button>' + "</p>";
                                           return result;
                                       }
                                       else if (data[3] == "FH") {
                                           result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<button class="btn bgm-orange btn-xs">First Half</button>' + "</p>";
                                           return result;
                                       }
                                       else {
                                           result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<button class="btn bgm-lightblue btn-xs">Second Half</button>' + "</p>";
                                           return result;
                                       }


                                   }
                               },
                              //{
                              //    "targets": 3,
                              //    "bSort": false,
                              //    "orderable": false,
                              //    "data": null,

                              //    "render": function (data, type, full, meta) {
                              //      //  alert(data[0] + "----" + data[1] + "----" + data[2] + "----" + data[3] + "----" + data[4] + "----" + data[5] + "----" + data[6] + "----" + data[7]);
                              //        var result="";
                              //        if (data[3] == null) {
                              //             result = "<p  style='text-align: center;margin:5px 0px 0px 0px;'></p>";
                              //             return result;
                              //        }

                              //        else {
                              //             result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<span class="label label-info">' + data[3] + ' </span>' + "</p>";
                              //            return result;
                              //        }




                              //    }
                              //},
                              //{
                              //    "visible": false, "targets": 4,

                              //},
                              //{
                              //    "targets": 5,
                              //    "bSort": false,
                              //    "orderable": false,

                              //    "data": null,
                              //    "render": function (data, type, full, meta) {
                              //        var result = "";
                              //        var chkStatus = '';
                              //        if (data[5] == null) {
                              //            chkStatus = 'Pending';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px;'>" + '<span class="label label-warning">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        else if (data[5] == 'Approved') {
                              //            chkStatus = 'Approved';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px;'>" + '<span class="label label-success">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        else if (data[5] == 'Reject') {
                              //            chkStatus = 'Rejected';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px; '>" + '<span class="label label-important">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        // var result = "<p  style='text-align: center; height:5px;'>" + '<span class="label label-important">' + chkStatus + ' </span>' + "</p>";

                              //        return result;

                              //    }
                              //},
                               {
                                   "targets": 3,
                                   "bSort": false,
                                   "orderable": false,

                                   "data": null,
                                   "render": function (data, type, full, meta) {

                                       var result = "";
                                       //if (data[6] == null) {
                                      
                                       if (data[8] == 'False') {
                                           result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[6] + "'>" + '<select id="something" class = "form-control input-sm" disabled="disabled" ><option value="4~' + data[7] + '">Cancelled</option></select>' + "</p>";
                                       }
                                       else {
                                           if (data[5] == null || data[5] == 'Approved') {
                                               result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something" class = "form-control input-sm"><option value="2~' + data[7] + '">Approve</option><option value="3~' + data[7] + '"> Reject</option></select>' + "</p>";
                                           }
                                           else if (data[5] == 'Reject') {
                                               result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="3~' + data[7] + '">Reject</option><option value="2~' + data[7] + '">Approve</option></select>' + "</p>";
                                           }
                                       }
                                       //}
                                       //else if (data[6] == '2') {

                                       //     result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="1~' + data[7] + '">--Select--</option><option value="2~' + data[7] + '" selected>Approve</option><option value="3~' + data[7] + '">Reject</option></select>' + "</p>";
                                       //}
                                       //else if (data[6] == '3') {

                                       //     result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="1~' + data[7] + '">--Select--</option><option value="2~' + data[7] + '">Approve</option><option value="3~' + data[7] + '" selected>Reject</option></select>' + "</p>";
                                       //}

                                       return result;


                                       //var result = "<p  style='text-align: center;'>" + '<select id="something"><option value="1">Approve</option><option value="2">Reject</option></select>' + "</p>";
                                       //return result;
                                   }
                               },
                                {
                                    "visible": false, "targets": 4,
                                }

            ],
            "order": [[0, 'asc']],
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                var table = $('#myDataTableForLeaveRequestApproval').dataTable();

                api.column(0, { page: 'current' }).data().each(function (group, i) {

                    //if (last !== group) {
                    //    $(rows).eq(i).before(

                    //         '<tr class="group"><td colspan="5" style="font-weight:bold;background-color:rgba(128,128,128,0.2);color:#000;font-size:12px;font-family: verdana;">' + group + '</td> </tr>'
                    //    );
                    //    last = group;

                    //}
                    last = group;
                    var splitedval = last.split('(');
                    $('#LeaveDescription').val(splitedval[0]);
                    $('#LeaveReason').val(splitedval[1].replace(')', ''));
                });
            }
        });

        DataTableSettings(oTable, 'myDataTableForLeaveRequestApproval', "toggleTableColumn");
        $('.fg-toolbar').hide();
        //$('.DataTables_sort_icon').hide();
        //$('.sorting_asc').hide();

        $('#myDataTableForLeaveRequestApproval_info').hide(true);
        $('#myDataTableForLeaveRequestApproval_paginate').hide(true);


    });
</script>
<style>
    tr.row_selected td {
        background-color: #f2dede !important;
    }
</style>
