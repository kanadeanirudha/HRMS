@model AERP.ViewModel.LeaveAvailedViewModel
@{

    Layout = null;
}

<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/AERP_Scripts/Leave/LeaveAvailed.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive" class="span"><i class="icon-th-list"></i>&nbsp; @Resources.FormCreate_LeaveRequestApproval</h5>

    </div>
    <div id="update-message" class=" invisible" style="height:30px; border-bottom: 1px solid #ddd;color:#fff"></div>
    <div id="EmployeeShiftApplicableMasterBox" class="widget-box">

        <form id="FormLeaveAvailed" method="post" class="form-horizontal well white-box" style="height: 400px">
            @Html.HiddenFor(m => m.TaskCode)
            @Html.HiddenFor(m => m.TaskNotificationDetailsID)
            @Html.HiddenFor(m => m.TaskNotificationMasterID)
            @Html.HiddenFor(m => m.GeneralTaskReportingDetailsID)
            @Html.HiddenFor(m => m.PersonID)
            @Html.HiddenFor(m => m.StageSequenceNumber)
            @Html.HiddenFor(m => m.IsLastRecord)
            @Html.HiddenFor(m => m.IsActiveMember)
            <div class="row">
                <div class="span6">
                    <div class="row control-group">
                        <div class="span1">
                            @Html.Label("Leave Type :", new { style = "font-weight:bold" })
                        </div>

                        <div class="span">
                            @Html.TextBoxFor(m => m.LeaveDescription, new { @class = "", disabled = "disabled" })

                        </div>
                        @*<div class="span">
                                @Html.Label("Reason :", new { style = "font-weight:bold"})
                            </div>
                            <div class="span1">
                                @Html.TextBoxFor(m => m.LeaveReason, new { @class = "span5", disabled = "disabled" })
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span6">
                    <div class="row control-group">
                        <div class="span1">
                            @Html.Label("Reason :", new { style = "font-weight:bold" })
                        </div>

                        <div class="span">
                            @Html.TextBoxFor(m => m.LeaveReason, new { @class = "span5", disabled = "disabled" })
                        </div>

                    </div>
                </div>
            </div>
            <ul class="breadcrumb">
                <li><span class="label label-success">FD</span><span class="divider">»</span>Full Day&nbsp;&nbsp;</li>
                <li><span class="label label-warning">FH</span><span class="divider">»</span>First Half&nbsp;&nbsp;</li>
                <li><span class="label label-info">SH</span><span class="divider">»</span>Second Half</li>

            </ul>
            <div id="DataTables_Table_1_wrapper" class="dataTables_wrapper" role="grid" style="border: 1px solid #d2d2d2;">
                <div class="table_content">
                    <table id="myDataTableForLeaveRequestApproval" class="table table-striped table-bordered  dataTable no-footer">
                        <thead>
                            <tr>
                                <th class="center" style="font-weight: bold; color: #000;"> @Resources.TableHeaders_Leave</th>
                                <th class="center" style="font-weight: bold; color: #000;">@Resources.TableHeaders_Date</th>
                                <th class="center" style="font-weight: bold; color: #000;"> Period</th>
                                @*<th class="center" style="font-weight: bold; color: #000">@Resources.TableHeaders_FirstHalfSecondHalf </th>
                                    <th class="center" style="font-weight: bold; color: #000"> @Resources.TableHeaders_Application</th>
                                    <th class="center" style="font-weight: bold; color: #000"> @Resources.TableHeaders_DescendentLevelApproval</th>*@
                                <th class="center" style="font-weight: bold; color: #000;">@Resources.TableHeaders_Action</th>
                            </tr>
                        </thead>
                        <tbody aria-relevant="all" aria-live="polite" role="alert"></tbody>
                    </table>
                </div>

                @if (Model.IsActiveMember == true)
                {
                    <br />
                    <ul class="breadcrumb">
                        <li> <label>Remark :</label></li>
                        <li>
                            <div style="padding-right: 10px; padding-top: 5px; padding-bottom: 0px; text-align: left;">
                                @Html.TextBoxFor(model => model.Remark, new { @class = "span3" })
                            </div>
                        </li>
                        <li id="CompulsoryRemark" style="color:red;display:none">
                            Remark should not be blank
                        </li>
                    </ul>

                    <div class="widget-bottom">
                        <div style="padding-right: 10px; padding-top: 5px; padding-bottom: 0px; text-align: right;">
                            <button type="button" id="CreateLeaveAvailedRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                            <button type="button" id="reset" class="btn btn-secondary">@Resources.ButtonAction_Reset</button>
                        </div>
                    </div>
                }
            </div>

        </form>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        LeaveAvailed.Initialize();
       
        var isReloadedFromCookies;
        var oTable = $('#myDataTableForLeaveRequestApproval').dataTable({
            "bServerSide": true,
            "sAjaxSource": "/LeaveAvailed/AjaxHandlerMyDataTableLeaveRequestApproval",
            "bJQueryUI": true,
            "bAutoWidth": true,
            "bProcessing": true,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "PersonID", "value": $('input[name=PersonID]').val() });
                aoData.push({ "name": "TaskNotificationMasterID", "value": $('input[name=TaskNotificationMasterID]').val() });
            },
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [
                             {
                                 "visible": false, "targets": 0,


                             },
                              {
                                  "targets": 1,
                                  "bSort": false,

                                  "data": null,
                                  "render": function (data, type, full, meta) {
                                      //  var result = "<p  style='text-align: center; height:0px;margin:0px 0px 0px 0px;' id='" + data[7] + "'> <input id='" + data[7] + "' disabled='disabled' type='text' style='width:145px;' value='" + data[1] + "' /></p>";
                                      var halfdayStatus = null;
                                      if (data[2] == "True") {
                                          halfdayStatus = '1~' + data[4] ;
                                      }
                                      else {
                                          halfdayStatus = '0~' + data[4]  ;
                                      }
                                      var result = "<p  style='text-align: center; height:0px;margin:0px 0px 0px 0px;' id='" + data[7] + "'>" + data[1] + "<input id='" + data[7] + "'type='hidden' style='width:145px;' value='" + data[1] + "' /><input id='" + data[7] + "'type='hidden' style='width:145px;' value='" + halfdayStatus + "' /></p>";
                                      return result;

                                  }

                              },
                               { 
                                   "targets": 2,
                                   "bSort": false,
                                   "orderable": false,

                                   "data": null,
                                   "render": function (data, type, full, meta) {
                                       //  alert(data[0] + "----" + data[1] + "----" + data[2] + "----" + data[3] + "----" + data[4] + "----" + data[5] + "----" + data[6] + "----" + data[7]);
                                       var result = "";
                                       if (data[3] == null) {
                                           result = "<p  style='text-align: center;margin:5px 0px 0px 0px;'>" + '<span class="label label-success"> FD </span>' + "</p>";
                                           return result;
                                       }
                                       else if (data[3] == "FH") {
                                           result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<span class="label label-warning"> ' + data[3] + ' </span>' + "</p>";
                                           return result;
                                       }
                                       else {
                                           result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<span class="label label-info"> ' + data[3] + ' </span>' + "</p>";
                                           return result;
                                       }


                                   }
                               },
                              //{
                              //    "targets": 3,
                              //    "bSort": false,
                              //    "orderable": false,
                              //    "data": null,

                              //    "render": function (data, type, full, meta) {
                              //      //  alert(data[0] + "----" + data[1] + "----" + data[2] + "----" + data[3] + "----" + data[4] + "----" + data[5] + "----" + data[6] + "----" + data[7]);
                              //        var result="";
                              //        if (data[3] == null) {
                              //             result = "<p  style='text-align: center;margin:5px 0px 0px 0px;'></p>";
                              //             return result;
                              //        }

                              //        else {
                              //             result = "<p  style='text-align: center; margin: 5px 0px 0px 0px;'>" + '<span class="label label-info">' + data[3] + ' </span>' + "</p>";
                              //            return result;
                              //        }




                              //    }
                              //},
                              //{
                              //    "visible": false, "targets": 4,

                              //},
                              //{
                              //    "targets": 5,
                              //    "bSort": false,
                              //    "orderable": false,

                              //    "data": null,
                              //    "render": function (data, type, full, meta) {
                              //        var result = "";
                              //        var chkStatus = '';
                              //        if (data[5] == null) {
                              //            chkStatus = 'Pending';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px;'>" + '<span class="label label-warning">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        else if (data[5] == 'Approved') {
                              //            chkStatus = 'Approved';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px;'>" + '<span class="label label-success">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        else if (data[5] == 'Reject') {
                              //            chkStatus = 'Rejected';
                              //             result = "<p  style='text-align: center;margin: 5px 0px 0px 0px; '>" + '<span class="label label-important">' + chkStatus + ' </span>' + "</p>";
                              //        }
                              //        // var result = "<p  style='text-align: center; height:5px;'>" + '<span class="label label-important">' + chkStatus + ' </span>' + "</p>";

                              //        return result;

                              //    }
                              //},
                               {
                                   "targets": 3,
                                   "bSort": false,
                                   "orderable": false,

                                   "data": null,
                                   "render": function (data, type, full, meta) {

                                       var result = "";
                                       //if (data[6] == null) {
                                       if (data[5] == null || data[5] == 'Approved') {
                                           result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="2~' + data[7] + '">Approve</option><option value="3~' + data[7] + '">Reject</option></select>' + "</p>";
                                       }
                                       else if (data[5] == 'Reject') {
                                           result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="3~' + data[7] + '">Reject</option><option value="2~' + data[7] + '">Approve</option></select>' + "</p>";
                                       }
                                       //}
                                       //else if (data[6] == '2') {

                                       //     result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="1~' + data[7] + '">--Select--</option><option value="2~' + data[7] + '" selected>Approve</option><option value="3~' + data[7] + '">Reject</option></select>' + "</p>";
                                       //}
                                       //else if (data[6] == '3') {

                                       //     result = "<p  style='text-align: center;margin: 0px 0px 0px 0px;' class='" + data[5] + "'>" + '<select id="something"><option value="1~' + data[7] + '">--Select--</option><option value="2~' + data[7] + '">Approve</option><option value="3~' + data[7] + '" selected>Reject</option></select>' + "</p>";
                                       //}

                                       return result;


                                       //var result = "<p  style='text-align: center;'>" + '<select id="something"><option value="1">Approve</option><option value="2">Reject</option></select>' + "</p>";
                                       //return result;
                                   }
                               },
                                {
                                    "visible": false, "targets": 4,
                                }

            ],
            "order": [[0, 'asc']],
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                var table = $('#myDataTableForLeaveRequestApproval').dataTable();

                api.column(0, { page: 'current' }).data().each(function (group, i) {

                    //if (last !== group) {
                    //    $(rows).eq(i).before(

                    //         '<tr class="group"><td colspan="5" style="font-weight:bold;background-color:rgba(128,128,128,0.2);color:#000;font-size:12px;font-family: verdana;">' + group + '</td> </tr>'
                    //    );
                    //    last = group;

                    //}
                    last = group;
                    var splitedval = last.split('(');
                    $('#LeaveDescription').val(splitedval[0]);
                    $('#LeaveReason').val(splitedval[1].replace(')', ''));
                });
            }
        });


        $('.fg-toolbar').hide();
        //$('.DataTables_sort_icon').hide();
        //$('.sorting_asc').hide();


    });
</script>
<style>
    tr.row_selected td {
        background-color: #f2dede !important;
    }
</style>
