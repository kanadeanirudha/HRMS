@*@model AMS.ViewModel.LeaveRuleMasterViewModel
@{
    Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">@Resources.FormEdit_LeaveRuleMaster @Model.LeaveDescription - @Model.LeaveRuleDescription </h5>
    </div>
    <div class="widget-box">

        <form id="FormViewDeatilsLeaveRuleMaster" method="post" class="form-horizontal well" style="padding-bottom: 0px;">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.LeaveMasterID)
            @Html.HiddenFor(model => model.CentreCode)


            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="span2">

                            @Html.LabelFor(model => model.LeaveRuleDescription, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.LeaveRuleDescription, new { style = "font-Weight:Bold;", maxlength = "30", disabled = "disabled" })
                            <br />
                            @Html.ValidationMessageFor(model => model.LeaveRuleDescription)
                        </div>
                        <div class="span2">

                            @Html.LabelFor(model => model.NumberOfLeaves, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.NumberOfLeaves, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                            <br />
                            @Html.ValidationMessageFor(model => model.NumberOfLeaves)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="span2">

                            @Html.LabelFor(model => model.MaxLeaveAtTime, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MaxLeaveAtTime, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>
                        <div class="span2">

                            @Html.LabelFor(model => model.MinLeavesAtTime, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MinLeavesAtTime, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="span2">

                            @Html.LabelFor(model => model.MaxLeaveEncash, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MaxLeaveEncash, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>
                        <div class="span2">

                            @Html.LabelFor(model => model.MinimumLeaveEncash, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MinimumLeaveEncash, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="span2">

                            @Html.LabelFor(model => model.MinServiceRequiredInMonth, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MinServiceRequiredInMonth, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>
                        <div class="span2">

                            @Html.LabelFor(model => model.AttendDaysRequired, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.AttendDaysRequired, new { style = "font-Weight:Bold;", maxlength = "3", disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">
                        <div class="span2">
                            @Html.LabelFor(model => model.MaxLeaveAccumulated, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.MaxLeaveAccumulated, new { style = "font-Weight:Bold;", maxlength = "3" })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.DaysBeforeApplicationSubmitted, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.DaysBeforeApplicationSubmitted, new { style = "font-Weight:Bold;", maxlength = "3" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span10">
                    <div class="row control-group">

                        <div class="span2">
                            @Html.LabelFor(model => model.LeaveApplicationSubmittedUptoDays, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.LeaveApplicationSubmittedUptoDays, new { style = "font-Weight:Bold;", maxlength = "3" })
                        </div>
                        <div class="span2">
                            @Html.LabelFor(model => model.IsActive, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.CheckBoxFor(model => model.IsActive, new { style = "font-Weight:Bold;" })
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        LeaveRuleMaster.Initialize();
    });
</script>
<style>
    .span {
        width: 25px;
        margin-top: 1%;
        margin-left: 60px;
    }

    .spana {
        width: 100px;
    }

    .span1 {
        width: 135px;
    }

    .span2 {
        width: 210px;
    }


    .hide_column {
        display: none;
    }

    .paging_full_numbers {
        display: none;
    }

    div.dataTables_paginate {
        display: none;
    }

    .dataTables_paginate {
        display: none;
    }

    div.dataTables_info {
        display: none;
    }

    .dataTables_info {
        display: none;
    }

    .lineHeight {
        padding: 0px;
    }
</style>*@


@model AERP.ViewModel.LeaveRuleMasterViewModel
@{
    Layout = null;
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormEdit_LeaveRuleMaster @Model.LeaveDescription - @Model.LeaveRuleDescription </h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-bottom:500px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditLeaveRuleMaster" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.LeaveMasterID)
                @Html.HiddenFor(model => model.CentreCode)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.LeaveRuleDescription, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.LeaveRuleDescription, new { @class = "form-control", maxlength = "30", style = "", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(model => model.LeaveRuleDescription)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.NumberOfLeaves, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.NumberOfLeaves, new { @class = "form-control", maxlength = "3", style = "", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(model => model.NumberOfLeaves)
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MaxLeaveAtTime, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MaxLeaveAtTime, new { style = "", @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MinLeavesAtTime, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MinLeavesAtTime, new { @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MaxLeaveEncash, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MaxLeaveEncash, new { style = "", @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MinimumLeaveEncash, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MinimumLeaveEncash, new { @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MinServiceRequiredInMonth, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MinServiceRequiredInMonth, new { style = "", @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.AttendDaysRequired, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.AttendDaysRequired, new { @class = "form-control", maxlength = "3", disabled = "disabled" })
                        </div>

                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MaxLeaveAccumulated, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.MaxLeaveAccumulated, new { style = "", @class = "form-control", maxlength = "3" })
                        </div>

                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.DaysBeforeApplicationSubmitted, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.DaysBeforeApplicationSubmitted, new { @class = "form-control", maxlength = "3" })
                        </div>

                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.LeaveApplicationSubmittedUptoDays, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.LeaveApplicationSubmittedUptoDays, new { style = "", @class = "form-control", maxlength = "3" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.DaysAfterApplicationSubmitted, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.DaysAfterApplicationSubmitted, new { style = "", @class = "form-control", maxlength = "3" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                       <div class="col-sm-6">
                        <div class="checkbox m-b-15" style="padding-top:2%;">
                            <label>
                                 @if (Model.IsLeaveAccumulatePeriodically == true)
                                 {
                                <input type="checkbox" id="IsLeaveAccumulatePeriodically" checked />
                                 }
                                 else
                                 {
                                <input type="checkbox" id="IsLeaveAccumulatePeriodically"  />
                                 }
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsLeaveAccumulatePeriodically)
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="checkbox m-b-15" style="padding-top:2%;">
                            <label>
                                @if (Model.IsActive == true)
                                {
                                <input type="checkbox" id="IsActive" checked />
                                }
                                else
                                {
                                <input type="checkbox" id="IsActive"  />
                                }
                                
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsActive)
                            </label>
                        </div>
                    </div>
                </div>
                @if (Model.IsLeaveAccumulatePeriodically == false)
                {
                <div class="col-sm-12" style="display:none;" id="Numberofleave">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.NumberOfAccumulatedLeaves, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.NumberOfAccumulatedLeaves, new { @class = "form-control", maxlength = "3" })
                        </div>
                              @Html.ValidationMessageFor(model => model.NumberOfAccumulatedLeaves)
                     </div>
                     <div class="col-sm-6">
                        @Html.LabelFor(model => model.NumberOfMonths, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.NumberOfMonths, new { style = "", @class = "form-control", maxlength = "3" })
                        </div>
                              @Html.ValidationMessageFor(model => model.NumberOfMonths)
                     </div>
                </div>
                }
                else
                {
                   <div class="col-sm-12" id="Numberofleave">
                     <div class="col-sm-6">
                        @Html.LabelFor(model => model.NumberOfAccumulatedLeaves, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.NumberOfAccumulatedLeaves, new { @class = "form-control", maxlength = "3" })
                        </div>
                              @Html.ValidationMessageFor(model => model.NumberOfAccumulatedLeaves)
                     </div>
                     <div class="col-sm-6">
                        @Html.LabelFor(model => model.NumberOfMonths, new { style = "" })
                        <div class="form-group fg-line dtp-container">
                            @Html.TextBoxFor(model => model.NumberOfMonths, new { style = "", @class = "form-control", maxlength = "3" })
                        </div>
                              @Html.ValidationMessageFor(model => model.NumberOfMonths)
                    </div>
                  </div>
                }
                 
                @*<div class="col-sm-12">
                    <div class="form-group">
                        <button type="button" id="EditLeaveRuleMasterRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                    </div>
                </div>*@
            </form>

        </div>
    </div>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        LeaveRuleMaster.Initialize();
    });
</script>