@*@model AMS.ViewModel.LeaveSessionViewModel
@{
    Layout = null;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="widget-block">
    <div class="widget-head">
        <h5 id="hFive">@Resources.FormDetails_LeaveSession (@Model.LeaveSessionName)</h5>
    </div>
    <div class="widget-box">

        <form id="FormEditLeaveSession" method="post" class="form-horizontal well">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.LeaveSessionID)
            @Html.HiddenFor(model => model.CentreCode)
            @Html.HiddenFor(model => model.Mode)
          
              <div class="row">
                <div class="span8" style="height:40px;">
                    <div class="row control-group">
                        <div class="span1">
                          
                            @Html.LabelFor(model => model.LeaveSessionFromDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.LeaveSessionFromDate, new { style = "font-Weight:Bold;", disabled = "disabled" })
                            <br />
                            @Html.ValidationMessageFor(model => model.LeaveSessionFromDate)
                        </div>
                        <div class="span1">
                          
                            @Html.LabelFor(model => model.LeaveSessionUptoDate, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(model => model.LeaveSessionUptoDate, new { style = "font-Weight:Bold;", disabled = "disabled" })
                            <br />
                            @Html.ValidationMessageFor(model => model.LeaveSessionUptoDate)
                        </div>
                    </div>
                </div>
            </div>
             <div class="row">
                <div class="span8" style="height:40px;">
                    <div class="row control-group">
                        <div class="span1">

                            @Html.LabelFor(model => model.IsSessionLocked, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.CheckBoxFor(model => model.IsSessionLocked, new { style = "font-Weight:Bold;", disabled = "disabled" })
                        </div>
                        <div class="span1">
                           
                            @Html.LabelFor(model => model.IsCurrentLeaveSession, new { style = "font-Weight:Bold;" })
                        </div>
                        <div class="span2">
                            @Html.CheckBoxFor(model => model.IsCurrentLeaveSession, new { style = "font-Weight:Bold;", disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            

           
            <div class="form-actions" style="padding-left: 0px; padding-bottom: 0px; text-align: right">
                <button type="button" id="EditLeaveSessionRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>

            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        LeaveSession.Initialize();
        ////var isReloadedFromCookies;
        ////var oTable = $('#myDataTableSessionDetails').dataTable({
        ////    "bServerSide": true,
        ////    "sAjaxSource": "LeaveSession/AjaxHandlerLeaveSessionDetails",
        ////    "fnServerParams": function (aoData) {
        ////        aoData.push({ "name": "LeaveSessionID", "value": $('input[name=LeaveSessionID]').val() });
        ////        aoData.push({ "name": "Mode", "value": $('input[name=Mode]').val() });
        ////    },
        ////    "bJQueryUI": true,
        ////    "scrollY": "150px",
        ////    "dom": "frtiS",
        ////    "deferRender": true,
        ////    "bProcessing": true,
        ////    "iDisplayLength": "500",
        ////   // "sPaginationType": "full_numbers",
        ////    "oLanguage": {
        ////        "sInfoEmpty": "No entries to show",
        ////    },
        ////    "columnDefs": [

        ////                      {
        ////                          "visible": false, "targets": 0,
        ////                      },
        ////                     {
        ////                          "targets": 1,
        ////                          "bSearchable": true,
        ////                     },
        ////                     {
        ////                         "targets": 2,
        ////                         "bSortable": false,
        ////                         "data": null,
        ////                         "render": function (data, type, full, meta) {
        ////                             var chkStatus = '';
        ////                             var chkTrueFalse;
        ////                             if (data[2] == "True") {
        ////                                 chkStatus = 'checked';
        ////                                 chkTrueFalse = true;
        ////                             }
        ////                             else {
        ////                                 chkStatus = '';
        ////                                 chkTrueFalse = false;
        ////                             }
        ////                             var result = "<p  style='text-align: center; height:5px;'>" + '<input id="IsActive" class="CheckBox" value = ' + chkTrueFalse + ' type="checkbox" disabled ' + chkStatus + ' />' + "</p>";

        ////                             return result;

        ////                         }
        ////                     },
                                 
        ////    ],
        ////    "order": [[0, 'asc']],            
        ////    "drawCallback": function (settings) {
        ////        var api = this.api();
        ////        var rows = api.rows({ page: 'current' }).nodes();
        ////        var last = null;              
        ////        var table = $('#myDataTableSessionDetails').dataTable();
        ////        api.column(0, { page: 'current' }).data().each(function (group, i) {
        ////            if (last !== group) {
        ////                $(rows).eq(i).before(
        ////                   '<tr class="group"><td colspan="2" style="font-weight:bold;background-color:rgba(128,128,128,0.2);color:#000;font-size:12px;font-family: verdana;">' + group + ' </tr>'
        ////                );
        ////                last = group;
        ////            }
        ////        });
        ////    }
        ////});
    });

</script>
<style>
    .span {
        width: 25px;
        margin-top: 1%;
        margin-left: 60px;
    }

    .spana {
       width: 100px;
    }

    .span1 {
        width: 135px;
    }

    .span2 {
        width: 200px;
    }

    .hide_column {
        display: none;
    }

    .paging_full_numbers {
        display: none;
    }

    div.dataTables_paginate {
        display: none;
    }

    .dataTables_paginate {
        display: none;
    }

    div.dataTables_info {
        display: none;
    }

    .dataTables_info {
        display: none;
    }
</style>*@

@model AMS.ViewModel.LeaveSessionViewModel
@{
    Layout = null;
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Resources.FormDetails_LeaveSession (@Model.CentreName)</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding" style="padding-bottom:245px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditLeaveSession" method="post">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.LeaveSessionID)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.Mode)

                

                <div class="col-sm-6">
                    <div class="checkbox m-b-15" style="padding-top:10%;">
                        <label>
                            <input type="checkbox" id="IsCurrentLeaveSession" disabled>
                            <i class="input-helper"></i>
                            @Html.LabelFor(model => model.IsCurrentLeaveSession)
                        </label>
                    </div>
                </div>

                <div class="col-sm-6">
                    @Html.LabelFor(model => model.LeaveSessionFromDate, new { style = "" })
                    <div class="form-group fg-line dtp-container">
                        @Html.TextBoxFor(model => model.LeaveSessionFromDate, new { style = "background-color:#fff;", @class = "form-control", ReadOnly = "ReadOnly", disabled = "disabled" })
                    </div>
                    @Html.ValidationMessageFor(model => model.LeaveSessionFromDate)
                </div>

                <div class="col-sm-6">
                    @Html.LabelFor(model => model.LeaveSessionUptoDate, new { style = "" })
                    <div class="form-group fg-line dtp-container">
                        @Html.TextBoxFor(model => model.LeaveSessionUptoDate, new { style = "background-color:#fff;", @class = "form-control", ReadOnly = "ReadOnly", disabled = "disabled" })
                    </div>
                    @Html.ValidationMessageFor(model => model.LeaveSessionUptoDate)
                </div>

                <div class="col-sm-6">
                    <div class="checkbox m-b-15" style="padding-top:10%;">
                        <label>
                            <input type="checkbox" id="IsSessionLocked" disabled>
                            <i class="input-helper"></i>
                            @Html.LabelFor(model => model.IsSessionLocked)
                        </label>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <button type="button" id="EditLeaveSessionRecord" class="btn btn-primary">@Resources.ButtonAction_Submit</button>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        LeaveSession.Initialize();
    });

</script>