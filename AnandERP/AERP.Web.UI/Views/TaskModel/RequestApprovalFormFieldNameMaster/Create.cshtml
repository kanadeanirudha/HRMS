@model AERP.ViewModel.RequestApprovalFormFieldNameMasterViewModel
<script src="@Url.Content("~/Scripts/AERP_Scripts/TaskModel/RequestApprovalFormFieldNameMaster.js")" type="text/javascript"></script>
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Request Approval</h2>
    </div>
    <div class="card">
        @*<div class="card-body card-padding" >*@
        <div id="displayErrorMessage" role="alert" hidden class="alert">
            <button class="close" type="button"><span aria-hidden="true">×</span></button>
            <p id="messageContent"></p>
        </div>
        <form id="FormCreateRequestApprovalFormFieldNameMaster" role="form">
            <div class="col-sm-6">
                <div class="form-group fg-line">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(model => model.FormName, new { })
                    @Html.TextBoxFor(model => model.FormName, new { maxlength = "100", @class = "form-control input-sm typeahead" })
                </div>
                @Html.ValidationMessageFor(model => model.FormName)
            </div>
            <div class="col-sm-6">
                <div class="form-group fg-line">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(model => model.RequestCode, new { })
                    @Html.DropDownListFor(model => model.RequestCode, (SelectList)ViewBag.GeneralRequestMasterlList, "---Select Request code ---", new { @class = "form-control input-sm" })

                </div>
                @Html.ValidationMessageFor(model => model.RequestCode)
            </div>

            <div class="col-sm-6">
                <div class="form-group fg-line">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(model => model.ViewName, new { })
                    @Html.TextBoxFor(model => model.ViewName, new { maxlength = "100", @class = "form-control input-sm typeahead" })
                </div>
                @Html.ValidationMessageFor(model => model.ViewName)
            </div>

            <div class="col-sm-6">
                <div class="form-group fg-line">
                    <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                    @Html.LabelFor(model => model.InsertUpdateProcedure, new { })
                    @Html.TextBoxFor(model => model.InsertUpdateProcedure, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                </div>
                @Html.ValidationMessageFor(model => model.InsertUpdateProcedure)
            </div>



            @*<div class="col-sm-6">
                    <div class="form-group fg-line ">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.MenuCode, new { })
                        @Html.DropDownListFor(model => model.MenuCode, Model.MenuCodeListItems, "---Select Menu Code ---", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.MenuCode)
                </div>*@

            @*<div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.RequestApprovalBasedTable, new { })
                        @Html.DropDownListFor(model => model.RequestApprovalBasedTable, Model.TaskApprovalBasedTableListItems, "---Select Based Table ---", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.RequestApprovalBasedTable)
                </div>*@

            @*<div class="col-sm-6">
                    <div class="form-group fg-line select">
                        <span style="color: red; float: left; padding-left: 1px; font-weight: bold">*</span>
                        @Html.LabelFor(model => model.RequestApprovalParamPrimaryKey, new { })
                        @Html.DropDownListFor(model => model.RequestApprovalParamPrimaryKey, ViewBag.TaskApprovalParamPrimaryKeyList as List<SelectListItem>, "----------Select Primary Key ----------", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.RequestApprovalParamPrimaryKey)
                </div>*@


            <div class="form-group col-sm-12">
                <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateRequestApprovalFormFieldNameMasterRecord" type="button" />
            </div>
        </form>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        RequestApprovalFormFieldNameMaster.Initialize();

        ////=======================CityName=================================

        //var map = {};
        //var getData = function () {
        //    return function findMatches(q, cb) {

        //        var matches, substringRegex;

        //        // an array that will be populated with substring matches
        //        matches = [];

        //        // regex used to determine if a string contains the substring `q`
        //        substrRegex = new RegExp(q, 'i');

        //        $.ajax({
        //            url: "/RequestApprovalFormFieldNameMaster/GetCityList",
        //            type: "POST",
        //            dataType: "json",
        //            data: { term: q },
        //            success: function (data) {

        //                // iterate through the pool of strings and for any string that
        //                // contains the substring `q`, add it to the `matches` array
        //                $.each(data, function (i, response) {
        //                    if (substrRegex.test(response.name)) {
        //                        map[response.name] = response;
        //                        matches.push(response.name);
        //                        $('#CityId').val(response.id);

        //                    }
        //                });
        //            },
        //            async: false
        //        })
        //        cb(matches);
        //    };

        //};


        //$('#CityName').typeahead({
        //    hint: true,
        //    highlight: true,
        //    minLength: 1
        //},
        //{
        //    source: getData()
        //}).on("#CityName", function (obj, item) {
        //    $('#CityId').val(map[item].id);
        //});






    });
</script>
