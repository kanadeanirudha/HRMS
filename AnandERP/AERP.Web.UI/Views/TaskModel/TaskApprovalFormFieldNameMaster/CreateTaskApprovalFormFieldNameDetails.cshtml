@model AERP.ViewModel.TaskApprovalFormFieldNameMasterViewModel
<script src="@Url.Content("~/Scripts/AERP_Scripts/TaskModel/TaskApprovalFormFieldNameMaster.js")" type="text/javascript"></script>
<div id="custom-content">
    @Html.HiddenFor(model => model.TaskApprovalFormFieldMasterId)
    <div class="block-header">
    <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Task Details</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
             </div>
             <form id="FormCreateTaskApprovalFormFieldNameMaster" role="form">
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.LableName, new { })
                        @Html.TextBoxFor(model => model.LableName, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.LableName)
                </div>

                <div class="col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.SequenceNumber, new { })
                        @Html.TextBoxFor(model => model.SequenceNumber, new { @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.SequenceNumber)
                </div>

                <div class="col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ColumnNumber, new { })
                        @Html.TextBoxFor(model => model.ColumnNumber, new { @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ColumnNumber)
                </div>

                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.FieldName, new { })
                        @Html.TextBoxFor(model => model.FieldName, new { maxlength = "50", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.FieldName)
                </div>
                <div class="col-sm-2" id="Addbtn">
                        <!-- <button type="button" class="btn btn-primary" id="btnAdd">Add Row</button> -->
                        <button type="button" title="Add row" class="btn bgm-cyan btn-float waves-effect waves-circle waves-float" id="Addbtn"><i class="zmdi zmdi-plus"></i></button>
                    </div>
         </form>
               @*<table>Task Approval Details</table>*@
                <table id="tblData" class="table">
                    
                    <tbody>
                        
                        <tr>
                            
                            <th>Lable Name</th>
                            <th>Sequence Number</th>
                            <th>Column Number</th>
                            <th>Field Name</th>
                            <th>Action</th>
                        </tr>
                    </tbody>
                    </table>

                    @*<tbody>
                        @foreach (var item in Model.IngridentsListByVarients)
                        {
                            <tr>
                                <td style="display:none">@item.ItemNumber</td>
                                <td style="display:none">@item.InventoryRecipeFormulaDetailsID</td>
                                <td>@item.ItemDescription</td>
                                <td>@item.Quantity</td>
                                <td>@item.UoMCode</td>
                                <td></td>
                            </tr>
                        }
                    </tbody>
                </table>*@
                @*<div class="col-sm-6">
                        <div class="form-group fg-line">


                        </div>
                    </div>*@


                <div class="form-group" style="margin-left:2%;">
                    <input type="button" id="CreateTaskApprovalFormFieldNameMasterDetails" value="@Resources.ButtonAction_Submit" class="btn btn-primary" />
                </div>
            
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/materialtheme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        TaskApprovalFormFieldNameMaster.Initialize();

    //    var map = {};
    //    var getData1 = function () {
    //        return function findMatches(q, cb) {
    //            var matches, substringRegex;

    //            // an array that will be populated with substring matches
    //            matches = [];

    //            // regex used to determine if a string contains the substring `q`
    //            substrRegex = new RegExp(q, 'i');
    //            debugger;
    //            $.ajax({
    //                url: "/TaskApprovalFormFieldNameMaster/GetItemNumberSearchList",
    //                type: "POST",
    //                dataType: "json",
    //                data: { term: q },
    //                success: function (data) {
    //                    debugger;
    //                    // iterate through the pool of strings and for any string that
    //                    // contains the substring `q`, add it to the `matches` array
    //                    $.each(data, function (i, response1) {
    //                        // if (substrRegex.test(response.name)) {
    //                        map[response1.name] = response1;
    //                        matches.push(response1.name);
    //                        // }
    //                    });
    //                },
    //                async: false
    //            })
    //            cb(matches);
    //        };
    //    };


    //    $('#ItemDescription').typeahead({
    //        hint: true,
    //        highlight: true,
    //        minLength: 1
    //    },
    //    {

    //        source: getData1()
    //    }).on("typeahead:selected", function (obj, item) {
    //        $('#GeneralItemMasterID').val(map[item].id);
    //        $('#ItemDescription').val(map[item].name);
    //        $('#ItemNumber').val(map[item].ItemNumber);

    //    });
   });
</script>
