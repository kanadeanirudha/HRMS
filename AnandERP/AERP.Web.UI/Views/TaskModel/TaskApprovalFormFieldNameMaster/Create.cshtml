@model AERP.ViewModel.TaskApprovalFormFieldNameMasterViewModel
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Task Approval</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateTaskApprovalFormFieldNameMaster" role="form">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.FormName, new { })
                        @Html.TextBoxFor(model => model.FormName, new { maxlength = "100", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.FormName)
                </div>
                @*<div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TaskCode, new { })
                        @Html.TextBoxFor(model => model.TaskCode, new { maxlength = "20", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.TaskCode)
                </div>*@
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TaskCode, new { })
                        @Html.DropDownListFor(model => model.TaskCode, (SelectList)ViewBag.GeneralTaskModellList, "---Select Task Code---", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.TaskCode)
                </div>
                @*<div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.MerchandiseDepartmentID, new { })
                        @Html.DropDownListFor(model => model.MerchandiseDepartmentID, (SelectList)ViewBag.MerchandiseDepartmentList, "--Select Merchandise Department--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.MerchandiseDepartmentID)
                </div>*@
                @*<div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.MerchandiseCategoryID, new { })
                        @Html.DropDownListFor(model => model.MerchandiseCategoryID, (SelectList)ViewBag.MerchantiseCategoryList, "---Select Merchandise Category---", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.MerchandiseCategoryID)
                </div>*@
                @*<div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.MarchandiseSubCategoryID, new { })
                        @Html.DropDownListFor(model => model.MarchandiseSubCategoryID, (SelectList)ViewBag.MerchantiseSubCategoryList, "--Select Merchandise Sub Category--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.MarchandiseSubCategoryID)
                </div>*@
                @*<div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.MarchandiseBaseCatgoryID, new { })
                        @Html.DropDownListFor(model => model.MarchandiseBaseCatgoryID, (SelectList)ViewBag.MerchantiseBaseCategoryList, "--Select Merchandise Base Category--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.MarchandiseBaseCatgoryID)
                </div>*@
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ViewName, new { })
                        @Html.TextBoxFor(model => model.ViewName, new { maxlength = "100", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ViewName)
                </div>

                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.InsertUpdateProcedure, new { })
                        @Html.TextBoxFor(model => model.InsertUpdateProcedure, new { maxlength = "200", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.InsertUpdateProcedure)
                </div>
                <div class="form-group">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateTaskApprovalFormFieldNameMasterRecord" type="button" />
                </div>
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        TaskApprovalFormFieldNameMaster.Initialize();
    });
</script>
