@model AERP.ViewModel.SalaryAllowanceMasterViewModel

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Salary Allowance</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateSalaryAllowanceMaster">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.AllowanceHeadName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.AllowanceHeadName, new { @class = "form-control", maxlength = "200", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.AllowanceHeadName)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.AllowanceType, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.DropDownList("AllowanceType", (SelectList)ViewBag.AllowanceTypeList, "---Select Allowance Type---", new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.AllowanceType)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.AllowanceSubType, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.AllowanceSubType, new { @class = "form-control", maxlength = "200", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.AllowanceSubType)
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.ComplianceType, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.DropDownList("ComplianceType", (SelectList)ViewBag.ComplianceTypeList, new { style = "", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ComplianceType)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.HiddenFor(m => m.MapAccountID)
                        @Html.LabelFor(model => model.MapAccountName, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.MapAccountName, new { @class = "form-control", maxlength = "200", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.MapAccountName)
                    </div>
                </div>
                <div class="form-group" style="margin-left: 2%; ">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateSalaryAllowanceMasterRecord" type="button" />
                    <input name="" id="reset" type="submit" class="btn btn-default" value="@Resources.ButtonAction_Reset" />
                </div>
            </form>
        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        SalaryAllowanceMaster.Initialize();

        mapAccountName = [];
        var getDataAccountName = function () {
            debugger;
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/AccountMaster/GetAccountMasterSearchList",
                    type: "POST",
                    data: { term: q },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.AccountMasterName)) {
                                mapAccountName[response.AccountMasterName] = response;
                                matches.push(response.AccountMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#MapAccountName").typeahead({
            hint: true,
            highlight: false,
            minLength: 1
        }, {
            source: getDataAccountName()
        }).on("typeahead:selected", function (obj, item) {
            $("#MapAccountID").val(mapAccountName[item].AccountMasterID);
            $("#MapAccountName").val(mapAccountName[item].AccountMasterName);
        });

        $('#MapAccountName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#MapAccountName').typeahead('val', '');
                $("#MapAccountName").val("");
                $("#MapAccountID").val("0");
            }
        });
    });
</script>



