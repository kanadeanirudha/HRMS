@model AERP.ViewModel.OrganisationStudyCentrePrintingFormatViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>

<link href="@Url.Content("~/Content/ImageArea.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/jquery.imgareaselect.-1.0.0.js")" type="text/javascript"></script>

<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Update Organisation Printing Format</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditOrganisationStudyCentrePrintingFormat">

                @Html.HiddenFor(model => model.X)
                @Html.HiddenFor(model => model.Y)
                @Html.HiddenFor(model => model.Width)
                @Html.HiddenFor(model => model.Height)
                @Html.HiddenFor(model => model.Flickr)
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.CentreCode)
                @Html.HiddenFor(model => model.ID)
                <div class="col-sm-12">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PrintingLine1, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.PrintingLine1, new { @class = "form-control", style = "", maxlength = "200" })
                        </div>
                        @*@Html.ValidationMessageFor(model => model.PrintingLine1)*@
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.PrintingLine2, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.PrintingLine2, new { @class = "form-control", style = "", maxlength = "200" })
                        </div>
                        @*@Html.ValidationMessageFor(model => model.PrintingLine2)*@
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="col-sm-12">
                        @Html.LabelFor(model => model.PrintingLine3, new { style = "" })
                        <div class="form-group  fg-line">
                            @Html.TextBoxFor(model => model.PrintingLine3, new { @class = "form-control", style = "", maxlength = "200" })
                        </div>
                        @*@Html.ValidationMessageFor(model => model.PrintingLine3)*@
                    </div>


                </div>
                @* *@

                <div class="col-sm-12">
                    <input type="checkbox" id="aaa" style="display: none" />
                    <div class="col-sm-4 m-b-20">
                        <label>@Html.LabelFor(model => model.Logo, new { style = "" })</label>

                        <div style="">
                            <span class="btn-file" style="">


                                @if (Model.LogoFilename == null)
                                {

                                    <img alt="Photo" style="height: 127px; width: 120px;" id="previewLogo" src="~/Content/images/Avatar.png" />
                                }
                                else
                                {
                                    <img id="previewLogo" src="~/Content/UploadedFiles/OrganisationStudyCellFormat/Logo/@Model.LogoFilename" style="height: 127px; width: 120px;" />;
                                    @*<img alt="Photo" style="height: 127px; width: 120px;" id="previewLogo" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Logo))" />*@
                                }

                                @*@Html.FileFor(model => model.LogoFile)*@

                            </span>
                            @*@Html.FileFor(model => model.StudentPhotoFile)*@

                            <div class="fileinput fileinput-new" data-provides="fileinput" style="padding-top: 11px;">
                                <span class="btn btn-primary btn-file m-r-10">
                                    <span class="fileinput-new">Select file</span>
                                    <span class="fileinput-exists" style="padding-top: 11px;">Choose File</span>
                                    @Html.FileFor(model => model.LogoFile)
                                    
                                </span>
                                <span class="fileinput-filename"></span>
                                <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="top:18px;">&times;</a>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="form-group" style="margin-left: 2%; ">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="EditOrganisationStudyCentrePrintingFormatRecord" type="button" />
                    <input class="btn btn-default" value="Close" id="closeBt" type="button"/>
                </div>
            </form>

        </div>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        OrganisationStudyCentrePrintingFormat.Initialize();
        //$.magnificPopup.close();
        
        
       


        
        //$(".ajax").colorbox();
        var boxes = $('#aaa').attr('disabled', true);

        //  What happens if the File changes?
        $('#LogoFile').change(function (evt) {
            //debugger;


            var f = evt.target.files[0];
            var reader = new FileReader();
            var image = new Image();

            if (!f.type.match('image.*')) {
                alert("The selected file does not appear to be an image.");
                return;
            }
            var filename = "LogoFile";
            var maxSize = ValidateFileUpload(filename);
            if (maxSize == 1) {
                alert("Maximum file size exceeds,Your photo size should be less than 50 kb");
            }
            else {
                setBox('#IsFile');
                reader.onload = function (e) { previewLogo.attr('src', e.target.result); };
                reader.readAsDataURL(f);
            }
        });




        function ValidateFileUpload(fileName) {
            //debugger;
            var fuData = document.getElementById(fileName);
            var FileUploadPath = fuData.value;


            if (FileUploadPath == '') {
                alert("Please upload an image");

            } else {
                var Extension = FileUploadPath.substring(FileUploadPath.lastIndexOf('.') + 1).toLowerCase();



                if (Extension == "gif" || Extension == "png" || Extension == "bmp"
                            || Extension == "jpeg" || Extension == "jpg") {


                    if (fuData.files && fuData.files[0]) {

                        var size = fuData.files[0].size;
                        //alert(size);

                        if (size > 50000) {
                            return 1;
                        } else {
                            var reader = new FileReader();

                            reader.onload = function (e) {
                                $('#blah').attr('src', e.target.result);
                            }

                            reader.readAsDataURL(fuData.files[0]);
                        }
                    }

                }
                else {
                    alert("Photo only allows file types of GIF, PNG, JPG, JPEG and BMP. ");
                }
            }
        }


        //Check one of the checkboxes
        var setBox = function (filter) {
            $('button').attr('disabled', false);
            boxes.attr('checked', false)
            .filter(filter).attr({ 'checked': true, 'disabled': false });
        };

        //What happens if any checkbox is checked ?!
        boxes.change(function () {
            setBox(this);
            $('#' + this.id.substr(2)).change();
        });

        var previewLogo = $('#previewLogo').load(function () {

            //debugger;
            setPreview();
            ias.setOptions({
                x1: 0,
                y1: 0,
                x2: $(this).width(),
                y2: $(this).height(),
                show: true
            });
        });

        //Set the 4 coordinates for the cropping
        //debugger;
        var setPreview = function (x, y, w, h) {
            $('#X').val(x || 0);
            $('#Y').val(y || 0);
            $('#Width').val(w || preview[0].naturalWidth);
            $('#Height').val(h || preview[0].naturalHeight);
        };
        var ias = previewLogo.imgAreaSelect({
            handles: true,
            instance: true,
            parent: 'body',
            onSelectEnd: function (s, e) {
                var scale = preview[0].naturalWidth / preview.width();
                var _f = Math.floor;
                setPreview(_f(scale * e.x1), _f(scale * e.y1), _f(scale * e.width), _f(scale * e.height));
            }
        });

        // Fetch Flickr images
        var fetchImages = function (query) {
            $.getJSON('http://www.flickr.com/services/feeds/photos_public.gne?jsoncallback=?', {
                tags: query,
                tagmode: "any",
                format: "json"
            }, function (data) {
                var screen = $('<div />').addClass('waitScreen').click(function () {
                    $(this).remove();
                }).appendTo('body');
                var box = $('<div />').addClass('flickrImages').appendTo(screen);
                $.each(data.items, function (i, v) {
                    console.log(data.items[i]);
                    $('<img />').addClass('flickrImage').attr('src', data.items[i].media.m).click(function () {
                        $('#Flickr').val(this.src).change();
                        screen.remove();
                    }).appendTo(box);
                });
            });
        };

        //   Flickr
        $('#FlickrQuery').change(function () {
            fetchImages(this.value);
        });

        $('#Flickr').change(function () {
            setBox('#IsFlickr');
            preview.attr('src', this.value);
        });

        //What happens if the URL changes?
        $('#Url').change(function () {
            setBox('#IsUrl');
            preview.attr('src', this.value);
        });
        //Initial state of X, Y, Width and Height is 0 0 1 1
        setPreview(0, 0, 1, 1);
        $('button').attr('disabled', true);
        $('form').submit(function () {
            $('button').attr('disabled', true).text('Please wait ...');
        });

        //$.magnificPopup.close();

        


    });

    


</script>