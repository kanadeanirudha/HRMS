@model AERP.ViewModel.PurchaseReportMasterViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/AERP_Scripts/Purchase/CurrentStockReport.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css")" rel="stylesheet" type="text/css" />

<div class="container">
    <div class="block-header">
        <h2 style="text-transform: none;"><i class="zmdi zmdi-view-toc"></i>&nbsp;Current Stock Report </h2>
    </div>

    <div class="card" style="margin-bottom: 0px;">
        @Html.HiddenFor(m => m.errorMessage)
        @Html.HiddenFor(model => model.BalancesheetID)
        @Html.HiddenFor(model => model.LocationNameListXml)
        <form class="row" role="form">
            <div class="card-body card-padding">
                <div class="col-sm-4 m-b-25" id="LocationName">
                    @Html.LabelFor(model => model.LocationID, new { @class = "f-500 m-b-15", style = "margin-top:2%;" })
                    <p id="e5_f">
                        <select id="LocationID" class="selectpicker col-sm-12" multiple name="Location">
                            @foreach (var Location in Model.ListInventoryLocationMaster)
                            {
                                <option id="@Location.ID" value="@Location.ID"> @Location.LocationName</option>
                            }
                        </select>
                    </p>
                </div>
                <div class="col-sm-4 m-b-25">
                    @Html.LabelFor(model => model.ItemName, new { @class = "f-500 m-b-15", style = "margin-top:2%;" })
                    <div class="form-group fg-line">
                        @Html.HiddenFor(m => m.ItemNumber)
                        @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control input-sm" })
                    </div>
                </div>



                <div class="col-sm-3" style="margin-bottom:0px;">
                    <button type="button" class="btn btn-primary" id="btnShowList">@Resources.GlobalProperties_ShowList</button>
                </div>
            </div>
        </form>

    </div>


    <div id="ListViewModel">
        @{Html.RenderAction("CurrentStock", "CurrentStockReport");}
    </div>
</div>

<script src="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/js/bootstrap-select.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/nouislider/distribute/jquery.nouislider.all.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {
        debugger;
        //CurrentStockReport.Initialize();
        var map = {};
        var getData1 = function () {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                debugger;
                $.ajax({
                    url: "/CurrentStockReport/GetItemSearchList",
                    type: "POST",
                    dataType: "json",
                    data: { term: q, StorageLocationID: 0 },
                    success: function (data) {
                        debugger;
                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response1) {
                            // if (substrRegex.test(response.name)) {
                            map[response1.itemDescription] = response1;
                            matches.push(response1.itemDescription);
                            // }
                        });
                    },
                    async: false
                })
                cb(matches);
            };
        };


        $('#ItemName').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            name: 'states',
            source: getData1()
        }).on("typeahead:selected", function (obj, item) {
            $('#GeneralItemMasterID').val(map[item].id);
            $('#ItemNumber').val(map[item].itemNumber);




        });
        $('#btnShowList').click(function () {
            debugger;
            debugger;
            //if ($("#BalancesheetID").val() != null && $("#BalancesheetID").val() > 0)
            if ($("#LocationID").val() == "" || $("#LocationID").val() == null) {
                notify("Please select Location", "warning");
                $("#myDataTable tr").remove();
                return false;
            
            } else if ($("#ItemName").val() == "" || $("#ItemName").val() == null) {
                notify("Please select Item Name", "warning");
                $("#myDataTable tr").remove();
                return false;

            } else {
                CurrentStockReport.GetSelectedLocationListXML();
                //$("#BalancesheetID").val($("#BalancesheetID").val());
                //var BalancesheetID = $('#BalancesheetID').val();
                var ItemNumber = $('#ItemNumber').val();
                var LocationNameListXml = $('#LocationNameListXml').val();
                var Data = {
                };
                Data.LocationNameListXml = $('#LocationNameListXml').val();

                $.ajax(
                      {
                          cache: false,
                          type: "POST",
                          data: { LocationNameListXml: Data.LocationNameListXml, ItemNumber: ItemNumber },
                          dataType: "html",
                          url: '/CurrentStockReport/CurrentStock',
                          success: function (data) {
                              //Rebind Grid Data
                              $('#ListViewModel').html(data);
                          }
                      });
            }
            //else {
            //    ajaxRequest.ErrorMessageForJS("JsValidationMessages_BalancsheetnotCreatednotSelected", "SuccessMessage", "#FFCC80");
            //}
        })
        //function GetSelectedLocationListXML() {
        //    debugger;
        //    var DataArray = "";
        //    var selectedLocation = $("select[name=Location]").val().toString();

        //    if ($("#LocationID").val() != null && $("#LocationID").val() != "") {
        //        DataArray = selectedLocation.split(',');
        //    }

        //    var TotalRecord = selectedLocation.split(',').length;
        //   // alert(TotalRecord)
        //    var selectedLocationXML = "<rows>";

        //    for (var i = 0; i < TotalRecord; i++) {
        //        debugger;
        //        //EmployeeScheduleXML = EmployeeScheduleXML + "<row><ID>0</ID><EmployeeID>3</EmployeeID></row>";

        //        if (DataArray[i] != "") {
        //            selectedLocationXML = selectedLocationXML + "<row><ID>0</ID><LocationID>" + DataArray[i] + "</LocationID></row>";
        //        }
        //    }
        //    //alert(selectedLocationXML)
        //    if (selectedLocationXML.length > 6) {
        //        CurrentStockReport.SelectedLocationIDs = selectedLocationXML + "</rows>";
        //        $("#LocationNameListXml").val(CurrentStockReport.SelectedLocationIDs);

        //    }
        //    else {
        //        $("#LocationNameListXml").val('');
        //    }
        //   // alert($("#LocationNameListXml").val())
        //}

        $('#ItemName').on("keydown", function (e) {
            AERPValidation.AllowAlphaNumericOnly(e);
            if (e.keyCode == 8 || e.keyCode == 46) {
                $("#ItemName").val("");
                $("#myDataTable tr").remove();
                $('#ItemName').typeahead('val', '');
            }
        });
    });
</script>