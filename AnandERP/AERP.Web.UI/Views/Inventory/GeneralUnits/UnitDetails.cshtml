@model AERP.ViewModel.GeneralUnitsViewModel
<script src="@Url.Content("~/Scripts/AERP_Scripts/Invntory/GeneralUnits.js")" type="text/javascript"></script>
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Unit Details</h2>
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.CityId)
        @Html.HiddenFor(model => model.IsPincode)
        @Html.HiddenFor(model => model.LogoName)
        @Html.HiddenFor(model => model.IsLogoPath)
        @Html.HiddenFor(model => model.IsPincode)
        @Html.HiddenFor(model => model.IsTelephoneNumber)
        @Html.HiddenFor(model => model.IsFaxNumber)
        @Html.HiddenFor(model => model.IsEmailID)
        @Html.HiddenFor(model => model.IsUrl)
        @Html.HiddenFor(model => model.isGreeting)
        @Html.HiddenFor(model => model.IsAddress)
        @Html.HiddenFor(model => model.IsCityName)
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditGeneralUnits" role="form" class="row">

                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Footer, new { })
                        @Html.TextBoxFor(model => model.Footer, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Pincode, new { })
                        @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control input-sm" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TelephoneNumber, new { })
                        @Html.TextBoxFor(model => model.TelephoneNumber, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.FaxNumber, new { })
                        @Html.TextBoxFor(model => model.FaxNumber, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.EmailID, new { })
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control input-sm" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Url, new { })
                        @Html.TextBoxFor(model => model.Url, new { @class = "form-control input-sm" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.DisplayIcon, new { })
                        @Html.TextBoxFor(model => model.DisplayIcon, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Greeting, new { })
                        @Html.TextBoxFor(model => model.Greeting, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.CityName, new { })
                        @Html.TextBoxFor(model => model.CityName, new { @class = "form-control input-sm typeahead" })
                    </div>
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.LocationAddress, new { })
                        @Html.TextBoxFor(model => model.LocationAddress, new { @class = "form-control input-sm " })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3" style="padding: 14px 16px; width: 18%;" for="inputEmail3"><span style="color:red;">*</span>Upload Logo</label>
                    <div class="fileinput fileinput-new" data-provides="fileinput" style="padding-top: 11px;">
                        <span class="btn btn-primary btn-file m-r-10">
                            <span class="fileinput-new">Select file</span>
                            <span class="fileinput-exists" style="padding-top: 11px;">Choose File</span>
                            <input type="file" multiple = "multiple"  id="LogoPath"/>
                        </span>
                        <span class="fileinput-filename"></span>
                        <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="top:18px;">&times;</a>
                    </div>
                    @if (Model.LogoName != null && Model.LogoName != "")
                    {
                        <img src="~/Content/UploadedFiles/Inventory/Logo/@Model.LogoName" style="height:60px;" />;
                    }
                </div>
                @*<div class="form-group col-sm-3">
                    @if (Model.LogoName != null || Model.LogoName != "")
                    {
                        <img src="~/Content/UploadedFiles/Inventory_1/Logo/@Model.LogoName" style="height:60px;" />;
                    }
                </div>*@
                    <div class="form-group col-sm-12" style="margin-left:0%;">
                        <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="EditGeneralUnitsRecord" type="button" />
                    </div>

</form>
            </div>
        </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/Theme/vendors/bower_components/typeahead.js/dist/typeahead.jquery.js"></script>
<script src="@Url.Content("~/Content/Theme/vendors/fileinput/fileinput.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        GeneralUnits.Initialize();
        //=======================CityName=================================

        var map = {};
        var getData = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/GeneralUnits/GetCityList",
                    type: "POST",
                    dataType: "json",
                    data: { term: q },
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response) {
                            if (substrRegex.test(response.name)) {
                                map[response.name] = response;
                                matches.push(response.name);

                            }
                        });
                    },
                    async: false
                })
                cb(matches);
            };

        };


        $('#CityName').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            source: getData()
        }).on("typeahead:selected", function (obj, item) {
            $('#CityId').val(map[item].id);
        });
    });


    $('#CityName').on("keydown", function (e) {
        if (e.keyCode == 8 || e.keyCode == 46) {
            $("#CityId").val("0");
            $('#CityName').typeahead('val', '');
            $("#CityName").val("");
        }
    });
</script>
