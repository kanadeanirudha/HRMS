@model AERP.ViewModel.GeneralItemCategoryMasterViewModel
<div id="custom-content">
    @Html.HiddenFor(model => model.ID)
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Edit Base Merchandise Category</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormEditGeneralItemCategoryMaster" role="form">
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ItemCategoryDescription, new { })
                        @Html.TextBoxFor(model => model.ItemCategoryDescription, new { maxlength = "60", @class = "form-control input-sm typeahead" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ItemCategoryDescription)
                </div>
                <div class="col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ItemCategoryCode, new { })
                        @Html.TextBoxFor(model => model.ItemCategoryCode, new { @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ItemCategoryCode)
                </div>
                <div class="col-sm-4">
                    @if (@Model.GeneralItemCategoryMasterDTO.IsConsumable)
                    {

                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsConsumable" checked>
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsConsumable, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsConsumable)
                        </div>

                    }
                    else
                    {
                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsConsumable">
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsConsumable, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsConsumable)
                        </div>
                    }
                </div>
                <div class="col-sm-4">
                    @if (@Model.GeneralItemCategoryMasterDTO.IsMachine)
                    {

                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsMachine" checked>
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsMachine, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsMachine)
                        </div>

                    }
                    else
                    {
                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsMachine">
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsMachine, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsMachine)
                        </div>
                    }
                </div>
                <div class="col-sm-4">
                    @if (@Model.GeneralItemCategoryMasterDTO.IsToner)
                    {

                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsToner" checked>
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsToner, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsToner)
                        </div>

                    }
                    else
                    {
                        <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                            <label>
                                <input type="checkbox" id="IsToner">
                                <i class="input-helper"></i>
                                @Html.LabelFor(model => model.IsToner, new { style = "" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsToner)
                        </div>
                    }
                </div>
                <div class="form-group">
                    <input class="btn btn-primary btn-sm m-t-10 waves-effect" style="margin-left:16px" value="@Resources.ButtonAction_Submit" id="EditBMCGeneralItemCategoryMasterRecord" type="button" />
                </div>
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        GeneralItemCategoryMaster.Initialize();
    });
</script>
