@model AMS.ViewModel.GeneralItemMasterViewModel
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Create Bar Code</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateBarcodes" role="form" class="row">
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                        <span style="color:red">*</span> @Html.LabelFor(model => model.ItemNumber, new { })
                        @Html.TextBoxFor(model => model.ItemNumber, new { maxlength = "50", @class = "form-control input-sm " })

                    </div>
                    @Html.ValidationMessageFor(model => model.ItemNumber)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                        <span style="color:red">*</span> @Html.LabelFor(model => model.ItemDescription, new { })
                        @Html.HiddenFor(model => model.GeneralItemMasterID)
                        @Html.TextBoxFor(model => model.ItemDescription, new { maxlength = "50", @class = "form-control input-sm " })

                    </div>
                    @Html.ValidationMessageFor(model => model.ItemDescription)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group select fg-line">
                        <span style="color:red">*</span> @Html.LabelFor(model => model.UoMGroupCode, new { })
                        @*@Html.TextBoxFor(model => model.UoMGroupCode, new { maxlength = "10", @class = "form-control input-sm " })*@
                        @Html.DropDownListFor(model => model.UoMGroupCode, (SelectList)ViewBag.InventoryUoMGroupAndDetailsList, "--Select UoM Group--", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.UoMGroupCode)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group select fg-line">
                        <span style="color:red">*</span> @Html.LabelFor(model => model.UomCode, new { })
                        @*@Html.TextBoxFor(model => model.UomCode, new { maxlength = "20", @class = "form-control input-sm " })*@
                        @Html.DropDownListFor(model => model.UomCode, (SelectList)ViewBag.InventoryUoMMasterForUomCodeList, "---Select Purchase Uom Code ---", new { @class = "form-control input-sm" })
                    </div>
                    @Html.ValidationMessageFor(model => model.UomCode)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                        <span style="color:red">*</span> @Html.LabelFor(model => model.BarCode, new { })
                        @Html.TextBoxFor(model => model.BarCode, new { maxlength = "11", @class = "form-control input-sm " })

                    </div>
                    @Html.ValidationMessageFor(model => model.BarCode)
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        <label style="margin-top: 2%; margin-bottom: 3%;">
                            @Html.LabelFor(model => model.IsDefault, new { style = "padding-left: 0px; margin-top:2%;" })

                        </label>
                    </div>
                    <div class="checkbox col-sm-3">
                        <input type="checkbox" value="" id="IsDefault">
                        <i class="input-helper"></i>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group fg-line">
                        <label style="margin-top: 2%; margin-bottom: 3%;">
                            @Html.LabelFor(model => model.IsBaseUom, new { style = "padding-left: 0px; margin-top:2%;" })

                        </label>
                    </div>
                    <div class="checkbox col-sm-3">
                        <input type="checkbox" value="" id="IsBaseUom">
                        <i class="input-helper"></i>
                    </div>
                </div>

                <div class="form-group col-sm-12">
                    <input class="btn btn-primary" style="margin-left:1%" value="@Resources.ButtonAction_Submit" id="CreateBarcodesRecord" type="button" />
                </div>

            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate-1.15.0.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/materialtheme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        Barcodes.Initialize();
        //=============Search Item Description============================
        var map = {};
        var getData1 = function () {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({  
                    url: "/Barcodes/GetItemDescriptionDetails",
                    type: "POST",
                    dataType: "json",
                    data: { term: q },
                    success: function (data) {
                        debugger;
                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response1) {
                            // if (substrRegex.test(response.name)) {
                            map[response1.ItemDescription] = response1;
                            matches.push(response1.ItemDescription);
                            // }
                        });
                    },
                    async: false
                })
                cb(matches);
            };
        };


        $('#ItemDescription').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            name: 'states',
            source: getData1()
        }).on("typeahead:selected", function (obj, item) {
          
            $('#ItemDescription').val(map[item].ItemDescription);
            $('#UomCode').val(map[item].UomCode);
            $('#UoMGroupCode').val(map[item].UoMGroupCode);
            
            $('#GeneralItemMasterID').val(map[item].id);
        });


    });
</script>

