@model AERP.ViewModel.GeneralItemMasterViewModel
<div id="custom-content">
    <div class="block-header">
        @Html.HiddenFor(model => @Model.GeneralItemMasterID)
        @Html.HiddenFor(model => model.ItemNumber)
        @Html.HiddenFor(model => model.GeneralUnitsID)
        @Html.HiddenFor(model => @Model.UnitName)
        @Html.HiddenFor(model => @Model.InventoryItemCodeCentreLevelSpecificInfoID)
        @*@Html.HiddenFor(model => model.GeneralVendorID)*@



        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Store Specific Information For (@Model.UnitName)</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            @*<div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>*@
            <form id="FormCreateStoreSpecificInformation" role="form" class="row">
                <div class="row">
                    <div class="form-group col-sm-4">
                        <div class="form-group select fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.RPType, new { })
                            @Html.DropDownList("RPType", ViewData["RPType"] as List<SelectListItem>, new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "RP Type*" })
                        </div>
                        @Html.ValidationMessageFor(model => model.RPType)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.ReorderPoint, new { })
                            @Html.TextBoxFor(model => model.ReorderPoint, new { maxlength = "50", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.ReorderPoint)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.SafetyStockDriven, new { })
                            @Html.TextBoxFor(model => model.SafetyStockDriven, new { maxlength = "50", @class = "form-control input-sm "})

                        </div>
                        @Html.ValidationMessageFor(model => model.SafetyStockDriven)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.MaxStock, new { })
                            @Html.TextBoxFor(model => model.MaxStock, new { maxlength = "8", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.MaxStock)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.RoundingProfile, new { })
                            @Html.TextBoxFor(model => model.RoundingProfile, new { maxlength = "50", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.RoundingProfile)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.PlannerCode, new { })
                            @Html.TextBoxFor(model => model.PlannerCode, new { maxlength = "3", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.PlannerCode)
                    </div>
                </div>
                <div class="row">

                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.OrderingDay, new { })
                            @Html.DropDownListFor(model => model.OrderingDay, (SelectList)ViewBag.OrderingAndDeliveryDay, "--Select Ordering Day--", new { @class = "form-control input-sm" })

                        </div>
                        @Html.ValidationMessageFor(model => model.OrderingDay)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.DeliveryDay, new { })
                            @Html.DropDownListFor(model => model.DeliveryDay, (SelectList)ViewBag.OrderingAndDeliveryDay, "--Select Delivery Day--", new { @class = "form-control input-sm" })

                        </div>
                        @Html.ValidationMessageFor(model => model.DeliveryDay)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.LeadTimeForStore, new { })
                            @Html.TextBoxFor(model => model.LeadTimeForStore, new { maxlength = "50", @class = "form-control input-sm ",disabled = "disabled"})

                        </div>
                        @Html.ValidationMessageFor(model => model.LeadTimeForStore)
                    </div>
                </div>
                <div class="row">

                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.GRProccessingTime, new { })
                            @Html.TextBoxFor(model => model.GRProccessingTime, new { maxlength = "50", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.GRProccessingTime)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group select fg-line">
                            @Html.LabelFor(model => model.SupplySource, new { })
                            @Html.DropDownList("SupplySourceCode", ViewData["SupplySourceCode"] as List<SelectListItem>, new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "SupplySourceCode *" })

                        </div>
                        @Html.ValidationMessageFor(model => model.SupplySource)
                    </div>
                    <div class="checkbox col-sm-4" style="margin-top:5%;">





                        <label style="margin-top: 5%; margin-bottom: 3%;">
                            @if (Model.BlockforProcurutment == true)
                            {
                                <input type="checkbox" id="BlockforProcurutment" name="BlockforProcurutment" checked>
                            }
                            else 
                            { 
                            <input type="checkbox" id="BlockforProcurutment" name="BlockforProcurutment">
                            }
                            <i class="input-helper"></i>

                            @Html.LabelFor(model => model.BlockforProcurutment, new { style = "padding-left: 0px; margin-top:2%;", Value = @Model.BlockforProcurutment })
                        </label>



                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.Facing, new { })
                            @Html.TextBoxFor(model => model.Facing, new { @class = "form-control input-sm " })
                        </div>
                        @Html.ValidationMessageFor(model => model.Facing)
                    </div>

                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.ShelfNumber, new { })
                            @Html.TextBoxFor(model => model.ShelfNumber, new { @class = "form-control input-sm " })
                        </div>
                        @Html.ValidationMessageFor(model => model.ShelfNumber)
                    </div>
                </div>

                <div class="form-group col-sm-12">
                    <input class="btn btn-primary" @*style="margin-left:1%"*@ value="@Resources.ButtonAction_Submit" id="CreateStoreSpecificInformation" type="button" />
                </div>

            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        GeneralItemMaster.Initialize();
    });
</script>

