@model AERP.ViewModel.GeneralItemMasterViewModel

<div id="custom-content">
    @Html.HiddenFor(model => model.GeneralItemMasterID)
    @Html.HiddenFor(model => model.GeneralItemSupliersDataID)
    @*@Html.HiddenFor(model => model.TaskCode)*@
    <input type="hidden" id="TaskCode" value="GeneralItemSupliersData" />
    @*<div class="block-header">

        </div>*@
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">x</span></button>
                <p id="messageContent"></p>
            </div>
            <div id="displayErrorMessage1"></div>
            <form id="FormCreateGeneralItemMaster" role="form" class="row">


                <div class="row">
                   
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.PurchaseOrganization, new { })
                            @Html.TextBoxFor(model => model.PurchaseOrganization, new { maxlength = "50", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.PurchaseOrganization)
                    </div>
                  
                    <div class="col-sm-4">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.HiddenFor(model => model.GeneralVendorID)
                            @Html.LabelFor(model => model.VendorName, new { })
                            @Html.TextBoxFor(model => model.VendorName, new { @class = "form-control input-sm typeahead" })
                        </div>
                        @Html.ValidationMessageFor(model => model.VendorName)
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.VendorNumber, new { })
                            @Html.TextBoxFor(model => model.VendorNumber, new {  @class = "form-control input-sm typeahead" ,disabled="disabled"})
                        </div>
                        @Html.ValidationMessageFor(model => model.VendorNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group  select fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.PurchaseUoMCode, new { })
                            @*@Html.TextBoxFor(model => model.PurchaseUoMCode, new { maxlength = "50", @class = "form-control input-sm " })*@
                            @Html.DropDownListFor(model => model.PurchaseUoMCode, (SelectList)ViewBag.InventoryPurchaseUomCodeList, new { @class = "form-control input-sm" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PurchaseUoMCode)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.ManufacturCatalogNumber, new { })
                            @Html.TextBoxFor(model => model.ManufacturCatalogNumber, new { maxlength = "50", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.ManufacturCatalogNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group select fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.GeneralPurchaseGroupMasterID, new { })
                            @Html.DropDownListFor(model => model.GeneralPurchaseGroupMasterID, (SelectList)ViewBag.GeneralPurchaseGroupMasterList, "--Select Purchase Group--", new { @class = "form-control input-sm" })
                        </div>
                        @Html.ValidationMessageFor(model => model.GeneralPurchaseGroupMasterID)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.MinimumOrderquantity, new { })
                            @Html.TextBoxFor(model => model.MinimumOrderquantity, new { maxlength = "8", @class = "form-control input-sm " })
                        </div>
                        @Html.ValidationMessageFor(model => model.MinimumOrderquantity)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.LeadTime, new { })
                            @Html.TextBoxFor(model => model.LeadTime, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(model => model.LeadTime)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.ManufacturerName, new { })
                            @Html.TextBoxFor(model => model.ManufacturerName, new { @class = "form-control input-sm" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ManufacturerName)
                    </div>
                 
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.ShelfLife, new { })
                            @Html.TextBoxFor(model => model.ShelfLife, new { maxlength = "50", @class = "form-control input-sm " })
                        </div>
                        @Html.ValidationMessageFor(model => model.ShelfLife)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.RemainingShelfLife, new { })
                            @Html.TextBoxFor(model => model.RemainingShelfLife, new { @class = "form-control input-sm" })
                        </div>
                        @Html.ValidationMessageFor(model => model.RemainingShelfLife)
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.CountryOfOrigin, new { })
                            @Html.DropDownListFor(model => model.CountryOfOrigin, (SelectList)ViewBag.GeneralCountryMasterList, "---Select Country ---", new { @class = "form-control input-sm" })
                            @*@Html.TextBoxFor(model => model.CountryOfOrigin, new { maxlength = "50", @class = "form-control input-sm typeahead" })*@
                        </div>
                        @Html.ValidationMessageFor(model => model.CountryOfOrigin)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.HSCode, new { })
                            @Html.TextBoxFor(model => model.HSCode, new { maxlength = "50", @class = "form-control input-sm typeahead" })

                        </div>
                        @Html.ValidationMessageFor(model => model.HSCode)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group fg-line"><span style="color:red">*</span>
                            @Html.LabelFor(model => model.LastPurchasePrice, new { })
                            @Html.TextBoxFor(model => model.LastPurchasePrice, new { maxlength = "8", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.LastPurchasePrice)
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.CurrencyCode, new { })
                            @*@Html.DropDownListFor(model => model.CurrencyCode, (SelectList)ViewBag.GeneralCurrencyMasterList, "---Select Currency ---", new { @class = "form-control input-sm" })*@
                            @Html.TextBoxFor(model => model.CurrencyCode, new { maxlength = "50", @class = "form-control input-sm typeahead", disabled = "disabled" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CurrencyCode)
                    </div>
                </div>
                @*<div class="form-group col-sm-12">
                        <input class="btn btn-primary" style="margin-left:1%" value="@Resources.ButtonAction_Submit" id="CreateGeneralItemMasterRecord" type="button" />
                    </div>*@

            </form>
        </div>
    </div>
</div> 

<script src="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/js/bootstrap-select.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>

<script src="~/Content/Theme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        //$("#ShelfLife").datetimepicker({
        //    format: 'DD MMM YYYY',
        //    minDate: moment(),
        //});

        //$("#ShelfLife").on("keydown", function () {
        //    var keycode = (e.keyCode ? e.keyCode : e.which);
        //    if (keycode != 9) {
        //        return false;
        //    }
        //});
        GeneralItemMaster.Initialize();

        //=======================Vendor Name=================================

        var map = {};
        var getVendorData = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/GeneralItemMaster/GetVendorSearchList",
                    type: "POST",
                    dataType: "json",
                    data: { term: q },
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response) {
                            //if (substrRegex.test(response.name)) {
                                map[response.name] = response;
                                matches.push(response.name);
                               // $('#GeneralVendorID').val(response.id);

                           // }
                        });
                    },
                    async: false
                })
                cb(matches);
            };

        };


        $('.typeahead').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            source: getVendorData()
        }).on("typeahead:selected", function (obj, item) {
            
            $("#CountryOfOrigin").val(map[item].countryId);
            $("#CurrencyCode").val(map[item].currency);
            $('#GeneralVendorID').val(map[item].id);
            $('#VendorNumber').val(map[item].VendorNumber);
            var ItemNumber = $("#ItemNumber").val();
            $("#LeadTime").val('');
            $.ajax({
                cache: false,
                type: "POST",
                dataType: "json",
                data: { "ItemNumber": ItemNumber, "GeneralVendorID": map[item].id },
                url: '/GeneralItemMaster/GetLeadTimeByVendorID',
                success: function (data) {

                    $("#LeadTime").val(data.replace(/"/g, ""));
                }
            });

        });
        $('#VendorName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {

                $('#VendorName').typeahead('val', '');
                $("#VendorName").val("");
                $("#VendorNumber").val("0");
            }


        });



    });
</script>



