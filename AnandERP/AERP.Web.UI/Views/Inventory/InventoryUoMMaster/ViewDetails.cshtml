@model AERP.ViewModel.InventoryUoMMasterViewModel

<div id="custom-content">
    <div class="block-header">
        @Html.HiddenFor(model => model.DimensionUnitMasterID)
        @*@Html.HiddenFor(model => model.IsDefaultCount)*@
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;View Details</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateInventoryUoMMaster" role="form" class="row">
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.UomCode, new { })
                        @Html.TextBoxFor(model => model.UomCode, new { maxlength = "10", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.UomCode)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.UoMDescription, new { })
                        @Html.TextBoxFor(model => model.UoMDescription, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.UoMDescription)
                </div>
                @*<div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.CommercialDescription, new { })
                        @Html.TextBoxFor(model => model.CommercialDescription, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.CommercialDescription)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.ConvertionFactor, new { })
                        @Html.TextBoxFor(model => model.ConvertionFactor, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.ConvertionFactor)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.AdditiveConstant, new { })
                        @Html.TextBoxFor(model => model.AdditiveConstant, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.AdditiveConstant)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                         @Html.LabelFor(model => model.DecimalPlacesUpto, new { })
                        @Html.TextBoxFor(model => model.DecimalPlacesUpto, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.DecimalPlacesUpto)
                </div>
                <div class="form-group col-sm-6">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.DecimalRounding, new { })
                        @Html.TextBoxFor(model => model.DecimalRounding, new { maxlength = "50", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.DecimalRounding)
                </div>*@
                @*<div class="checkbox col-sm-6" style="margin-top:2%;">
                    <label style="margin-top: 2%; margin-bottom: 3%;">
                        <input type="checkbox" value="" id="IsAlternativeUom">
                        <i class="input-helper"></i>
                        @Html.LabelFor(model => model.IsAlternativeUom, new { style = "padding-left: 0px; margin-top:2%;", disabled = "disabled" })
                    </label>
                </div>*@
                @*<div class="col-sm-6">

                    <label style="margin-top: 3%; margin-bottom: 3%;">
                        @Html.LabelFor(model => model.IsAlternativeUom, new { style = "padding-left: 0px; margin-top:2%;" })<br /><br />
                        @Html.CheckBoxFor(model => model.IsAlternativeUom, new { @class = "checkbox col-sm-6", style = "font-Weight:Bold;", disabled = "disabled" })
                        <i class="input-helper"></i>
                    </label>

                </div>*@
            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        InventoryUoMMaster.Initialize();
    });
</script>

