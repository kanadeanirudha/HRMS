@model AERP.ViewModel.InventoryStockAdjustmentViewModel
@{
    ViewBag.Title = "RestaurantItemIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .mfp-content {
        width: 70%;
    }
</style>

<div id="ListViewModel" class="container">
    <div id="custom-content">
        <div class="block-header">
            @*@Html.HiddenFor(model => model.LowerUom)*@
            @Html.HiddenFor(model => model.ConvFact)
            @Html.HiddenFor(model => model.InventoryPhysicalStockAdjustmentMasterID)
            @Html.HiddenFor(model => model.InventoryPhysicalStockAdjustmentID)
            @Html.HiddenFor(model => model.IsCurrentStock)
            @Html.HiddenFor(m => m.CreatedBy)
            <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Stock Adjustment</h2>
        </div>
        <div class="card">
            <div class="card-body card-padding">
                <div id="displayErrorMessage" role="alert" hidden class="alert">
                    <button class="close" type="button"><span aria-hidden="true">×</span></button>
                    <p id="messageContent"></p>
                </div>
                <div class="row">
                    <div class="form-group col-sm-1">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.TransDate, new { })
                        </div>
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="fg-line dtp-container">
                            @Html.TextBoxFor(model => model.TransDate, new { maxlength = "20", @class = "form-control input-sm ", style = "margin-top:0px" })
                        </div>
                    </div>
                    <div class="form-group col-sm-1" style="display:none;">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.CentreCode, new { })
                        </div>
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="form-group select fg-line">   @*Replace centre by Store and Store by Location*@
                            @Html.DropDownListFor(m => m.CentreCode, Model.ListGetAdminRoleApplicableCentreItems, "------Select Store-------", new { @class = "form-control", data_toggle = "tooltip", data_placement = "top", data_original_title = "Centre *" })
                        </div>
                    </div>
                    <div class="form-group col-sm-1" style="display:none;">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.GeneralUnitsID, new { })
                        </div>
                    </div>
                    <div class="form-group col-sm-2">
                        <div class="form-group select fg-line">
                            @Html.DropDownListFor(model => model.GeneralUnitsID, Model.ListGetGeneralUnitsItems, "------Select Location-------", new { @class = "form-control input-sm AddGeneralUnitsID", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Units Type*" })
                        </div>
                    </div>
                    <div class="form-group col-sm-1" style="margin-top:10px">
                        <div class="checkbox m-b-15">
                            <label>
                                <input type="checkbox" value="" id="Ingredient">
                                <i class="input-helper"></i>
                                Ingredient
                            </label>
                        </div></div>
                    <div class="form-group col-sm-1">
                        <div class="checkbox m-b-15" style="margin-left:25px">
                            <label>
                                <input type="checkbox" value="" id="Recipe" checked disabled="disabled">
                                <i class="input-helper"></i>
                                Recipe
                            </label>
                        </div></div>






                    </div>
                <form id="FormCreateInventoryStockAdjustmentForRecipeItem" role="form" class="row">
                    <div class="row">

                        <div class="form-group col-sm-4">
                            <div class="form-group fg-line">
                                @Html.LabelFor(model => model.ItemName, new { })
                                @Html.HiddenFor(model => model.PrimaryItemOutputID)
                                @Html.HiddenFor(model => model.InventoryVariationMasterID)
                                @Html.HiddenFor(model => model.InventoryRecipeMasterID)

                                @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control input-sm ", disabled = "disabled" })

                            </div>
                            @Html.ValidationMessageFor(model => model.ItemName)
                        </div>

                        <div class="form-group col-sm-2">
                            <div class="form-group fg-line">
                                @Html.LabelFor(model => model.RecipeQuantity, new { })
                                @Html.TextBoxFor(model => model.RecipeQuantity, new { maxlength = "5", @class = "form-control input-sm "  })

                            </div>
                            @*@Html.ValidationMessageFor(model => model.Quantity)*@
                        </div>
                        <div class="form-group col-sm-2">
                            <div class="form-group fg-line">
                                @Html.LabelFor(model => model.ActionStatus, new { })
                                @Html.DropDownList("ActionStatus", ViewData["Action"] as List<SelectListItem>, "--Select Action--", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Action*" })

                            </div>
                            @Html.ValidationMessageFor(model => model.ActionStatus)
                        </div>


                    </div>
                    <div class="col-sm-12">
                        <div id="ListViewModel" class="">
                            <div id="DivAddRowTable">
                                <table id="tblDataRecipe" class="table table-striped ">
                                    <thead>
                                        <tr>
                                            <th style="display: none"></th>
                                            <th class="center">
                                                @*<input type="checkbox" id="Check" class="checkall-user" name="checkbox12" disabled="disabled">*@
                                                <div class="checkbox m-b-15" style="">
                                                    <label style="">
                                                        <input type="checkbox" id="Check" class="checkall-user" name="checkbox12">
                                                        <i class="input-helper"></i>
                                                    </label>
                                                </div>
                                            </th>   
                                            <th>Item Description</th>
                                            <th>Quantity</th>
                                            <th>Consumption UOM</th>
                                            <th>Total Stock</th>
                                            <th>Base UOM</th>
                                            <th>Corrected Stock</th>
                                            <th>Unrestricted Stock</th>
                                           
                                        </tr>
                                    </thead>
                                    <tbody id="tbltbody"></tbody>
                                </table><br /><br /><br /><br />
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3 pull-left">
                        <button type="button" id="CreateInventoryStockAdjustmentForRecipeItemRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>



            </div>
        </div>
    </div>


</div>
<script src="@Url.Content("~/Scripts/AERP_Scripts/Inventory/InventoryStockAdjustment.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jquery-ui.theme.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/admin/jquery-ui-1.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Content/Theme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $("#TransDate").datetimepicker({
            format: 'DD MMM YYYY',
            maxDate: moment()
        });

        InventoryStockAdjustment.Initialize();
        
        function ListViewReload() {
            var Table = $('#myDataTable').dataTable();
            Table.fnReloadAjax('InventoryStockAdjustment/AjaxHandler');
        };

        //=============Search Item Description============================
        var map = {};
        var getData1 = function () {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/InventoryStockAdjustment/GetRecipeItemDescriptionDetails",
                    type: "POST",
                    dataType: "json",
                    data: { term: q, GeneralUnitsID: $("#GeneralUnitsID").val() },
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response1) {
                            // if (substrRegex.test(response.name)) {
                            map[response1.ItemDescription] = response1;
                            matches.push(response1.ItemDescription);
                            // }
                        });
                    },
                    async: false
                })
                cb(matches);
            };
        };


        $('#ItemName').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            name: 'states',
            source: getData1()
        }).on("typeahead:selected", function (obj, item) {
            // $('#GeneralItemMasterID').val(map[item].id);
            $('#ItemName').val(map[item].ItemDescription);
            $('#InventoryRecipeMasterID').val(map[item].InventoryRecipeMasterID);
            $('#RecipeTitle').val(map[item].RecipeTitle);
            $('#RecipeDescription').val(map[item].RecipeDescription);
            $('#PrimaryItemOutputID').val(map[item].PrimaryItemOutputID);
            $('#InventoryVariationMasterID').val(map[item].InventoryVariationMasterID);
            $('#RecipeVariationTitle').val(map[item].RecipeVariationTitle);
            $('#RecipeQuantity').val(1);
            $(".checkall-user").prop("checked", true);


            var InventoryRecipeMasterID = $("#InventoryRecipeMasterID").val();
            var InventoryVariationMasterID = $("#InventoryVariationMasterID").val();

            debugger;
            $.ajax({
                cache: false,
                type: "POST",
                dataType: "json",
                data: { "InventoryRecipeMasterID": InventoryRecipeMasterID, GeneralUnitsID: $("#GeneralUnitsID").val(), InventoryVariationMasterID: $("#InventoryVariationMasterID").val() },
                url: '/InventoryStockAdjustment/GetInventoryStockAdjustmentIngridentListForRecipeItem',
                success: function (data) {
                    TotalRecord = data.length;
                    for (var i = 0; i < TotalRecord; i++) {
                        $("#tblDataRecipe tbody").append(
                 "<tr>" +
                     "<td><input id='check_1' type='checkbox' class='check-user' name='checkbox12' onclick='CheckedSingle()' checked><i class='input-helper'></i></td>" +
                     "<td style=display:none><input id='ItemNumber' type='hidden' value='" + data[i]['IngridentItemnumber'] + "'/>" + data[i]['IngridentItemnumber'] + "</td>" +
                      "<td><input id='ItemDescription' type='hidden' value='" + data[i]['ItemDescription'] + "'/>" + data[i]['ItemDescription'] + "</td>" +
                      "<td><input id='OriginalIngridentQty' class='OriginalIngridentQty' type='hidden' value='" + data[i]['IngridentQty'] + "'/><input id='IngridentQty' class='IngridentQty' type='hidden' value='" + data[i]['IngridentQty'] + "'/><span>" + data[i]['IngridentQty'] + "</span></td>" +
                       //"<td><input id='IngridentQty' class='IngridentQty' type='hidden' value='" + data[i]['IngridentQty'] + "'/><span>" + data[i]['IngridentQty'] + "</span></td>" +
                       "<td><input id='IngridentUomCode' type='hidden' value='" + data[i]['IngridentUomCode'] + "'/><span>" + data[i]['IngridentUomCode'] + "</span></td>" +
                      "<td><input id='CurrentStockQty' type='hidden' value='" + data[i]['CurrentStockQty'] + "'/>" + parseFloat(data[i]['CurrentStockQty']).toFixed(4) + "</td>" +
                       "<td><input id='LowerUom' type='hidden' value='" + data[i]['LowerUom'] + "'/><span>" + data[i]['LowerUom'] + "</span></td>" +
                      "<td><input id='CorrectedStock' type='hidden' value='" + ((-1)* (data[i]['IngridentQty'] * data[i]['ConvFact'])) + "'/><span>" + parseFloat((-1)*(data[i]['IngridentQty'] * data[i]['ConvFact'])).toFixed(4) + "</span></td>" +
                      "<td><input id='UnrestrictedStock' type='hidden' value='" +( data[i]['CurrentStockQty'] - ((data[i]['IngridentQty'] * data[i]['ConvFact'])) )+ "'/><span>" + parseFloat(( data[i]['CurrentStockQty'] - ((data[i]['IngridentQty'] * data[i]['ConvFact'])))).toFixed(4) + "</span></td>" +
                      "<td style=display:none><input id='ConvFact' type='hidden' value='" + data[i]['ConvFact'] + "'/>" + data[i]['ConvFact'] + "</td>" +
                      "<td style=display:none><input id='ConsumptionPrice' type='hidden' value='" + data[i]['ConsumptionPrice'] + "'/>" + data[i]['ConsumptionPrice'] + "</td>" +
                      "<td style=display:none><input id='OrderingUOM' type='hidden' value='" + data[i]['OrderingUOM'] + "'/>" + data[i]['OrderingUOM'] + "</td>" +
                       "<td style=display:none><input id='BarCode' type='hidden' value='" + data[i]['BarCode'] + "'/>" + data[i]['BarCode'] + "</td>" +

                 "</tr>");
                    }
                }
            });



        });

        InventoryStockAdjustment.CheckedAll();

        $(".checkall-user").prop("disabled", false);
        $("#tblDataRecipe").on("click", "tbody tr td .check-user", function () {
            var a = (parseInt($(".check-user").length));
            var b = parseInt($(".check-user:checked").length);
            if (a != b) {
                $("input[class=checkall-user]").attr("checked", false);
            }
            else {
                $("input[class=checkall-user]").prop("checked", true);
            }
        });

        

        function CheckedSingle() {

            $("#tblDataRecipe tbody tr td  input[class='check-user']").on('click', function () {

                var CheckedArray = [];
                debugger
                var table = $('#tblDataRecipe').DataTable();
                var data = table.$("input[class='check-user']").each(function () {
                    CheckedArray.push($(this).val());
                    var $this = $(this);
                    if ($this.is(":checked")) {
                        CheckedArray.push($(this).val());
                    }

                });
            });
        }



    });
</script>










