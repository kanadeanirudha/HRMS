@model AERP.ViewModel.InventoryStockAdjustmentViewModel
<div id="custom-content">
    <div class="block-header">
        @Html.HiddenFor(model => model.LowerUom)
        @Html.HiddenFor(model => model.ConvFact)
        @Html.HiddenFor(model => model.InventoryPhysicalStockAdjustmentMasterID)
        @Html.HiddenFor(model => model.InventoryPhysicalStockAdjustmentID)
        @Html.HiddenFor(model => model.IsCurrentStock)
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Stock Adjustment</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <div class="row">
                <div class="form-group col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.TransDate, new { })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    <div class="fg-line dtp-container">
                        @Html.TextBoxFor(model => model.TransDate, new { maxlength = "20", @class = "form-control input-sm ", style = "margin-top:0px",disabled="disabled",Value = "" + DateTime.Now.ToString("d MMM yyyy") + "", })
                    </div>
                </div>
                <div class="form-group col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.GeneralUnitsID, new { })
                    </div>
                </div>
                <div class="form-group col-sm-3">
                    <div class="fg-line dtp-container">
                        @Html.DropDownListFor(model => model.GeneralUnitsID, (SelectList)ViewBag.GeneralUnitsList, "---Select Location---", new { @class = "form-control input-sm AddGeneralUnitsID" })
                    </div>
                </div>
            </div>
            <form id="FormCreateInventoryStockAdjustment" role="form" class="row">
               <div class="row"> 
                 <div class="form-group col-sm-2" style="display:none;">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.IssueFromLocationID, new { })
                        @Html.DropDownListFor(model => model.IssueFromLocationID, (SelectList)ViewBag.GeneralLocationList, "Select location", new { @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.IssueFromLocationID)
                </div>
                <div class="form-group col-sm-4">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ItemName, new { })
                        @Html.HiddenFor(model => model.ItemNumber)
                        @Html.HiddenFor(model => model.BarCode)
                        @Html.HiddenFor(model => model.Rate)
                        @Html.HiddenFor(model => model.SerialAndBatchManagedBy)
                        @Html.TextBoxFor(model => model.ItemName, new { maxlength = "20", @class = "form-control input-sm ", disabled = "disabled" })
                    </div>
                    @Html.ValidationMessageFor(model => model.ItemName)
                </div>
                <div class="form-group col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.UOM, new { })
                        @Html.TextBoxFor(model => model.UOM, new { maxlength = "20", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @Html.ValidationMessageFor(model => model.UOM)
                </div>
                <div class="form-group col-sm-2">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.Quantity, new { })
                        @Html.HiddenFor(model => model.IssueFromLocationID)
                        @Html.TextBoxFor(model => model.Quantity, new { maxlength = "5", @class = "form-control input-sm ", disabled = "disabled" })

                    </div>
                    @*@Html.ValidationMessageFor(model => model.Quantity)*@
                </div>
                   <div class="form-group col-sm-2">
                       <div class="form-group fg-line">
                           @Html.LabelFor(model => model.Convertion, new { })
                           @Html.TextBoxFor(model => model.Convertion, new { maxlength = "20", @class = "form-control input-sm ", disabled = "disabled" })

                       </div>
                       @*@Html.ValidationMessageFor(model => model.Quantity)*@
                   </div>
                   
             </div>
              <div class="row">
                  <div class="form-group col-sm-2">
                      <div class="form-group fg-line">
                          @Html.LabelFor(model => model.Action, new { })
                          @Html.DropDownList("Action", ViewData["Action"] as List<SelectListItem>, new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Action*", disabled = "disabled" })

                      </div>
                      @Html.ValidationMessageFor(model => model.Action)
                  </div>
                <div class="col-sm-2">
                    <div class="form-group fg-line">
                        <label>
                            @Html.LabelFor(model => model.TotalStock)
                        </label>

                        @Html.TextBoxFor(model => model.TotalStock, new { maxlength = "50", @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.CurrentQty)*@
                </div>
                <div class="col-sm-2">
                    <div class="form-group fg-line">
                        <label>
                            @Html.LabelFor(model => model.CorrectedStock)
                        </label>

                        @Html.TextBoxFor(model => model.CorrectedStock, new { maxlength = "50", @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.PhysicalQty)*@
                </div>

                <div class="col-sm-2">
                    <div class="form-group fg-line">
                        <label>
                            @Html.LabelFor(model => model.UnrestrictedStock)
                        </label>

                        @Html.TextBoxFor(model => model.UnrestrictedStock, new { maxlength = "50", @class = "form-control input-sm typeahead", disabled = "disabled" })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.ShrinkQuantity)*@
                </div>

                <div class="col-sm-2" style="margin-top:10px">
                    <!-- <button type="button" class="btn btn-primary" id="btnAdd">Add Row</button> -->
                    <button type="button" title="Add row" class="btn bgm-cyan btn-float waves-effect waves-circle waves-float" id="btnAdd"><i class="zmdi zmdi-plus"></i></button>
                </div>
            </div>
                <div class="col-sm-12">
                    <div id="ListViewModel" class="">
                        <div id="DivAddRowTable">
                            <table id="tblData" class="table table-striped ">
                                <thead>
                                    <tr>
                                      
                                        <th>Item Description</th>
                                        <th>Quantity</th>
                                        <th>Action</th>
                                        <th>Total Stock</th>
                                        <th>Corrected Stock</th>
                                        <th>Unrestricted Stock</th>
                                        @*<th>@Resources.DisplayName_Actions</th>*@
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table><br /><br /><br /><br />
                        </div>
                    </div>
                </div>
                <div class="form-group col-sm-12">
                    <input class="btn btn-primary" style="margin-left:1%" value="@Resources.ButtonAction_Submit" id="CreateInventoryStockAdjustmentRecord" type="button" />
                </div>
            </form>
              

           
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="~/Content/Theme/vendors/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        InventoryStockAdjustment.Initialize();

        function ListViewReload() {
            var Table = $('#myDataTable').dataTable();
            Table.fnReloadAjax('InventoryStockAdjustment/AjaxHandler');
        };

        //=============Search Item Description============================
        var map = {};
        var getData1 = function () {
            return function findMatches(q, cb) {
                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                
                $.ajax({
                    url: "/InventoryStockAdjustment/GetItemDescriptionDetails",
                    type: "POST",
                    dataType: "json",
                    data: { term: q, GeneralUnitsID: $("#GeneralUnitsID").val() },
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response1) {
                            // if (substrRegex.test(response.name)) {
                            map[response1.ItemDescription] = response1;
                            matches.push(response1.ItemDescription);
                            // }
                        });
                    },
                    async: false
                })
                cb(matches);
            };
        };


        $('#ItemName').typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        },
        {
            name: 'states',
            source: getData1()
        }).on("typeahead:selected", function (obj, item) {
           // $('#GeneralItemMasterID').val(map[item].id);
            $('#ItemName').val(map[item].ItemDescription);
            $('#UOM').val(map[item].UOM);
            $('#Convertion').val(map[item].Convertion);
            $('#BarCode').val(map[item].Barcode);
            $('#Rate').val(map[item].Rate);
            $('#ItemNumber').val(map[item].itemnumber);
            $('#TotalStock').val(map[item].TotalStock);
            $('#ConvFact').val(map[item].ConvFact);
            $('#LowerUom').val(map[item].LowerUom);
            $('#IssueFromLocationID').val(map[item].IssueFromLocationID);
            $('#SerialAndBatchManagedBy').val(map[item].SerialAndBatchManagedBy);
            
        });
    });
</script>


