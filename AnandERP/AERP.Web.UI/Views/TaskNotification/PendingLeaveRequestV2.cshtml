@model AERP.ViewModel.TaskNotificationViewModel

<button id="btnApproved" class="btn btn-success waves-effect" disabled="disabled">Approve</button>
<button id="btnReject" class="btn btn-danger  waves-effect" disabled="disabled">Reject</button>
<input type="hidden" id="taskcode" value="LA" />

<div class="card">

    <table id="MyDataTablePendingLeaveRequest" class="table table-striped table-vmiddle table-responsive ">
        <thead>
            <tr>
                <th style="display: none"></th>
                <th class="center">
                    <input type="checkbox" class="checkall-user" name="checkbox12" disabled="disabled"></th>
                <th style="text-align: center">@Resources.TableHeaders_Details </th>
                <th style="text-align: center">@Resources.TableHeaders_LeaveType </th>
                <th style="text-align: center">@Resources.TableHeaders_ApplicationDate</th>
                <th style="text-align: center">@Resources.TableHeaders_LeaveDate</th>
                <th style="text-align: center">@Resources.TableHeaders_TotalDays</th>
                <th class="" style="text-align: left">@Resources.TableHeaders_Status</th>
                <th class="center">@Resources.DisplayName_Actions</th>
            </tr>
        </thead>
    </table>

</div>
@*<script src="~/Scripts/AMS_Scripts/General_Script/EmployeeDashboardV2.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        EmployeeDashboard.CheckedAll();

        $('#btnApproved').on("click", function () {
            debugger;
            EmployeeDashboard.ActionName = "Approved";
            EmployeeDashboard.GetXmlData();
            EmployeeDashboard.AjaxCallEmployeeDashboard();
        });

        $('#btnReject').on("click", function () {
            EmployeeDashboard.ActionName = "Rejected";
            EmployeeDashboard.GetXmlData();
            EmployeeDashboard.AjaxCallEmployeeDashboard();
        });
        var isReloadedFromCookies;
        var oTable = $('#MyDataTablePendingLeaveRequest').dataTable({
            "bServerSide": true,
            "sAjaxSource": "TaskNotification/AjaxHandlerMyDataTablePendingLeaveRequest",
            "bJQueryUI": true,
            "bProcessing": true,
            "order": [[4, "desc"]],
            "bAutoWidth": true,
            "iDisplayLength": 100,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "TaskCode", "value": "LA" });
            },
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "No entries to show",
            },
            "columnDefs": [
                             {
                                 "targets": 0,
                                 "visible": false,
                             },
                             {
                                 "targets": 1,
                                 "bSortable": false,
                                 "data": null,
                                 "render": function (data, type, full, meta) {

                                     if (data[18] == "True") {
                                         var result = "<p  style='text-align: center; height:5px;'><input type='checkbox' class='check-user' name='checkbox12' value='" + data[3] + '~' + data[4] + '~' + data[5] + '~' + data[6] + '~' + data[7] + '~' + data[2] + '~' + data[13] + '~' + data[14] + '~' + data[15] + '~' + data[16] + '~' + data[17] + '~' + data[18] + '~' + data[12] + '~' + data[13] + "'></p>";
                                         EmployeeDashboard.CheckedSingle();
                                         $(".checkall-user").prop("disabled", false);

                                         return result;
                                     }
                                     else {
                                         return null;
                                     }
                                 }
                             },
                              {
                                  "targets": 2,
                                  "bSortable": false,
                                  "orderable": false,
                                  "data": null,
                                  "render": function (data, type, full, meta) {
                                      var result = "<p  style='height:5px;'>" + data[0] + "</p>";
                                      return result;
                                  }
                              },
                              {
                                  "targets": 3,
                                  "bSortable": false,
                                  "orderable": false,
                                  "data": null,
                                  "render": function (data, type, full, meta) {
                                      var result = "<p  style='text-align: center; height:5px;'>" + data[19] + "</p>";
                                      return result;
                                  }
                              },
                             {
                                 "targets": 4,
                                 "bSortable": false,
                                 "orderable": false,
                                 "data": null,
                                 "render": function (data, type, full, meta) {
                                     var result = "<p  style='text-align: center; height:5px;'>" + data[8] + "</p>";
                                     return result;
                                 }
                             },
                             {
                                 "targets": 5,
                                 "bSortable": false,
                                 "orderable": false,
                                 "data": null,
                                 "render": function (data, type, full, meta) {
                                     var result = "<p  style='text-align: center; height:5px;'>" + data[11] + "</p>";
                                     return result;
                                 }
                             },
                             {
                                 "targets": 6,
                                 "bSortable": false,
                                 "orderable": false,
                                 "data": null,
                                 "render": function (data, type, full, meta) {
                                     if (data[14] == null) {
                                         var result = "<p  style='text-align: center; height:5px;'> </p>";
                                     }
                                     else {
                                         var result = "<p  style='text-align: center; height:5px;'>" + data[14] + "</p>";
                                     }
                                     return result;
                                 }
                             },
                             {
                                 "targets": 7,
                                 "bSortable": false,
                                 "orderable": false,

                                 "data": null,
                                 "render": function (data, type, full, meta) {
                                     var chkStatus = '';
                                     if (data[1] == "1") {
                                         chkStatus = '@Resources.Displaychkstatus_Pending';
                                     }
                                     else if (data[1] == "2") {
                                         chkStatus = '@Resources.Displaychkstatus_Done';
                                     }
                                     else if (data[1] == "3") {
                                         chkStatus = '@Resources.Displaychkstatus_Reject';
                                     }
                                     var result = '';
                                     if (data[6] == "1" && data[20] == "PENDING") {
                                         result = "<button class='btn bgm-orange btn-xs'>" + chkStatus + "</button>";
                                     }
                                     else if (data[6] == "2" && data[20] == "InApproval") {
                                         result = "<button class='btn bgm-orange btn-xs'>" + chkStatus + "</button>";
                                     }
                                     else if (data[6] == "2" && data[20] == "PENDING") {
                                         result = "<button class='btn bgm-orange btn-xs'>" + chkStatus + "</button>";
                                     }
                                     return result;
                                 }
                             },
                             {
                                 "targets": 8,
                                 "bSortable": false,
                                 "data": null,
                                 "render": function (data, type, full, meta) {
                                     debugger;
                                     var result1 = '@Html.ActionLink("PendingRequestApproval1", "PendingRequestApprovalV2", new { TNDID = "TNDID1", TNMID = "TNMID1", NGTRDID = "NGTRDID1", MenuLink = "ML1", TaskCode = Model.TaskCode }, new { @class = "mfpAjaxModal btn btn-default waves-effect" })';
                                     result1 = result1.replace('TNDID1', data[3]);
                                     result1 = result1.replace('TNMID1', data[4]);
                                     result1 = result1.replace('NGTRDID1', data[5]);
                                     result1 = result1.replace('ML1', data[2]);
                                     //result1 = result1.replace("PendingRequestApproval1", '<i class="icon-file" title="@Resources.ToolTip_View"></i>');
                                     result1 = result1.replace("PendingRequestApproval1", '<span class=\"zmdi zmdi-check\" title =\"@Resources.ToolTip_View\"></span>');

                                     var TaskCode = $('input[name=TaskCode]').val();

                                     var result1 = '<a href="#" class="mfpAjaxModal btn btn-default waves-effect"><i class="zmdi zmdi-file"></i></a>';
                                     result1 = result1.replace("#", data[2] + "&TNDID=" + data[3] + "&TNMID=" + data[4] + "&GTRDID1=" + data[5] + "&TaskCode=" + TaskCode + "&StageSequenceNumber=" + data[6] + "&IsLast=" + data[7] + "&IsActiveMember=" + data[18]);

                                     result1 = result1.replace('RequestApproval', 'RequestApprovalV2');

                                     debugger;
                                     var result2 = '<i class="zmdi zmdi-lock" title="@Resources.ToolTip_ApplicationIsTakenByAnotherApprover"></i>';

                                     if (data[9] == 'True') {
                                         if (data[10] == 'True') {
                                             var result = "<p style='text-align: center; height:5px;'>" + result1 + "</p>";
                                         }
                                         else {
                                             var result = "<p style='text-align: center; height:5px;'>" + result2 + "</p>";
                                         }
                                     }
                                     else {
                                         var result = "<p style='text-align: center; height:5px;'>" + result1 + "</p>";
                                     }

                                     return result;
                                 }
                             }

            ]
        });
        DataTableSettings(oTable, "MyDataTablePendingLeaveRequest", "toggleTableColumn");
        //$('.ui-corner-tl').hide();
    });
</script>


