@model AERP.ViewModel.DashboardViewModel
@{
    Layout = null;
}
<style>
    .mfp-content {
        width: 50% !important;
    }
    @@media (max-width:768px) {
        .mfp-content {
            width: 100% !important;
        }
    }
</style>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/AERP_Scripts/Dashboard/RequestApprovalV2.js")" type="text/javascript"></script>
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;@Html.DisplayFor(model => model.RequestApprovalFieldMasterList[0].FormName) @Resources.MainMenu_RequestApproval</h2>

    </div>
    <div class="card">
        <div class="card-body card-padding" id="EmployeeShiftApplicableMasterBox" style="padding: 0 10px;">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateRequestApproval" role="form">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.TaskCode, new { id = "_TaskCode" })
                @Html.HiddenFor(m => m.TaskNotificationDetailsID)
                @Html.HiddenFor(m => m.TaskNotificationMasterID)
                @Html.HiddenFor(m => m.GeneralTaskReportingDetailsID)
                @Html.HiddenFor(m => m.PersonID)
                @Html.HiddenFor(m => m.StageSequenceNumber)
                @Html.HiddenFor(m => m.IsLastRecord)
                @for (int i = 0; i < Model.RequestApprovalFieldMasterList.Count(); i++)
                {
                    <div class="col-sm-12">
                        <div class="form-group fg-line">
                            @Html.DisplayFor(model => model.RequestApprovalFieldMasterList[i].Lable, new { })
                            @Html.TextBoxFor(model => model.RequestApprovalFieldMasterList[i].LableValue, new { disabled = "disabled", @class = "form-control" })
                        </div>
                    </div>
                 
                }
                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        @Html.LabelFor(model => model.ApprovalStatus, new { })
                        <br />
                        @Html.RadioButtonFor(model => model.ApprovalStatus, true, new { @checked = true, id = "Approve" }) &nbsp; @Resources.RadioButton_Approve &nbsp;&nbsp;
                              @Html.RadioButtonFor(model => model.ApprovalStatus, false, new { id = "Reject" })&nbsp;&nbsp; @Resources.RadioButton_Reject
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group fg-line">
                        @Html.Label("Remark", new { })
                        @Html.TextBoxFor(model => model.Remark, new { maxlength = "200", @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-12" id="CompulsoryRemark" style="color: red; display: none">
                    <div class="form-group fg-line">
                        Remark should not be blank
                    </div>
                </div>
                <div class="form-group">
                    <input type="button" id="CreateRequestApprovalRecord" value="@Resources.ButtonAction_Submit" class="btn btn-primary btn-sm m-t-10 waves-effect"/>
                </div>

            </form>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        RequestApprovalV2.Initialize();
    });
</script>





