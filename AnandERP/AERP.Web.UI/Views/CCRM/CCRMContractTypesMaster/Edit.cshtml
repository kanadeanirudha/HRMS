@model AERP.ViewModel.CCRMContractTypesMasterViewModel

<script src="@Url.Content("~/Scripts/jquery.validate.min.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/fnReloadAjax.js")" type="text/javascript"></script>

<link href="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/css/bootstrap-select.css")" rel="stylesheet" type="text/css" />
<style>
    .mfp-close-btn-in .mfp-close {
        color: #eee;
    }
</style>
<div class="mfp-content" style="background :#bfc6ca;width: 902px;margin: -10px 0px -10px -10px;">
    <div id="custom-content">
        <div class="block-header">
            <h2 style="background :#607d8b;color:white;margin-top: -10px;line-height: 2.5;width: 902px;margin-left: -10px;">&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Update Contract Types Master</h2>
        </div>
        <div class="card">
            <div class="card-body card-padding" style="background:white;margin-top:-25px;margin-left: -10px;width: 902px;">
                <div id="displayErrorMessage" role="alert" hidden class="alert">
                    <button class="close" type="button"><span aria-hidden="true">×</span></button>
                    <p id="messageContent"></p>
                </div>
                <form id="FormEditCCRMContractTypesMaster">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.ID)

                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.ContractCode, new { style = "" })
                            <div class="form-group  fg-line">
                                <span style="color:red">*</span>@Html.TextBoxFor(model => model.ContractCode, new { @class = "form-control", maxlength = "50", style = "" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ContractCode)
                        </div>
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.ContractName, new { style = "" })
                            <div class="form-group  fg-line">
                                <span style="color:red">*</span>@Html.TextBoxFor(model => model.ContractName, new { @class = "form-control", maxlength = "50", style = "" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ContractName)
                        </div>
                        <div class="col-sm-6">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.ContractType, new { style = "" })
                            <div class="form-group  fg-line select">
                                @Html.DropDownList("ContractType", ViewData["ContractType"] as List<SelectListItem>, new { style = "", @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ContractType)
                        </div>
                        @if (@Model.CCRMContractTypesMasterDTO.IsSpares)
                        {

                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsSpares" checked>
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsSpares, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsSpares)
                            </div>

                        }
                        else
                        {
                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsSpares">
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsSpares, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsSpares)
                            </div>
                        }
                        @if (@Model.CCRMContractTypesMasterDTO.IsConsumables)
                        {

                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsConsumables" checked>
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsConsumables, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsConsumables)
                            </div>

                        }
                        else
                        {
                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsConsumables">
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsConsumables, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsConsumables)
                            </div>
                        }
                        @if (@Model.CCRMContractTypesMasterDTO.ISService)
                        {

                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="ISService" checked>
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.ISService, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.ISService)
                            </div>

                        }
                        else
                        {
                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="ISService">
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.ISService, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.ISService)
                            </div>
                        }
                        @if (@Model.CCRMContractTypesMasterDTO.IsRentMachine)
                        {

                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsRentMachine" checked>
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsRentMachine, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsRentMachine)
                            </div>

                        }
                        else
                        {
                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">
                                <label>
                                    <input type="checkbox" id="IsRentMachine">
                                    <i class="input-helper"></i>
                                    @Html.LabelFor(model => model.IsRentMachine, new { style = "" })
                                </label>
                                @Html.ValidationMessageFor(model => model.IsRentMachine)
                            </div>
                        }

                        @if (@Model.CCRMContractTypesMasterDTO.IsConsumables)
                        {

                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">

                                <input type="checkbox" id="IsConsumables" checked>
                                @*<i class="input-helper"></i>*@
                                <div id="checkboxlist" class="form-group">
                                    @Html.LabelFor(model => model.ItemCategoryCode, new { style = "" })

                                    <p id="e5_f">
                                        <select id="checkboxlist1" class="form-group selectpicker" multiple name="selectCent">
                                            @*data-live-search="true"*@
                                            @foreach (var item in Model.GetGeneralCategoryMasterList)
                                            {
                                                <option id="@item.ID" value="@item.ID~@item.CCRMContractTypeDetailsID" @item.StatusFlag>@item.ItemCategoryCode</option>

                                            }
                                        </select>
                                    </p>
                                </div>

                            </div>

                        }
                        else
                        {
                            <div class="checkbox col-sm-6" style="padding-top: 2%; padding-left: 2%;">

                                <input type="checkbox" id="IsConsumables">
                                @*<i class="input-helper"></i>*@
                                <div id="checkboxlist" class="form-group" style="display:none;">
                                    @Html.LabelFor(model => model.ItemCategoryCode, new { style = "" })
                                    <p id="e5_f">
                                        <select id="checkboxlist1" class="form-group selectpicker" multiple name="selectCent">
                                            @*data-live-search="true"*@
                                            @foreach (var item in Model.GetGeneralCategoryMasterList)
                                            {

                                                <option id="@item.ID" value="@item.ID" selected="selected">@item.ItemCategoryCode</option>

                                            }
                                        </select>
                                    </p>
                                </div>

                            </div>
                        }

                    </div>


                    <div class="form-group" style="margin-left: 2%; ">
                        <input class="btn btn-info" value="@Resources.ButtonAction_Submit" id="EditCCRMContractTypesMasterRecord" type="button" />
                    </div>
                </form>

            </div>
        </div>
    </div>
    <script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/Theme/vendors/bower_components/bootstrap-select/dist/js/bootstrap-select.js")" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.selectpicker').selectpicker();
            CCRMContractTypesMaster.Initialize();
            //$('#checkboxlist1').multipleSelect();
            $('#IsConsumables').change(function () {
                debugger;
                if ($('#IsConsumables').is(':checked')) {
                    //  $('#IsConsumables').prop('checked', true);
                    $("#checkboxlist").show();

                }
                else {
                    //$('#IsConsumables').prop('checked', false);
                    $("#checkboxlist").hide();
                }
            });

        });
    </script>
</div>

