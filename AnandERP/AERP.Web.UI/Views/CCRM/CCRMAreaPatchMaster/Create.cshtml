@model AERP.ViewModel.CCRMAreaPatchMasterViewModel
<style>
    .mfp-close-btn-in .mfp-close {
        color: #eee;
    }
</style>
<div class="mfp-content" style="background :#bfc6ca;width: 902px;margin: -10px 0px -10px -10px;">
    <div id="custom-content">
        <div class="block-header">
            <h2 style="background :#607d8b;color:white;margin-top: -10px;line-height: 2.5;width: 902px;margin-left: -10px;">&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Create Area Patch Master </h2>
        </div>
        <div class="card">
            <div class="card-body card-padding" style="background:white;margin-top:-25px;margin-left: -10px;width: 902px;">
                <div id="displayErrorMessage" role="alert" hidden class="alert">
                    <button class="close" type="button"><span aria-hidden="true">×</span></button>
                    <p id="messageContent"></p>
                </div>
                <form id="FormCreateCCRMAreaPatchMaster" role="form" class="row">

                    <div class="col-sm-12">
                        <div class="row">
                            <div class="form-group col-sm-6">
                                <div class="form-group fg-line">
                                    <span style="color:red">*</span>
                                    @Html.LabelFor(model => model.AreaPatchName, new { })
                                    @Html.TextBoxFor(model => model.AreaPatchName, new { @class = "form-control input-sm " })

                                </div>
                                @Html.ValidationMessageFor(model => model.AreaPatchName)
                            </div>
                            <div class="form-group col-sm-6">
                                <div class="form-group fg-line">
                                    <span style="color:red">*</span>
                                    @Html.HiddenFor(m => m.EmployeeMasterID)
                                    @Html.LabelFor(model => model.EmployeeName, new { })
                                    @Html.TextBoxFor(model => model.EmployeeName, new { @class = "form-control input-sm " })

                                </div>
                                @Html.ValidationMessageFor(model => model.EmployeeName)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <span style="color:red">*</span>@Html.LabelFor(model => model.CCRMEngineersGroupMasterID, new { })
                            <div class="form-group fg-line">
                                @Html.DropDownListFor(model => model.CCRMEngineersGroupMasterID, (SelectList)ViewBag.CCRMEngineersGroupMasterList, "-----Select Group-----", new { @class = "form-control input-sm" })
                            </div>
                        </div>


                        <div class="form-group col-sm-6">
                            <input class="btn btn-info" style="margin-left:1%" value="@Resources.ButtonAction_Submit" id="CreateCCRMAreaPatchMasterRecord" type="button" />
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            CCRMAreaPatchMaster.Initialize();

            //EmployeeMaster serachlist
            mapEmployeeName = [];
            var getDataEmployeeName = function () {
                debugger;
                return function findMatches(q, cb) {

                    var matches, substringRegex;

                    // an array that will be populated with substring matches
                    matches = [];

                    // regex used to determine if a string contains the substring `q`
                    substrRegex = new RegExp(q, 'i');
                    debugger;
                    $.ajax({
                        url: "/CCRMEngineersGroupMaster/GetEmployeeeMasterSearchList",
                        type: "POST",
                        data: { term: q },
                        dataType: "json",
                        success: function (data) {
                            debugger;

                            // iterate through the pool of strings and for any string that
                            // contains the substring `q`, add it to the `matches` array
                            //alert(data);
                            //console.log(data);
                            $.each(data, function (i, response) {

                                if (substrRegex.test(response.EmployeeName)) {
                                    mapEmployeeName[response.EmployeeName] = response;
                                    matches.push(response.EmployeeName);

                                }

                            });

                        },
                        async: false
                    })
                    cb(matches);
                };

            };

            $("#EmployeeName").typeahead({
                hint: true,
                highlight: true,
                minLength: 1
            }, {
                source: getDataEmployeeName()
            }).on("typeahead:selected", function (obj, item) {
                $("#EmployeeMasterID").val(mapEmployeeName[item].EmployeeMasterID);
                $("#EmployeeName").val(mapEmployeeName[item].EmployeeName);
            });

        });
    </script>
</div>




