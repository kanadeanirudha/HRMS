@model AERP.ViewModel.SalesOrderDeliveryMasterAndDetailsViewModel
@Html.HiddenFor(m => m.SalesOrderMasterID)
<div class="card" style="padding-top:15px;padding-right:15px;padding-left:15px;padding-bottom:5px;">
    <div id="custom-content">
        <div class="block-header">
            <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp;Create Sales Delivery</h2>
        </div>
    </div>
    <div id="displayErrorMessage" role="alert" hidden class="alert">
        <button class="close" type="button"><span aria-hidden="true">×</span></button>
        <p id="messageContent"></p>
    </div>

    <form id="FormCreateSalesOrderDeliveryMasterAndDetailsDirectDM">
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group fg-line">
                    @Html.HiddenFor(model => model.CustomerMasterID)
                    @Html.HiddenFor(model => model.CustomerType)
                    @Html.LabelFor(model => model.CustomerName, new { })
                    @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control input-sm typeahead" })
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group fg-line">
                    @Html.HiddenFor(model => model.CustomerBranchMasterID)
                    @Html.LabelFor(model => model.BranchName, new { })
                    @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control input-sm typeahead" })
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group fg-line">
                    @Html.HiddenFor(model => model.ContactPersonID)
                    @Html.LabelFor(model => model.ContactPersonName, new { })
                    @Html.TextBoxFor(model => model.ContactPersonName, new { @class = "form-control input-sm typeahead" })
                </div>
            </div>
        </div>

        <div class="row">

            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.DeliveryTransDate, new { })
                    @Html.TextBoxFor(model => model.DeliveryTransDate, new { @class = "form-control input-sm typeahead", Value = "" + DateTime.UtcNow.ToString("d MMM yyyy") + "", disabled = "disabled" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.GeneralUnitsID, new { })
                    @Html.DropDownListFor(model => model.GeneralUnitsID, Model.ListGetGeneralUnitsItems, "------Select Unit-------", new { @class = "form-control input-sm AddGeneralUnitsID", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Units Type*" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.VehicalNumber, new { })
                    @Html.TextBoxFor(model => model.VehicalNumber, new { @class = "form-control input-sm typeahead"})
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.GeneralShipperID, new { })
                    @Html.DropDownListFor(model => model.GeneralShipperID, (SelectList)ViewBag.GeneralItemShipperName, "--Select Shipper--", new { @class = "form-control input-sm" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.ShipToCountryID, new { })
                    @Html.DropDownListFor(m => m.ShipToCountryID, (SelectList)ViewBag.GeneralCountryMaster, Resources.ddlHeaders_CountryName, new { @class = "form-control", style = "" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.ShipToStateID, new { })
                    @Html.DropDownListFor(m => m.ShipToStateID, Enumerable.Empty<SelectListItem>(), Resources.ddlHeaders_RegionName, new { @class = "form-control", style = "" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.ShipToCityID, new { })
                    @Html.DropDownListFor(m => m.ShipToCityID, Enumerable.Empty<SelectListItem>(), Resources.ddlHeaders_CityName, new { @class = "form-control", style = "" })
                </div>
            </div>

            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.ShipToAddress, new { })
                    @Html.TextBoxFor(model => model.ShipToAddress, new { @class = "form-control input-sm typeahead" })
                </div>
            </div>
        </div>

        <h4>List Of Items</h4>

        <div class="row">
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.HiddenFor(model => model.ItemNumber)
                    @*@Html.HiddenFor(model => model.Rate)*@
                    @Html.HiddenFor(model => model.TaxRate)
                    @Html.HiddenFor(model => model.GenTaxGroupMasterID)
                    @Html.HiddenFor(model => model.SerialAndBatchManagedBy)
                    @Html.LabelFor(model => model.ItemDescription, new { })
                    @Html.TextBoxFor(model => model.ItemDescription, new { @class = "form-control input-sm typeahead" })
                </div>
            </div>
            <div class="col-sm-1" id="Units">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.SalesUomCode, new { })
                    @Html.DropDownListFor(model => model.SalesUomCode, Enumerable.Empty<SelectListItem>(), "---Select---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.DispatchedQuantity, new { })
                    @Html.TextBoxFor(model => model.DispatchedQuantity, new { maxlength = "8", @class = "form-control input-sm typeahead" })
                </div>
            </div>

            <div class="col-sm-1">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.Rate, new { })
                    @Html.TextBoxFor(model => model.Rate, new { maxlength = "8", @class = "form-control input-sm typeahead" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.BatchNumber, new { })
                    @Html.TextBoxFor(model => model.BatchNumber, new { @class = "form-control input-sm typeahead typeahead1" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.ExpiryDate, new { })
                    @Html.TextBoxFor(model => model.ExpiryDate, new {  @class = "form-control input-sm typeahead",disabled="disabled" })
                </div>
            </div>

            <div class="col-sm-1" id="btnAdd1">
                <!-- <button type="button" class="btn btn-primary" id="btnAdd">Add Row</button> -->
                <button type="button" title="Add row" class="btn bgm-green btn-float waves-effect waves-circle waves-float" id="btnAdd" style="margin-top:10px"><i class="zmdi zmdi-plus"></i></button>
            </div>
        </div>
        <table class="table table-responsive " id="tblData">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>UOM</th>
                    <th>Dispatched Qty</th>
                    <th>Rate</th>
                    <th>Batch</th>
                    <th>Expiry Date</th>
                    <th>Amount</th>
                    <th>Tax Amount</th>
                    <th>Gross Amount</th>

                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.TotalTaxAmount, new { })
                    @Html.TextBoxFor(model => model.TotalTaxAmount, new { maxlength = "80", @class = "form-control input-sm typeahead", disabled = "disabled" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.TotalAmount, new { })
                    @Html.TextBoxFor(model => model.TotalAmount, new { maxlength = "80", @class = "form-control input-sm typeahead", disabled = "disabled" })
                </div>
            </div>

            <div class="col-sm-3">
                <div class="form-group fg-line">
                    @Html.LabelFor(model => model.TotalBillAmount, new { })
                    @Html.TextBoxFor(model => model.TotalBillAmount, new { maxlength = "80", @class = "form-control input-sm typeahead", disabled = "disabled" })
                </div>
            </div>

        </div>
    </form>


    <div class="form-group" style="margin-left:1%;margin-bottom:1%;padding-bottom:1%;">
        <input class="btn btn-primary btn-sm m-t-10 waves-effect" value="@Resources.ButtonAction_Submit" id="CreateSalesOrderDeliveryMasterDirectDMRecord" type="button" />



    </div>

</div>
<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Theme/vendors/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        SalesOrderDeliveryMasterAndDetails.Initialize();

        $('#ExpiryDate').datetimepicker({
            format: 'DD MMMM YYYY',
            minDate: moment(),
        });

        map = [];
        var getData = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/SalesQuotationMasterAndDetails/GetItemNumberSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val(), CustomerBranchMasterID: $("#CustomerBranchMasterID").val(), GeneralUnitsID: $("#GeneralUnitsID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        //debugger;
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.ItemDescription)) {
                                map[response.ItemDescription] = response;
                                matches.push(response.ItemDescription);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#ItemDescription").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getData()
        }).on("typeahead:selected", function (obj, item) {
            $("#ItemNumber").val(map[item].ItemNumber);
            $("#ItemDescription").val(map[item].ItemDescription);
            $("#GenTaxGroupMasterID").val(map[item].GeneralTaxGroupMasterID);
            $("#TaxRate").val(map[item].TaxRate);
            $("#SerialAndBatchManagedBy").val(parseFloat(map[item].SerialAndBatchManagedBy));
            debugger;
            if ($('#SerialAndBatchManagedBy').val() == 2) {
                $('#BatchNumber').val('')
                $('#BatchNumber').attr("disabled", false);
            }
            else {
                $('#BatchNumber').val('')
                $('#BatchNumber').attr("disabled", true);
            }

            $.ajax({
                cache: false,
                type: "POST",
                dataType: "json",
                data: { "ItemNumber": map[item].ItemNumber },
                url: '/SalesEnquiryMasterAndDetails/GetUoMCodeByItemNumber',
                success: function (data) {
                    var $ddlExam = $("#SalesUomCode");
                    $ddlExam.html('');
                    $ddlExam.append('<option value="">------Select UoM Code-----</option>');
                    if (data.length != 0) {
                        $.each(data, function (id, option) {
                            $ddlExam.append($('<option></option>').val(option.name).html(option.name));

                        });
                    }
                    else {
                        // $ddlExam.append('<option value="EA">EA</option>');
                    }
                }
            });
        });


        //CustomerMaster serachlist
        mapCustomerName = [];
        var getDataCustomerName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerMasterSearchList",
                    type: "POST",
                    data: { term: q },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerMasterName)) {
                                mapCustomerName[response.CustomerMasterName] = response;
                                matches.push(response.CustomerMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        var mapBatchNumber = {};
        var getData = function () {
            return function findMatches(q, cb) {
                var matches, substringRegex;
                var ItemNumber = $("#ItemNumber").val();
                // an array that will be populated with substring matches
                matches = [];
                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');
                $.ajax({
                    url: "/PurchaseGRNMaster/GetBatchNumberOfItem",
                    type: "POST",
                    dataType: "json",
                    data: { term: q, ItemNumber: ItemNumber },
                    success: function (data) {
                        debugger;

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        $.each(data, function (i, response) {
                            if (substrRegex.test(response.name)) {
                                mapBatchNumber[response.name] = response;
                                matches.push(response.name);
                            }
                        });
                    },
                    async: false
                })
                cb(matches);
            };

        };
        $('.typeahead1').typeahead({
            hint: true,
            highlight: true,
            minLength: 1,

        },
        {
            source: getData(),
            replace: function () {

                var val = $(this).val();

            }
        }).on("typeahead:selected", function (obj, item) {
            debugger;
            $("#ExpiryDate").val(mapBatchNumber[item].expiryDate);
            $("#BatchID").val(mapBatchNumber[item].id);
            $("#ExpiryDate").prop("disabled", true)

        });

        $("#CustomerName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataCustomerName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerMasterID").val(mapCustomerName[item].CustomerMasterID);
            $("#CustomerName").val(mapCustomerName[item].CustomerMasterName);
            $("#CustomerType").val(mapCustomerName[item].CustomerType);
            if ($("#CustomerType").val() == 1) {
                $('#BranchName').prop('disabled', true);
                $('#BranchName').val("");
                $('#CustomerContactPersonName').val("");
            }
            else {
                $('#BranchName').prop('disabled', false);
                $('#BranchName').val("");
                $('#CustomerContactPersonName').val("");
            }
        });
        //Branch master Name
        mapCustomerBranchMasterName = [];
        var getDataCustomerBranchMasterName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerBranchMasterSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerBranchMasterName)) {
                                mapCustomerBranchMasterName[response.CustomerBranchMasterName] = response;
                                matches.push(response.CustomerBranchMasterName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#BranchName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataCustomerBranchMasterName()
        }).on("typeahead:selected", function (obj, item) {
            $("#CustomerBranchMasterID").val(mapCustomerBranchMasterName[item].CustomerBranchMasterID);
            $("#BranchName").val(mapCustomerBranchMasterName[item].CustomerBranchMasterName);
        });
        //Contact detials Serachlist

        mapCustomerContactDetailsName = [];
        var getDataCustomerContactDetailsName = function () {
            return function findMatches(q, cb) {

                var matches, substringRegex;

                // an array that will be populated with substring matches
                matches = [];

                // regex used to determine if a string contains the substring `q`
                substrRegex = new RegExp(q, 'i');

                $.ajax({
                    url: "/CustomerMaster/GetCustomerContactDetailsSearchList",
                    type: "POST",
                    data: { term: q, CustomerMasterID: $("#CustomerMasterID").val(), CustomerBranchMasterID: $("#CustomerBranchMasterID").val() },
                    dataType: "json",
                    success: function (data) {

                        // iterate through the pool of strings and for any string that
                        // contains the substring `q`, add it to the `matches` array
                        //alert(data);
                        //console.log(data);
                        $.each(data, function (i, response) {

                            if (substrRegex.test(response.CustomerContactPersonName)) {
                                mapCustomerContactDetailsName[response.CustomerContactPersonName] = response;
                                matches.push(response.CustomerContactPersonName);

                            }

                        });

                    },
                    async: false
                })
                cb(matches);
            };

        };

        $("#ContactPersonName").typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            source: getDataCustomerContactDetailsName()
        }).on("typeahead:selected", function (obj, item) {
            $("#ContactPersonID").val(mapCustomerContactDetailsName[item].CustomerContactDetailsID);
            $("#ContactPersonName").val(mapCustomerContactDetailsName[item].CustomerContactPersonName);
        });

        $('#CustomerName').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#CustomerName').typeahead('val', '');
                $('#CustomerName').val("");
                $('#BranchName').prop('disabled', false);
                $('#BranchName').val("");
                $('#ContactPersonName').val("");
                $("#CustomerMasterID").val("");
                $('#CustomerBranchMasterID').val('0');
                $('#CustomerMasterID').val('0');
                $('#ContactPersonID').val('0');

            }
        });
        $('#ItemDescription').on("keydown", function (e) {
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#ItemDescription').val("");
                $('#ItemDescription').typeahead('val', '');
                $("#ItemNumber").val(0);
                $("#Quantity").val(0);
                $("#UOM").val("");
                $("#Rate").val(0);
                $("#UOM").html("");

            }
            if ($("#GeneralUnitsID").val() == "" || $("#GeneralUnitsID").val() == 0) {
                $("#displayErrorMessage").text("Please Select Store .").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            else if ($("#CustomerName").val() == "" && ($("#CustomerMasterID").val() == "" || $("#CustomerMasterID").val() == 0)) {
                $("#displayErrorMessage").text("Please Select Customer.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            else if ($("#BranchName").val() == "" && $("#CustomerType").val() == 2) {
                $("#displayErrorMessage").text("Please Select Branch.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            //else if ($("#ContactPersonName").val() == "" && ($("#ContactPersonID").val() == "" || $("#ContactPersonID").val() == 0)) {
            //    $("#displayErrorMessage").text("Please Select Contact Person.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
            //    $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
            //    return false;
            //}

        });
        $("#BranchName").on("keydown", function (e) {
            if ($("#CustomerName").val() == "" && ($("#CustomerMasterID").val() == "" || $("#CustomerMasterID").val() == 0)) {
                $("#displayErrorMessage").text("Please Select Customer.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#BranchName').val("");
                $('#BranchName').typeahead('val', '');
                $('#ContactPersonName').val("");
                $('#CustomerBranchMasterID').val('0');
                $('#ContactPersonID').val('0');
            }
        });
        $('#ContactPersonName').on("keydown", function (e) {
            if ($("#CustomerName").val() == "" && ($("#CustomerMasterID").val() == "" || $("#CustomerMasterID").val() == 0)) {
                $("#displayErrorMessage").text("Please Select Customer.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            if ($("#BranchName").val() == "" && $("#CustomerType").val() == 2) {
                $("#displayErrorMessage").text("Please Select Branch.").closest('div').fadeIn().closest('div').addClass('alert-' + "warning");
                $("#displayErrorMessage").delay(400).slideDown(400).delay(1500).slideUp(400).css('background-color', "#FFCC80");
                return false;
            }
            if (e.keyCode == 8 || e.keyCode == 46) {
                $('#ContactPersonName').val("");
                $('#ContactPersonName').typeahead('val', '');
                $('#ContactPersonID').val('0');
            }
        });



    });

</script>

