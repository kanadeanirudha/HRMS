@model AERP.ViewModel.CustomerMasterViewModel
<div id="custom-content">
    <div class="block-header">
        <h2>&nbsp;<i class="zmdi zmdi-view-toc"></i>&nbsp; &nbsp;Customer Master</h2>
    </div>
    <div class="card">
        <div class="card-body card-padding">
            <div id="displayErrorMessage" role="alert" hidden class="alert">
                <button class="close" type="button"><span aria-hidden="true">×</span></button>
                <p id="messageContent"></p>
            </div>
            <form id="FormCreateCustomerMaster" role="form" class="row">
                <div class="col-sm-12">
                    <div class="form-group col-sm-6">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.CustomerType, new { })
                            @Html.DropDownList("CustomerType", ViewData["CustomerType"] as List<SelectListItem>,"--select--", new { style = "", @class = "form-control" })

                        </div>
                        @Html.ValidationMessageFor(model => model.CustomerType)
                    </div>
                    <div class="form-group col-sm-6">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.CompanyName, new { })
                            @Html.TextBoxFor(model => model.CompanyName, new { maxlength = "250", @class = "form-control input-sm " ,disabled="disabled"})

                        </div>
                        @Html.ValidationMessageFor(model => model.CompanyName)
                    </div>
                   
                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.FirstName, new { })
                            @Html.TextBoxFor(model => model.FirstName, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.MiddleName, new { })
                            @Html.TextBoxFor(model => model.MiddleName, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.MiddleName)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.LastName, new { })
                            @Html.TextBoxFor(model => model.LastName, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-3">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.Address1, new { })
                            @Html.TextBoxFor(model => model.Address1, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.Address1)
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.Address2, new { })
                            @Html.TextBoxFor(model => model.Address2, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.Address2)
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.Address3, new { })
                            @Html.TextBoxFor(model => model.Address3, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.Address3)
                    </div>
                    <div class="form-group col-sm-3">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.PinCode, new { })
                            @Html.TextBoxFor(model => model.PinCode, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.PinCode)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.CountryID, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(m => m.CountryID, (SelectList)ViewBag.GeneralCountryMaster, Resources.ddlHeaders_CountryName, new { @class = "form-control", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CountryID)
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.StateID, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(m => m.StateID, (SelectList)ViewBag.GeneralRegionMaster, Resources.ddlHeaders_RegionName, new { @class = "form-control", style = ""})
                        </div>
                        @Html.ValidationMessageFor(model => model.StateID)
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.CityID, new { style = "" })
                        <div class="form-group  fg-line select">
                            @Html.DropDownListFor(m => m.CityID, (SelectList)ViewBag.GeneralCityMaster, Resources.ddlHeaders_CityName, new { @class = "form-control", style = "" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CityID)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.MobileNumber, new { })
                            @Html.TextBoxFor(model => model.MobileNumber, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.MobileNumber)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.Email, new { })
                            @Html.TextBoxFor(model => model.Email, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            <span style="color:red">*</span> @Html.LabelFor(model => model.Currency, new { })
                            @Html.DropDownListFor(model => model.Currency, (SelectList)ViewBag.GeneralCurrencyMasterList, "---Select Currency ---", new { @class = "form-control input-sm" })

                        </div>
                        @Html.ValidationMessageFor(model => model.Currency)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.GSTNumber, new { })
                            @Html.TextBoxFor(model => model.GSTNumber, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.GSTNumber)
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group fg-line">
                            <label style="margin-top: 3%; margin-bottom: 2%;">
                                @Html.LabelFor(model => model.IsTaxExempted, new { style = "padding-left: 0px; margin-top:2%;" })

                            </label>
                        </div>
                        <div class="checkbox col-sm-6 " style="margin-top:0px">
                            <input type="checkbox" value="" id="IsTaxExempted">
                            <i class="input-helper"></i>
                        </div>
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.ReasonForExemption, new { })
                            @*@Html.TextBoxFor(model => model.ReasonForExemption, new { maxlength = "20", @class = "form-control input-sm " })*@
                            @Html.DropDownList("ReasonForExemption", ViewData["ReasonForExemption"] as List<SelectListItem>,"--select--", new { style = "", @class = "form-control" })

                        </div>
                        @Html.ValidationMessageFor(model => model.ReasonForExemption)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.TaxExemptionRemark, new { })
                            @Html.TextBoxFor(model => model.TaxExemptionRemark, new { maxlength = "250", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.TaxExemptionRemark)
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group fg-line">
                            <label style="margin-top: 3%; margin-bottom: 2%;">
                                @Html.LabelFor(model => model.IsCentre, new { style = "padding-left: 0px; margin-top:2%;" })

                            </label>
                        </div>
                        <div class="checkbox col-sm-6 " style="margin-top:0px">
                            <input type="checkbox" value="" id="IsCentre">
                            <i class="input-helper"></i>
                        </div>
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.CentreCode, new { })
                            @*@Html.TextBoxFor(model => model.ReasonForExemption, new { maxlength = "20", @class = "form-control input-sm " })*@
                           @Html.TextBoxFor(model => model.CentreCode, new { maxlength = "35", @class = "form-control input-sm " })
                        </div>
                        @Html.ValidationMessageFor(model => model.CentreCode)
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.BankName, new { })
                            @Html.TextBoxFor(model => model.BankName, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.BankName)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.IFCICODE, new { })
                            @Html.TextBoxFor(model => model.IFCICODE, new { maxlength = "20", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.IFCICODE)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.BankAccountNumber, new { })
                            @Html.TextBoxFor(model => model.BankAccountNumber, new { maxlength = "20", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.BankAccountNumber)
                    </div>

                </div>
                <div class="col-sm-12">
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.CreditPeriod, new { })
                            @Html.TextBoxFor(model => model.CreditPeriod, new { maxlength = "100", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.CreditPeriod)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                             @Html.LabelFor(model => model.UnitMasterId, new { })
                            @Html.DropDownListFor(model => model.UnitMasterId, (SelectList)ViewBag.GeneralUnitMasterList, "---Select Unit ---", new { @class = "form-control input-sm" })

                        </div>
                        @Html.ValidationMessageFor(model => model.UnitMasterId)
                    </div>
                    <div class="form-group col-sm-4">
                        <div class="form-group fg-line">
                            @Html.LabelFor(model => model.ShortCode, new { })
                            @Html.TextBoxFor(model => model.ShortCode, new { maxlength = "3", @class = "form-control input-sm " })

                        </div>
                        @Html.ValidationMessageFor(model => model.ShortCode)
                    </div>


                </div>
                <div class="form-group col-sm-12">
                    <input class="btn btn-primary" style="margin-left:1%" value="@Resources.ButtonAction_Submit" id="CreateCustomerMasterRecord" type="button" />
                </div>

            </form>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/jquery.validate.js") " type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        CustomerMaster.Initialize();
    });
</script>


