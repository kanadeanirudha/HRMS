@model AERP.ViewModel.DashboardViewModel
<div class="block-header">
    <h2 style="text-transform: none;"><i class="zmdi zmdi-view-toc"></i>&nbsp;Deshboard Allocation</h2>
</div>

@*@Html.HiddenFor(model => model.AdminRoleMasterID)
@Html.HiddenFor(model => model.ModuleCode)*@
<div class="card">
    <div class="card-body card-padding">
        <form class="row" role="form">
            <div class="col-sm-5">
                <div class="select form-group fg-line">
                    @Html.DropDownListFor(model => model.AdminRoleMasterID, (SelectList)ViewBag.AdminRoleCodeList, "---Select Role ---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Role" })
                </div>
            </div>

            <div class="col-sm-5">
                <div class="select form-group fg-line">
                    @Html.DropDownListFor(model => model.ModuleCode, (SelectList)ViewBag.ListUserModuleMaster, "---Select Module ---", new { @class = "form-control input-sm", data_val = "true", data_toggle = "tooltip", data_placement = "top", data_original_title = "Module Name" })
                </div>
            </div>

            <div class="col-sm-2">
                <input type="button" value="@Resources.GlobalProperties_ShowList" class="btn btn-primary btn-sm m-t-5" id="btnShowList" />
            </div>
        </form>
    </div>

    <div class="bootgrid-header container-fluid" id="data-table-command-header">
        <div class="row">
            <div class="col-sm-12 actionBar">
                <div class="search form-group">
                    <div class="input-group">
                        <span class="zmdi icon input-group-addon glyphicon-search"></span>
                        <input type="text" id="UserSearch" placeholder="Search" class="search-field form-control">
                    </div>
                </div>
                <div class="actions btn-group">
                    <div class="dropdown btn-group">
                        <button data-toggle="dropdown" type="button" class="btn btn-default dropdown-toggle">
                            <span class="dropdown-text" id="tblDisplayRowLength">@Resources.GlobalProperties_10</span> <span class="caret"></span>
                        </button>
                        <ul role="menu" style="cursor: pointer" id="showrecords" class="dropdown-menu pull-right">
                            <li class="active" aria-selected="true">
                                <a class="dropdown-item dropdown-item-button" data-action="@Resources.GlobalProperties_10">@Resources.GlobalProperties_10</a>
                            </li>
                            <li aria-selected="false">
                                <a class="dropdown-item dropdown-item-button" data-action="@Resources.GlobalProperties_25">@Resources.GlobalProperties_25</a>
                            </li>
                            <li aria-selected="false"><a class="dropdown-item dropdown-item-button" data-action="@Resources.GlobalProperties_50">@Resources.GlobalProperties_50</a></li>
                            @*<li aria-selected="false"><a class="dropdown-item dropdown-item-button" data-action="-1">All</a></li>*@
                        </ul>
                    </div>

                    <div class="dropdown btn-group">
                        <button data-toggle="dropdown" type="button" class="btn btn-default dropdown-toggle" aria-expanded="false">
                            <span class="dropdown-text">
                                <span class="zmdi icon zmdi-view-module"></span>
                            </span><span class="caret"></span>
                        </button>
                        <ul role="menu" id="toggleTableColumn" class="dropdown-menu pull-right">
                            <li>
                                <div class="checkbox">
                                    <label class="dropdown-item" aria-disabled="false">
                                        <input type="checkbox" checked="checked" class="dropdown-item-checkbox" value="0" name="DashboardContent">
                                        Dashboard Content<i class="input-helper"></i>
                                    </label>
                                </div>
                            </li>
                            <li>
                                <div class="checkbox">
                                    <label class="dropdown-item" aria-disabled="false">
                                        <input type="checkbox" checked="checked" class="dropdown-item-checkbox" value="1" name="IsAllocated">
                                        Is Allocated<i class="input-helper"></i>
                                    </label>
                                </div>
                            </li>
                            
                            <li>
                                <div class="checkbox">
                                    <label class="dropdown-item" aria-disabled="false">
                                        <input type="checkbox" checked="checked" class="dropdown-item-checkbox" value="2" name="Action">
                                        @Resources.TableHeaders_Action<i class="input-helper"></i>
                                    </label>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table id="myDataTable" class="table table-striped table-vmiddle table-responsive ">
        <thead>
            <tr>
                <th>Module Name</th>
                <th style="padding-left: 10%; width: 50%;">Dashboard Content</th>
                <th style="padding-left:10%; width:40%;">Is Allocated</th>                
                <th>@Resources.TableHeaders_Action</th>
            </tr>
        </thead>
    </table>
</div>

<script src="@Url.Content("~/Content/Theme/vendors/bower_components/moment/min/moment.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var oTable;
        DashboardAllocation.Initialize();

        $("#AdminRoleMasterID").tooltip();
        $("#ModuleCode").tooltip();

        oTable = $('#myDataTable').DataTable({
            "bServerSide": true,
            "sAjaxSource": "DashboardAllocation/AjaxHandler",
            "bJQueryUI": true,
            "sScrollY": false,
            "bProcessing": true,
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sInfoEmpty": "",
            },
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "AdminRoleMasterID", "value": $("#AdminRoleMasterID").val() }),
                aoData.push({ "name": "ModuleCode", "value": $("#ModuleCode").val() })
            },
            "columnDefs": [
                            {
                                "visible": false, "targets": 0,
                            },
                            {
                                "targets": 1,
                                "data": null,
                                "render": function (data, type, full, meta) {
                                    var result = "<p  style=' height:5px; padding-left:13%'>" + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " + data[2] + "</p>";
                                    return result;
                                }
                            },
                            {
                                "targets": 2,
                                "bSortable": false,
                                "data": null,
                                "render": function (data, type, full, meta) {
                                    var chkStatus = '';
                                    var result = '';
                                    if (data[4] == "True") {
                                        chkStatus = 'checked';
                                        result = "<p  style='text-align: center; height:5px;'>" + '<input id="ContentStatus" class="CheckBox" type="checkbox" disabled ' + chkStatus + ' />' + "</p>";
                                    }
                                    else
                                    {
                                        chkStatus = '';
                                        result = "<p  style='text-align: center; height:5px;'>" + '<input id="ContentStatus" class="CheckBox" type="checkbox" disabled ' + chkStatus + ' />' + "</p>";
                                    }
                                    

                                    return result;
                                }
                            },                            
                            {
                                "targets": 3,
                                "bSortable": false,
                                "data": null,
                                "render": function (data, type, full, meta) {
                                    var result = null, result1 = null, result2 = null                                    
                                   
                                    if (data[4] == "False") {

                                        result = " <a href=\"javascript:void(0);\" data-toggle=\"tooltip\" title=\"Allocate\" class=\"btn btn-success btn-xs waves-effect\" onclick=\"fancyBoxPopUpAjax('Allocate " + data[2] + " To This Module','Do you want to activate the content?','success','btn-success 1.','Yes!','/DashboardAllocation/InsertContaintAllocateStatus/" + data[0] + "~" + data[5] + "','content','page-loader','DashboardAllocation')\"><span>Allocate</span></a>";
                                        @*result1 = '@Html.ActionLink("AllocateStatus1", "AllocateStatus", new { ID = "DashboardContentDetailID1" }, new { @class = "btn btn-default waves-effect" })';
                                        result1 = result1.replace('DashboardContentDetailsID1', data[0]);

                                        result1 = result1.replace("AllocateStatus1", '<button class=btn btn-default waves-effect btn-xs>Allocate</button>');
                                        result = result1*@
                                    }
                                    else {
                                        result = " <a href=\"javascript:void(0);\" data-toggle=\"tooltip\" title=\"Deallocate\" class=\"btn btn-danger btn-xs waves-effect\" onclick=\"fancyBoxPopUpAjax('Deallocate " + data[2] + " To This Module','Do you want to de-activate the content?','warning','btn-warning 0.','Yes!','/DashboardAllocation/DeleteContaintAllocateStatus/" + data[0] + "~" + data[5] + "','content','page-loader','DashboardAllocation')\"><span>De-Allocate</span></a>";

                                        @*result2 = '@Html.ActionLink("DeleteContaintAllocateStatus1", "DeleteContaintAllocateStatus", new { ID = "DashboardContentDetailsID1" }, new { @class = "btn btn-default waves-effect" })';
                                        result2 = result2.replace('DashboardContentDetailsID1', data[0]);

                                        result2 = result2.replace("DeleteContaintAllocateStatus1", '<button class=btn btn-default waves-effect bgm-teal btn-xs>De-Allocate</button>');
                                        result = result2*@
                                    }

                                    return result;

                                }
                            }
            ],
            "drawCallback": function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                var table = $('#myDataTable').dataTable();
                var groupArray = '';
                api.column(1, { page: 'current' }).data().each(function (group, i) {                    
                    group = String(group).split(',')[1];
                    if (last !== group) {
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="6"  style="font-weight:bold;font-size:12px;font-family: verdana;" >' + group + '</td></tr>'
                        );

                        last = group;
                    }
                });
            }
        });
        DataTableSettings(oTable, 'myDataTable', "toggleTableColumn");
    });


</script>
