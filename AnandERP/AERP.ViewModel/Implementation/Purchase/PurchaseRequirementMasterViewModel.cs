using AERP.Common;
using AERP.DTO;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;
using System.Web;


namespace AERP.ViewModel
{
     public class PurchaseRequirementMasterViewModel : IPurchaseRequirementMasterViewModel
    {
        public PurchaseRequirementMasterViewModel()
        {
            PurchaseRequirementMasterDTO = new PurchaseRequirementMaster();
            ListGetAdminRoleApplicableCentre = new List<AdminRoleApplicableDetails>();
            ListGetOrganisationDepartmentCentreAndRoleWise = new List<OrganisationDepartmentMaster>();
            InventoryPurchaseRequirementList = new List<PurchaseRequirementMaster>();
            PolicyAnswerByPolicyStatus = new List<GeneralPolicyRules>();
            AutoGeneratedPurchaserequirementNumber  = new List<GeneralRunningNumbersForAccount>();
        }
        public List<PurchaseRequirementMaster> InventoryPurchaseRequirementList { get; set; }
        public List<GeneralPolicyRules> PolicyAnswerByPolicyStatus { get; set; }
        public List<GeneralRunningNumbersForAccount> AutoGeneratedPurchaserequirementNumber { get; set; } 
        public List<AdminRoleApplicableDetails> ListGetAdminRoleApplicableCentre
        {
            get;
            set;
        }
        public IEnumerable<SelectListItem> ListGetAdminRoleApplicableCentreItems
        {
            get
            {
                return new SelectList(ListGetAdminRoleApplicableCentre, "CentreCode", "CentreName");
            }
        }

        [Required(ErrorMessage = "CentreCode should not be blank.")]
        public string SelectedCentreCode
        {
            get;
            set;
        }
        public string SelectedCentreName
        {
            get;
            set;
        }
        public List<OrganisationDepartmentMaster> ListGetOrganisationDepartmentCentreAndRoleWise
        {
            get;
            set;
        }
        public IEnumerable<SelectListItem> ListGetOrganisationDepartmentCentreAndRoleWiseItems
        {
            get
            {
                return new SelectList(ListGetOrganisationDepartmentCentreAndRoleWise, "ID", "DepartmentName");
            }
        }
        public PurchaseRequirementMaster PurchaseRequirementMasterDTO { get; set; }
      
        /// <summary>
        /// Properties for PurchaseRequirementMaster table
        /// </summary>
        public int ID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ID > 0) ? PurchaseRequirementMasterDTO.ID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ID = value;
            }
        }

        //[Display(Name = "DisplayName_PurchaseRequirementNumber", ResourceType = typeof(Resources))]
        //[Required(ErrorMessageResourceType = typeof(Resources), ErrorMessageResourceName = "ValidationMessage_PurchaseRequirementNumberRequired")]
        [Required(ErrorMessage = "Requirement No. should not be blank.")]
        [Display(Name = "Requirement No.")]
        public string PurchaseRequirementNumber
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PurchaseRequirementNumber : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PurchaseRequirementNumber = value;
            }
        }

        //[Display(Name = "DisplayName_TransDate", ResourceType = typeof(Resources))]
        [Required(ErrorMessage = "Transaction Date should not be blank.")]
        [Display(Name = " Transaction Date")]
        public string TransDate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.TransDate : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.TransDate = value;
            }
        }
        public Int16 Status
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.Status > 0) ? PurchaseRequirementMasterDTO.Status : new Int16();
            }
            set
            {
                PurchaseRequirementMasterDTO.Status = value;
            }
        }
        public bool IsActive
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.IsActive : false;
            }
            set
            {
                PurchaseRequirementMasterDTO.IsActive = value;
            }
        }
        public int CreatedBy
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.CreatedBy > 0) ? PurchaseRequirementMasterDTO.CreatedBy : new short();
            }
            set
            {
                PurchaseRequirementMasterDTO.CreatedBy = value;
            }
        }
        public DateTime CreatedDate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.CreatedDate : DateTime.Now;
            }
            set
            {
                PurchaseRequirementMasterDTO.CreatedDate = value;
            }
        }
        public int? ModifiedBy
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ModifiedBy > 0) ? PurchaseRequirementMasterDTO.ModifiedBy : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ModifiedBy = value;
            }
        }
        public DateTime? ModifiedDate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.ModifiedDate : DateTime.Now;
            }
            set
            {
                PurchaseRequirementMasterDTO.ModifiedDate = value;
            }
        }
        public bool IsDeleted
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.IsDeleted : false;
            }
            set
            {
                PurchaseRequirementMasterDTO.IsDeleted = value;
            }
        }
        public string errorMessage { get; set; }

        /// <summary>
        /// Properties for PurchaseRequirementDetails table
        /// </summary>
        public int PurchaseRequirementDetailsID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.PurchaseRequirementDetailsID > 0) ? PurchaseRequirementMasterDTO.PurchaseRequirementDetailsID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.PurchaseRequirementDetailsID = value;
            }
        }
        public int ItemID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ItemID > 0) ? PurchaseRequirementMasterDTO.ItemID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ItemID = value;
            }
        }
        public decimal Quantity
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.Quantity > 0) ? PurchaseRequirementMasterDTO.Quantity : new decimal();
            }
            set
            {
                PurchaseRequirementMasterDTO.Quantity = value;
            }
        }
        public decimal MinimumOrderquantity
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.MinimumOrderquantity > 0) ? PurchaseRequirementMasterDTO.MinimumOrderquantity : new decimal();
            }
            set
            {
                PurchaseRequirementMasterDTO.MinimumOrderquantity = value;
            }
        }
        public decimal Rate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.Rate > 0) ? PurchaseRequirementMasterDTO.Rate : new decimal();
            }
            set
            {
                PurchaseRequirementMasterDTO.Rate = value;
            }
        }

        [Display(Name = "Unit")]
        public string UnitCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.UnitCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.UnitCode = value;
            }
        }
        public int UnitID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.UnitID > 0) ? PurchaseRequirementMasterDTO.UnitID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.UnitID = value;
            }
        }
         [Required(ErrorMessage = "CentreCode should not be blank.")]
        public string CentreCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.CentreCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.CentreCode = value;
            }
        }
        public int DepartmentID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.DepartmentID > 0) ? PurchaseRequirementMasterDTO.DepartmentID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.DepartmentID = value;
            }
        }
         [Display(Name = "Storage Location")]
        public int StorageLocationID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.StorageLocationID > 0) ? PurchaseRequirementMasterDTO.StorageLocationID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.StorageLocationID = value;
            }
        }
        [Display(Name = "Priority")]
        public Int16 PriorityFlag
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.PriorityFlag > 0) ? PurchaseRequirementMasterDTO.PriorityFlag : new Int16();
            }
            set
            {
                PurchaseRequirementMasterDTO.PriorityFlag = value;
            }
        }
        public Int16 ApprovedStatus
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ApprovedStatus > 0) ? PurchaseRequirementMasterDTO.ApprovedStatus : new Int16();
            }
            set
            {
                PurchaseRequirementMasterDTO.ApprovedStatus = value;
            }
        }
        public Int32 GeneralItemCodeID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.GeneralItemCodeID : new Int32();
            }
            set
            {
                PurchaseRequirementMasterDTO.GeneralItemCodeID = value;
            }
        }
         
        public string Remark
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.Remark : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.Remark = value;
            }
        }
        public int ApprovedBy
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ApprovedBy > 0) ? PurchaseRequirementMasterDTO.ApprovedBy : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ApprovedBy = value;
            }
        }
        public string ApprovedDate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.ApprovedDate : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.ApprovedDate = value;
            }
        }
        public decimal ApprovedQuantity
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ApprovedQuantity > 0) ? PurchaseRequirementMasterDTO.ApprovedQuantity : new decimal();
            }
            set
            {
                PurchaseRequirementMasterDTO.ApprovedQuantity = value;
            }
        }
        public decimal DeliveredQuantity
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.DeliveredQuantity > 0) ? PurchaseRequirementMasterDTO.DeliveredQuantity : new decimal();
            }
            set
            {
                PurchaseRequirementMasterDTO.DeliveredQuantity = value;
            }
        }
        public string EntityLevel { get; set; }
        public string DepartmentName
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.DepartmentName : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.DepartmentName = value;
            }
        }
        [Display(Name = " Item Name")]
        public string ItemName
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.ItemName : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.ItemName = value;
            }
        }

        public int ItemNumber
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.ItemNumber : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ItemNumber = value;
            }
        }
        public string BarCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.BarCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.BarCode = value;
            }
        }
        public string UomCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.UomCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.UomCode = value;
            }
        }

        public int ItemCount
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.ItemCount > 0) ? PurchaseRequirementMasterDTO.ItemCount : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.ItemCount = value;
            }
        }
         [Display(Name = "Delivery Date")]
        public string ExpectedDate
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.ExpectedDate : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.ExpectedDate = value;
            }
        }

        public string XMLstring 
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.XMLstring : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.XMLstring = value;
            }
        }

        public string LocationName
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.LocationName : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.LocationName = value;
            }
        }
        // policy fields for backdated date or not
        public int FieldValue
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.FieldValue > 0) ? PurchaseRequirementMasterDTO.FieldValue : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.FieldValue = value;
            }
        }

        public string PolicyApplicableStatus
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PolicyApplicableStatus : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PolicyApplicableStatus = value;
            }

        }
        public string PolicyDefaultAnswer
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PolicyDefaultAnswer : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PolicyDefaultAnswer = value;
            }

        }
        public string PolicyDefaultAnswerForExcel
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PolicyDefaultAnswerForExcel : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PolicyDefaultAnswerForExcel = value;
            }

        }

        public string PolicyCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PolicyCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PolicyCode = value;
            }

        }
        public string SelectedDepartmentID
        {
            get;
            set;
        }
        public string SelectedDepartmentIDs
        {
            get;
            set;
        }
        public HttpPostedFileBase MyFile { get; set; }
        [Display(Name = "Upload Excel")]
        public int UploadExcelID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.UploadExcelID > 0) ? PurchaseRequirementMasterDTO.UploadExcelID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.UploadExcelID = value;
            }
        }
        public string Description
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.Description : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.Description = value;
            }
        }
        public Int16 FinancialYearID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.FinancialYearID > 0) ? PurchaseRequirementMasterDTO.FinancialYearID : new Int16();
            }
            set
            {
                PurchaseRequirementMasterDTO.FinancialYearID = value;
            }
        }
        public string PurchaseGroupCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.PurchaseGroupCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.PurchaseGroupCode = value;
            }
        }
        [Display(Name = "Procurement Block")]
        public bool BlockforProcurutment
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.BlockforProcurutment : false;
            }
            set
            {
                PurchaseRequirementMasterDTO.BlockforProcurutment = value;
            }
        }

        #region -------------- TaskNotification Properties---------------
        public int TaskNotificationMasterID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.TaskNotificationMasterID > 0) ? PurchaseRequirementMasterDTO.TaskNotificationMasterID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.TaskNotificationMasterID = value;
            }
        }
        //[Display(Name = "DisplayName_LeaveCode", ResourceType = typeof(AERP.Common.Resources))]
        //[Required(ErrorMessageResourceType = typeof(AERP.Common.Resources), ErrorMessageResourceName = "ValidationMessage_LeaveCodeRequired")]
        public string TaskCode
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.TaskCode : string.Empty;
            }
            set
            {
                PurchaseRequirementMasterDTO.TaskCode = value;
            }
        }

        public int TaskNotificationDetailsID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.TaskNotificationDetailsID > 0) ? PurchaseRequirementMasterDTO.TaskNotificationDetailsID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.TaskNotificationDetailsID = value;
            }
        }
        public int GeneralTaskReportingDetailsID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.GeneralTaskReportingDetailsID > 0) ? PurchaseRequirementMasterDTO.GeneralTaskReportingDetailsID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.GeneralTaskReportingDetailsID = value;
            }
        }

        public int PersonID
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.PersonID > 0) ? PurchaseRequirementMasterDTO.PersonID : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.PersonID = value;
            }
        }

        public int StageSequenceNumber
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null && PurchaseRequirementMasterDTO.StageSequenceNumber > 0) ? PurchaseRequirementMasterDTO.StageSequenceNumber : new int();
            }
            set
            {
                PurchaseRequirementMasterDTO.StageSequenceNumber = value;
            }
        }

        public bool IsLastRecord
        {
            get
            {
                return (PurchaseRequirementMasterDTO != null) ? PurchaseRequirementMasterDTO.IsLastRecord : false;
            }
            set
            {
                PurchaseRequirementMasterDTO.IsLastRecord = value;
            }
        }

        #endregion
       
    }
}
